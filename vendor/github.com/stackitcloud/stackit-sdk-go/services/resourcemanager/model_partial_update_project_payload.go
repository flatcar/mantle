/*
Resource Manager API

API v2 to manage resource containers - organizations, folders, projects incl. labels  ### Resource Management STACKIT resource management handles the terms _Organization_, _Folder_, _Project_, _Label_, and the hierarchical structure between them. Technically, organizations,  folders, and projects are _Resource Containers_ to which a _Label_ can be attached to. The STACKIT _Resource Manager_ provides CRUD endpoints to query and to modify the state.  ### Organizations STACKIT organizations are the base element to create and to use cloud-resources. An organization is bound to one customer account. Organizations have a lifecycle. - Organizations are always the root node in resource hierarchy and do not have a parent  ### Projects STACKIT projects are needed to use cloud-resources. Projects serve as wrapper for underlying technical structures and processes. Projects have a lifecycle. Projects compared to folders may have different policies. - Projects are optional, but mandatory for cloud-resource usage - A project can be created having either an organization, or a folder as parent - A project must not have a project as parent - Project names under the same parent must not be unique - Root organization cannot be changed  ### Label STACKIT labels are key-value pairs including a resource container reference. Labels can be defined and attached freely to resource containers by which resources can be organized and queried. - Policy-based, immutable labels may exists

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resourcemanager

import (
	"encoding/json"
)

// checks if the PartialUpdateProjectPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartialUpdateProjectPayload{}

/*
	types and functions for containerParentId
*/

// isNotNullableString
type PartialUpdateProjectPayloadGetContainerParentIdAttributeType = *string

func getPartialUpdateProjectPayloadGetContainerParentIdAttributeTypeOk(arg PartialUpdateProjectPayloadGetContainerParentIdAttributeType) (ret PartialUpdateProjectPayloadGetContainerParentIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPartialUpdateProjectPayloadGetContainerParentIdAttributeType(arg *PartialUpdateProjectPayloadGetContainerParentIdAttributeType, val PartialUpdateProjectPayloadGetContainerParentIdRetType) {
	*arg = &val
}

type PartialUpdateProjectPayloadGetContainerParentIdArgType = string
type PartialUpdateProjectPayloadGetContainerParentIdRetType = string

/*
	types and functions for labels
*/

// isContainer
type PartialUpdateProjectPayloadGetLabelsAttributeType = *map[string]string
type PartialUpdateProjectPayloadGetLabelsArgType = map[string]string
type PartialUpdateProjectPayloadGetLabelsRetType = map[string]string

func getPartialUpdateProjectPayloadGetLabelsAttributeTypeOk(arg PartialUpdateProjectPayloadGetLabelsAttributeType) (ret PartialUpdateProjectPayloadGetLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPartialUpdateProjectPayloadGetLabelsAttributeType(arg *PartialUpdateProjectPayloadGetLabelsAttributeType, val PartialUpdateProjectPayloadGetLabelsRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type PartialUpdateProjectPayloadGetNameAttributeType = *string

func getPartialUpdateProjectPayloadGetNameAttributeTypeOk(arg PartialUpdateProjectPayloadGetNameAttributeType) (ret PartialUpdateProjectPayloadGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPartialUpdateProjectPayloadGetNameAttributeType(arg *PartialUpdateProjectPayloadGetNameAttributeType, val PartialUpdateProjectPayloadGetNameRetType) {
	*arg = &val
}

type PartialUpdateProjectPayloadGetNameArgType = string
type PartialUpdateProjectPayloadGetNameRetType = string

// PartialUpdateProjectPayload struct for PartialUpdateProjectPayload
type PartialUpdateProjectPayload struct {
	// New parent identifier for the resource container - containerId as well as UUID identifier is supported.
	ContainerParentId PartialUpdateProjectPayloadGetContainerParentIdAttributeType `json:"containerParentId,omitempty"`
	// Labels are key-value string pairs that can be attached to a resource container. Some labels may be enforced via policies.  - A label key must match the regex `[A-ZÄÜÖa-zäüöß0-9_-]{1,64}`. - A label value must match the regex `^$|[A-ZÄÜÖa-zäüöß0-9_-]{1,64}`.
	Labels PartialUpdateProjectPayloadGetLabelsAttributeType `json:"labels,omitempty"`
	// New name for the resource container matching the regex `^[a-zA-ZäüöÄÜÖ0-9]( ?[a-zA-ZäüöÄÜÖß0-9_+&-]){0,39}$`.
	Name PartialUpdateProjectPayloadGetNameAttributeType `json:"name,omitempty"`
}

// NewPartialUpdateProjectPayload instantiates a new PartialUpdateProjectPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartialUpdateProjectPayload() *PartialUpdateProjectPayload {
	this := PartialUpdateProjectPayload{}
	return &this
}

// NewPartialUpdateProjectPayloadWithDefaults instantiates a new PartialUpdateProjectPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartialUpdateProjectPayloadWithDefaults() *PartialUpdateProjectPayload {
	this := PartialUpdateProjectPayload{}
	return &this
}

// GetContainerParentId returns the ContainerParentId field value if set, zero value otherwise.
func (o *PartialUpdateProjectPayload) GetContainerParentId() (res PartialUpdateProjectPayloadGetContainerParentIdRetType) {
	res, _ = o.GetContainerParentIdOk()
	return
}

// GetContainerParentIdOk returns a tuple with the ContainerParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartialUpdateProjectPayload) GetContainerParentIdOk() (ret PartialUpdateProjectPayloadGetContainerParentIdRetType, ok bool) {
	return getPartialUpdateProjectPayloadGetContainerParentIdAttributeTypeOk(o.ContainerParentId)
}

// HasContainerParentId returns a boolean if a field has been set.
func (o *PartialUpdateProjectPayload) HasContainerParentId() bool {
	_, ok := o.GetContainerParentIdOk()
	return ok
}

// SetContainerParentId gets a reference to the given string and assigns it to the ContainerParentId field.
func (o *PartialUpdateProjectPayload) SetContainerParentId(v PartialUpdateProjectPayloadGetContainerParentIdRetType) {
	setPartialUpdateProjectPayloadGetContainerParentIdAttributeType(&o.ContainerParentId, v)
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *PartialUpdateProjectPayload) GetLabels() (res PartialUpdateProjectPayloadGetLabelsRetType) {
	res, _ = o.GetLabelsOk()
	return
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartialUpdateProjectPayload) GetLabelsOk() (ret PartialUpdateProjectPayloadGetLabelsRetType, ok bool) {
	return getPartialUpdateProjectPayloadGetLabelsAttributeTypeOk(o.Labels)
}

// HasLabels returns a boolean if a field has been set.
func (o *PartialUpdateProjectPayload) HasLabels() bool {
	_, ok := o.GetLabelsOk()
	return ok
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *PartialUpdateProjectPayload) SetLabels(v PartialUpdateProjectPayloadGetLabelsRetType) {
	setPartialUpdateProjectPayloadGetLabelsAttributeType(&o.Labels, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PartialUpdateProjectPayload) GetName() (res PartialUpdateProjectPayloadGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartialUpdateProjectPayload) GetNameOk() (ret PartialUpdateProjectPayloadGetNameRetType, ok bool) {
	return getPartialUpdateProjectPayloadGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *PartialUpdateProjectPayload) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PartialUpdateProjectPayload) SetName(v PartialUpdateProjectPayloadGetNameRetType) {
	setPartialUpdateProjectPayloadGetNameAttributeType(&o.Name, v)
}

func (o PartialUpdateProjectPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getPartialUpdateProjectPayloadGetContainerParentIdAttributeTypeOk(o.ContainerParentId); ok {
		toSerialize["ContainerParentId"] = val
	}
	if val, ok := getPartialUpdateProjectPayloadGetLabelsAttributeTypeOk(o.Labels); ok {
		toSerialize["Labels"] = val
	}
	if val, ok := getPartialUpdateProjectPayloadGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullablePartialUpdateProjectPayload struct {
	value *PartialUpdateProjectPayload
	isSet bool
}

func (v NullablePartialUpdateProjectPayload) Get() *PartialUpdateProjectPayload {
	return v.value
}

func (v *NullablePartialUpdateProjectPayload) Set(val *PartialUpdateProjectPayload) {
	v.value = val
	v.isSet = true
}

func (v NullablePartialUpdateProjectPayload) IsSet() bool {
	return v.isSet
}

func (v *NullablePartialUpdateProjectPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartialUpdateProjectPayload(val *PartialUpdateProjectPayload) *NullablePartialUpdateProjectPayload {
	return &NullablePartialUpdateProjectPayload{value: val, isSet: true}
}

func (v NullablePartialUpdateProjectPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartialUpdateProjectPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
