/*
Resource Manager API

API v2 to manage resource containers - organizations, folders, projects incl. labels  ### Resource Management STACKIT resource management handles the terms _Organization_, _Folder_, _Project_, _Label_, and the hierarchical structure between them. Technically, organizations,  folders, and projects are _Resource Containers_ to which a _Label_ can be attached to. The STACKIT _Resource Manager_ provides CRUD endpoints to query and to modify the state.  ### Organizations STACKIT organizations are the base element to create and to use cloud-resources. An organization is bound to one customer account. Organizations have a lifecycle. - Organizations are always the root node in resource hierarchy and do not have a parent  ### Projects STACKIT projects are needed to use cloud-resources. Projects serve as wrapper for underlying technical structures and processes. Projects have a lifecycle. Projects compared to folders may have different policies. - Projects are optional, but mandatory for cloud-resource usage - A project can be created having either an organization, or a folder as parent - A project must not have a project as parent - Project names under the same parent must not be unique - Root organization cannot be changed  ### Label STACKIT labels are key-value pairs including a resource container reference. Labels can be defined and attached freely to resource containers by which resources can be organized and queried. - Policy-based, immutable labels may exists

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resourcemanager

import (
	"encoding/json"
	"time"
)

// checks if the GetProjectResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProjectResponse{}

/*
	types and functions for containerId
*/

// isNotNullableString
type GetProjectResponseGetContainerIdAttributeType = *string

func getGetProjectResponseGetContainerIdAttributeTypeOk(arg GetProjectResponseGetContainerIdAttributeType) (ret GetProjectResponseGetContainerIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetProjectResponseGetContainerIdAttributeType(arg *GetProjectResponseGetContainerIdAttributeType, val GetProjectResponseGetContainerIdRetType) {
	*arg = &val
}

type GetProjectResponseGetContainerIdArgType = string
type GetProjectResponseGetContainerIdRetType = string

/*
	types and functions for creationTime
*/

// isDateTime
type GetProjectResponseGetCreationTimeAttributeType = *time.Time
type GetProjectResponseGetCreationTimeArgType = time.Time
type GetProjectResponseGetCreationTimeRetType = time.Time

func getGetProjectResponseGetCreationTimeAttributeTypeOk(arg GetProjectResponseGetCreationTimeAttributeType) (ret GetProjectResponseGetCreationTimeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetProjectResponseGetCreationTimeAttributeType(arg *GetProjectResponseGetCreationTimeAttributeType, val GetProjectResponseGetCreationTimeRetType) {
	*arg = &val
}

/*
	types and functions for labels
*/

// isContainer
type GetProjectResponseGetLabelsAttributeType = *map[string]string
type GetProjectResponseGetLabelsArgType = map[string]string
type GetProjectResponseGetLabelsRetType = map[string]string

func getGetProjectResponseGetLabelsAttributeTypeOk(arg GetProjectResponseGetLabelsAttributeType) (ret GetProjectResponseGetLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetProjectResponseGetLabelsAttributeType(arg *GetProjectResponseGetLabelsAttributeType, val GetProjectResponseGetLabelsRetType) {
	*arg = &val
}

/*
	types and functions for lifecycleState
*/

// isEnumRef
type GetProjectResponseGetLifecycleStateAttributeType = *LifecycleState
type GetProjectResponseGetLifecycleStateArgType = LifecycleState
type GetProjectResponseGetLifecycleStateRetType = LifecycleState

func getGetProjectResponseGetLifecycleStateAttributeTypeOk(arg GetProjectResponseGetLifecycleStateAttributeType) (ret GetProjectResponseGetLifecycleStateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetProjectResponseGetLifecycleStateAttributeType(arg *GetProjectResponseGetLifecycleStateAttributeType, val GetProjectResponseGetLifecycleStateRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type GetProjectResponseGetNameAttributeType = *string

func getGetProjectResponseGetNameAttributeTypeOk(arg GetProjectResponseGetNameAttributeType) (ret GetProjectResponseGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetProjectResponseGetNameAttributeType(arg *GetProjectResponseGetNameAttributeType, val GetProjectResponseGetNameRetType) {
	*arg = &val
}

type GetProjectResponseGetNameArgType = string
type GetProjectResponseGetNameRetType = string

/*
	types and functions for parent
*/

// isModel
type GetProjectResponseGetParentAttributeType = *Parent
type GetProjectResponseGetParentArgType = Parent
type GetProjectResponseGetParentRetType = Parent

func getGetProjectResponseGetParentAttributeTypeOk(arg GetProjectResponseGetParentAttributeType) (ret GetProjectResponseGetParentRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetProjectResponseGetParentAttributeType(arg *GetProjectResponseGetParentAttributeType, val GetProjectResponseGetParentRetType) {
	*arg = &val
}

/*
	types and functions for parents
*/

// isArray
type GetProjectResponseGetParentsAttributeType = *[]ParentListInner
type GetProjectResponseGetParentsArgType = []ParentListInner
type GetProjectResponseGetParentsRetType = []ParentListInner

func getGetProjectResponseGetParentsAttributeTypeOk(arg GetProjectResponseGetParentsAttributeType) (ret GetProjectResponseGetParentsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetProjectResponseGetParentsAttributeType(arg *GetProjectResponseGetParentsAttributeType, val GetProjectResponseGetParentsRetType) {
	*arg = &val
}

/*
	types and functions for projectId
*/

// isNotNullableString
type GetProjectResponseGetProjectIdAttributeType = *string

func getGetProjectResponseGetProjectIdAttributeTypeOk(arg GetProjectResponseGetProjectIdAttributeType) (ret GetProjectResponseGetProjectIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetProjectResponseGetProjectIdAttributeType(arg *GetProjectResponseGetProjectIdAttributeType, val GetProjectResponseGetProjectIdRetType) {
	*arg = &val
}

type GetProjectResponseGetProjectIdArgType = string
type GetProjectResponseGetProjectIdRetType = string

/*
	types and functions for updateTime
*/

// isDateTime
type GetProjectResponseGetUpdateTimeAttributeType = *time.Time
type GetProjectResponseGetUpdateTimeArgType = time.Time
type GetProjectResponseGetUpdateTimeRetType = time.Time

func getGetProjectResponseGetUpdateTimeAttributeTypeOk(arg GetProjectResponseGetUpdateTimeAttributeType) (ret GetProjectResponseGetUpdateTimeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetProjectResponseGetUpdateTimeAttributeType(arg *GetProjectResponseGetUpdateTimeAttributeType, val GetProjectResponseGetUpdateTimeRetType) {
	*arg = &val
}

// GetProjectResponse struct for GetProjectResponse
type GetProjectResponse struct {
	// Globally unique identifier.
	// REQUIRED
	ContainerId GetProjectResponseGetContainerIdAttributeType `json:"containerId" required:"true"`
	// Timestamp at which the project was created.
	// REQUIRED
	CreationTime GetProjectResponseGetCreationTimeAttributeType `json:"creationTime" required:"true"`
	// Labels are key-value string pairs that can be attached to a resource container. Some labels may be enforced via policies.  - A label key must match the regex `[A-ZÄÜÖa-zäüöß0-9_-]{1,64}`. - A label value must match the regex `^$|[A-ZÄÜÖa-zäüöß0-9_-]{1,64}`.
	Labels GetProjectResponseGetLabelsAttributeType `json:"labels,omitempty"`
	// REQUIRED
	LifecycleState GetProjectResponseGetLifecycleStateAttributeType `json:"lifecycleState" required:"true"`
	// Project name.
	// REQUIRED
	Name GetProjectResponseGetNameAttributeType `json:"name" required:"true"`
	// REQUIRED
	Parent  GetProjectResponseGetParentAttributeType  `json:"parent" required:"true"`
	Parents GetProjectResponseGetParentsAttributeType `json:"parents,omitempty"`
	// Globally unique identifier.
	// REQUIRED
	ProjectId GetProjectResponseGetProjectIdAttributeType `json:"projectId" required:"true"`
	// Timestamp at which the project was last modified.
	// REQUIRED
	UpdateTime GetProjectResponseGetUpdateTimeAttributeType `json:"updateTime" required:"true"`
}

type _GetProjectResponse GetProjectResponse

// NewGetProjectResponse instantiates a new GetProjectResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProjectResponse(containerId GetProjectResponseGetContainerIdArgType, creationTime GetProjectResponseGetCreationTimeArgType, lifecycleState GetProjectResponseGetLifecycleStateArgType, name GetProjectResponseGetNameArgType, parent GetProjectResponseGetParentArgType, projectId GetProjectResponseGetProjectIdArgType, updateTime GetProjectResponseGetUpdateTimeArgType) *GetProjectResponse {
	this := GetProjectResponse{}
	setGetProjectResponseGetContainerIdAttributeType(&this.ContainerId, containerId)
	setGetProjectResponseGetCreationTimeAttributeType(&this.CreationTime, creationTime)
	setGetProjectResponseGetLifecycleStateAttributeType(&this.LifecycleState, lifecycleState)
	setGetProjectResponseGetNameAttributeType(&this.Name, name)
	setGetProjectResponseGetParentAttributeType(&this.Parent, parent)
	setGetProjectResponseGetProjectIdAttributeType(&this.ProjectId, projectId)
	setGetProjectResponseGetUpdateTimeAttributeType(&this.UpdateTime, updateTime)
	return &this
}

// NewGetProjectResponseWithDefaults instantiates a new GetProjectResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProjectResponseWithDefaults() *GetProjectResponse {
	this := GetProjectResponse{}
	return &this
}

// GetContainerId returns the ContainerId field value
func (o *GetProjectResponse) GetContainerId() (ret GetProjectResponseGetContainerIdRetType) {
	ret, _ = o.GetContainerIdOk()
	return ret
}

// GetContainerIdOk returns a tuple with the ContainerId field value
// and a boolean to check if the value has been set.
func (o *GetProjectResponse) GetContainerIdOk() (ret GetProjectResponseGetContainerIdRetType, ok bool) {
	return getGetProjectResponseGetContainerIdAttributeTypeOk(o.ContainerId)
}

// SetContainerId sets field value
func (o *GetProjectResponse) SetContainerId(v GetProjectResponseGetContainerIdRetType) {
	setGetProjectResponseGetContainerIdAttributeType(&o.ContainerId, v)
}

// GetCreationTime returns the CreationTime field value
func (o *GetProjectResponse) GetCreationTime() (ret GetProjectResponseGetCreationTimeRetType) {
	ret, _ = o.GetCreationTimeOk()
	return ret
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *GetProjectResponse) GetCreationTimeOk() (ret GetProjectResponseGetCreationTimeRetType, ok bool) {
	return getGetProjectResponseGetCreationTimeAttributeTypeOk(o.CreationTime)
}

// SetCreationTime sets field value
func (o *GetProjectResponse) SetCreationTime(v GetProjectResponseGetCreationTimeRetType) {
	setGetProjectResponseGetCreationTimeAttributeType(&o.CreationTime, v)
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *GetProjectResponse) GetLabels() (res GetProjectResponseGetLabelsRetType) {
	res, _ = o.GetLabelsOk()
	return
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectResponse) GetLabelsOk() (ret GetProjectResponseGetLabelsRetType, ok bool) {
	return getGetProjectResponseGetLabelsAttributeTypeOk(o.Labels)
}

// HasLabels returns a boolean if a field has been set.
func (o *GetProjectResponse) HasLabels() bool {
	_, ok := o.GetLabelsOk()
	return ok
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *GetProjectResponse) SetLabels(v GetProjectResponseGetLabelsRetType) {
	setGetProjectResponseGetLabelsAttributeType(&o.Labels, v)
}

// GetLifecycleState returns the LifecycleState field value
func (o *GetProjectResponse) GetLifecycleState() (ret GetProjectResponseGetLifecycleStateRetType) {
	ret, _ = o.GetLifecycleStateOk()
	return ret
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value
// and a boolean to check if the value has been set.
func (o *GetProjectResponse) GetLifecycleStateOk() (ret GetProjectResponseGetLifecycleStateRetType, ok bool) {
	return getGetProjectResponseGetLifecycleStateAttributeTypeOk(o.LifecycleState)
}

// SetLifecycleState sets field value
func (o *GetProjectResponse) SetLifecycleState(v GetProjectResponseGetLifecycleStateRetType) {
	setGetProjectResponseGetLifecycleStateAttributeType(&o.LifecycleState, v)
}

// GetName returns the Name field value
func (o *GetProjectResponse) GetName() (ret GetProjectResponseGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetProjectResponse) GetNameOk() (ret GetProjectResponseGetNameRetType, ok bool) {
	return getGetProjectResponseGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *GetProjectResponse) SetName(v GetProjectResponseGetNameRetType) {
	setGetProjectResponseGetNameAttributeType(&o.Name, v)
}

// GetParent returns the Parent field value
func (o *GetProjectResponse) GetParent() (ret GetProjectResponseGetParentRetType) {
	ret, _ = o.GetParentOk()
	return ret
}

// GetParentOk returns a tuple with the Parent field value
// and a boolean to check if the value has been set.
func (o *GetProjectResponse) GetParentOk() (ret GetProjectResponseGetParentRetType, ok bool) {
	return getGetProjectResponseGetParentAttributeTypeOk(o.Parent)
}

// SetParent sets field value
func (o *GetProjectResponse) SetParent(v GetProjectResponseGetParentRetType) {
	setGetProjectResponseGetParentAttributeType(&o.Parent, v)
}

// GetParents returns the Parents field value if set, zero value otherwise.
func (o *GetProjectResponse) GetParents() (res GetProjectResponseGetParentsRetType) {
	res, _ = o.GetParentsOk()
	return
}

// GetParentsOk returns a tuple with the Parents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectResponse) GetParentsOk() (ret GetProjectResponseGetParentsRetType, ok bool) {
	return getGetProjectResponseGetParentsAttributeTypeOk(o.Parents)
}

// HasParents returns a boolean if a field has been set.
func (o *GetProjectResponse) HasParents() bool {
	_, ok := o.GetParentsOk()
	return ok
}

// SetParents gets a reference to the given []ParentListInner and assigns it to the Parents field.
func (o *GetProjectResponse) SetParents(v GetProjectResponseGetParentsRetType) {
	setGetProjectResponseGetParentsAttributeType(&o.Parents, v)
}

// GetProjectId returns the ProjectId field value
func (o *GetProjectResponse) GetProjectId() (ret GetProjectResponseGetProjectIdRetType) {
	ret, _ = o.GetProjectIdOk()
	return ret
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *GetProjectResponse) GetProjectIdOk() (ret GetProjectResponseGetProjectIdRetType, ok bool) {
	return getGetProjectResponseGetProjectIdAttributeTypeOk(o.ProjectId)
}

// SetProjectId sets field value
func (o *GetProjectResponse) SetProjectId(v GetProjectResponseGetProjectIdRetType) {
	setGetProjectResponseGetProjectIdAttributeType(&o.ProjectId, v)
}

// GetUpdateTime returns the UpdateTime field value
func (o *GetProjectResponse) GetUpdateTime() (ret GetProjectResponseGetUpdateTimeRetType) {
	ret, _ = o.GetUpdateTimeOk()
	return ret
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value
// and a boolean to check if the value has been set.
func (o *GetProjectResponse) GetUpdateTimeOk() (ret GetProjectResponseGetUpdateTimeRetType, ok bool) {
	return getGetProjectResponseGetUpdateTimeAttributeTypeOk(o.UpdateTime)
}

// SetUpdateTime sets field value
func (o *GetProjectResponse) SetUpdateTime(v GetProjectResponseGetUpdateTimeRetType) {
	setGetProjectResponseGetUpdateTimeAttributeType(&o.UpdateTime, v)
}

func (o GetProjectResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGetProjectResponseGetContainerIdAttributeTypeOk(o.ContainerId); ok {
		toSerialize["ContainerId"] = val
	}
	if val, ok := getGetProjectResponseGetCreationTimeAttributeTypeOk(o.CreationTime); ok {
		toSerialize["CreationTime"] = val
	}
	if val, ok := getGetProjectResponseGetLabelsAttributeTypeOk(o.Labels); ok {
		toSerialize["Labels"] = val
	}
	if val, ok := getGetProjectResponseGetLifecycleStateAttributeTypeOk(o.LifecycleState); ok {
		toSerialize["LifecycleState"] = val
	}
	if val, ok := getGetProjectResponseGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getGetProjectResponseGetParentAttributeTypeOk(o.Parent); ok {
		toSerialize["Parent"] = val
	}
	if val, ok := getGetProjectResponseGetParentsAttributeTypeOk(o.Parents); ok {
		toSerialize["Parents"] = val
	}
	if val, ok := getGetProjectResponseGetProjectIdAttributeTypeOk(o.ProjectId); ok {
		toSerialize["ProjectId"] = val
	}
	if val, ok := getGetProjectResponseGetUpdateTimeAttributeTypeOk(o.UpdateTime); ok {
		toSerialize["UpdateTime"] = val
	}
	return toSerialize, nil
}

type NullableGetProjectResponse struct {
	value *GetProjectResponse
	isSet bool
}

func (v NullableGetProjectResponse) Get() *GetProjectResponse {
	return v.value
}

func (v *NullableGetProjectResponse) Set(val *GetProjectResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProjectResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProjectResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProjectResponse(val *GetProjectResponse) *NullableGetProjectResponse {
	return &NullableGetProjectResponse{value: val, isSet: true}
}

func (v NullableGetProjectResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProjectResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
