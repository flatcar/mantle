/*
Resource Manager API

API v2 to manage resource containers - organizations, folders, projects incl. labels  ### Resource Management STACKIT resource management handles the terms _Organization_, _Folder_, _Project_, _Label_, and the hierarchical structure between them. Technically, organizations,  folders, and projects are _Resource Containers_ to which a _Label_ can be attached to. The STACKIT _Resource Manager_ provides CRUD endpoints to query and to modify the state.  ### Organizations STACKIT organizations are the base element to create and to use cloud-resources. An organization is bound to one customer account. Organizations have a lifecycle. - Organizations are always the root node in resource hierarchy and do not have a parent  ### Projects STACKIT projects are needed to use cloud-resources. Projects serve as wrapper for underlying technical structures and processes. Projects have a lifecycle. Projects compared to folders may have different policies. - Projects are optional, but mandatory for cloud-resource usage - A project can be created having either an organization, or a folder as parent - A project must not have a project as parent - Project names under the same parent must not be unique - Root organization cannot be changed  ### Label STACKIT labels are key-value pairs including a resource container reference. Labels can be defined and attached freely to resource containers by which resources can be organized and queried. - Policy-based, immutable labels may exists

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resourcemanager

import (
	"encoding/json"
	"time"
)

// checks if the OrganizationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationResponse{}

/*
	types and functions for containerId
*/

// isNotNullableString
type OrganizationResponseGetContainerIdAttributeType = *string

func getOrganizationResponseGetContainerIdAttributeTypeOk(arg OrganizationResponseGetContainerIdAttributeType) (ret OrganizationResponseGetContainerIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setOrganizationResponseGetContainerIdAttributeType(arg *OrganizationResponseGetContainerIdAttributeType, val OrganizationResponseGetContainerIdRetType) {
	*arg = &val
}

type OrganizationResponseGetContainerIdArgType = string
type OrganizationResponseGetContainerIdRetType = string

/*
	types and functions for creationTime
*/

// isDateTime
type OrganizationResponseGetCreationTimeAttributeType = *time.Time
type OrganizationResponseGetCreationTimeArgType = time.Time
type OrganizationResponseGetCreationTimeRetType = time.Time

func getOrganizationResponseGetCreationTimeAttributeTypeOk(arg OrganizationResponseGetCreationTimeAttributeType) (ret OrganizationResponseGetCreationTimeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setOrganizationResponseGetCreationTimeAttributeType(arg *OrganizationResponseGetCreationTimeAttributeType, val OrganizationResponseGetCreationTimeRetType) {
	*arg = &val
}

/*
	types and functions for labels
*/

// isContainer
type OrganizationResponseGetLabelsAttributeType = *map[string]string
type OrganizationResponseGetLabelsArgType = map[string]string
type OrganizationResponseGetLabelsRetType = map[string]string

func getOrganizationResponseGetLabelsAttributeTypeOk(arg OrganizationResponseGetLabelsAttributeType) (ret OrganizationResponseGetLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setOrganizationResponseGetLabelsAttributeType(arg *OrganizationResponseGetLabelsAttributeType, val OrganizationResponseGetLabelsRetType) {
	*arg = &val
}

/*
	types and functions for lifecycleState
*/

// isEnumRef
type OrganizationResponseGetLifecycleStateAttributeType = *LifecycleState
type OrganizationResponseGetLifecycleStateArgType = LifecycleState
type OrganizationResponseGetLifecycleStateRetType = LifecycleState

func getOrganizationResponseGetLifecycleStateAttributeTypeOk(arg OrganizationResponseGetLifecycleStateAttributeType) (ret OrganizationResponseGetLifecycleStateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setOrganizationResponseGetLifecycleStateAttributeType(arg *OrganizationResponseGetLifecycleStateAttributeType, val OrganizationResponseGetLifecycleStateRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type OrganizationResponseGetNameAttributeType = *string

func getOrganizationResponseGetNameAttributeTypeOk(arg OrganizationResponseGetNameAttributeType) (ret OrganizationResponseGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setOrganizationResponseGetNameAttributeType(arg *OrganizationResponseGetNameAttributeType, val OrganizationResponseGetNameRetType) {
	*arg = &val
}

type OrganizationResponseGetNameArgType = string
type OrganizationResponseGetNameRetType = string

/*
	types and functions for organizationId
*/

// isNotNullableString
type OrganizationResponseGetOrganizationIdAttributeType = *string

func getOrganizationResponseGetOrganizationIdAttributeTypeOk(arg OrganizationResponseGetOrganizationIdAttributeType) (ret OrganizationResponseGetOrganizationIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setOrganizationResponseGetOrganizationIdAttributeType(arg *OrganizationResponseGetOrganizationIdAttributeType, val OrganizationResponseGetOrganizationIdRetType) {
	*arg = &val
}

type OrganizationResponseGetOrganizationIdArgType = string
type OrganizationResponseGetOrganizationIdRetType = string

/*
	types and functions for updateTime
*/

// isDateTime
type OrganizationResponseGetUpdateTimeAttributeType = *time.Time
type OrganizationResponseGetUpdateTimeArgType = time.Time
type OrganizationResponseGetUpdateTimeRetType = time.Time

func getOrganizationResponseGetUpdateTimeAttributeTypeOk(arg OrganizationResponseGetUpdateTimeAttributeType) (ret OrganizationResponseGetUpdateTimeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setOrganizationResponseGetUpdateTimeAttributeType(arg *OrganizationResponseGetUpdateTimeAttributeType, val OrganizationResponseGetUpdateTimeRetType) {
	*arg = &val
}

// OrganizationResponse struct for OrganizationResponse
type OrganizationResponse struct {
	// Globally unique, user-friendly identifier.
	// REQUIRED
	ContainerId OrganizationResponseGetContainerIdAttributeType `json:"containerId" required:"true"`
	// Timestamp at which the organization was created.
	// REQUIRED
	CreationTime OrganizationResponseGetCreationTimeAttributeType `json:"creationTime" required:"true"`
	// Labels are key-value string pairs that can be attached to a resource container. Some labels may be enforced via policies.  - A label key must match the regex `[A-ZÄÜÖa-zäüöß0-9_-]{1,64}`. - A label value must match the regex `^$|[A-ZÄÜÖa-zäüöß0-9_-]{1,64}`.
	Labels OrganizationResponseGetLabelsAttributeType `json:"labels,omitempty"`
	// REQUIRED
	LifecycleState OrganizationResponseGetLifecycleStateAttributeType `json:"lifecycleState" required:"true"`
	// Organization name.
	// REQUIRED
	Name OrganizationResponseGetNameAttributeType `json:"name" required:"true"`
	// Globally unique, organization identifier.
	// REQUIRED
	OrganizationId OrganizationResponseGetOrganizationIdAttributeType `json:"organizationId" required:"true"`
	// Timestamp at which the organization was last modified.
	// REQUIRED
	UpdateTime OrganizationResponseGetUpdateTimeAttributeType `json:"updateTime" required:"true"`
}

type _OrganizationResponse OrganizationResponse

// NewOrganizationResponse instantiates a new OrganizationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationResponse(containerId OrganizationResponseGetContainerIdArgType, creationTime OrganizationResponseGetCreationTimeArgType, lifecycleState OrganizationResponseGetLifecycleStateArgType, name OrganizationResponseGetNameArgType, organizationId OrganizationResponseGetOrganizationIdArgType, updateTime OrganizationResponseGetUpdateTimeArgType) *OrganizationResponse {
	this := OrganizationResponse{}
	setOrganizationResponseGetContainerIdAttributeType(&this.ContainerId, containerId)
	setOrganizationResponseGetCreationTimeAttributeType(&this.CreationTime, creationTime)
	setOrganizationResponseGetLifecycleStateAttributeType(&this.LifecycleState, lifecycleState)
	setOrganizationResponseGetNameAttributeType(&this.Name, name)
	setOrganizationResponseGetOrganizationIdAttributeType(&this.OrganizationId, organizationId)
	setOrganizationResponseGetUpdateTimeAttributeType(&this.UpdateTime, updateTime)
	return &this
}

// NewOrganizationResponseWithDefaults instantiates a new OrganizationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationResponseWithDefaults() *OrganizationResponse {
	this := OrganizationResponse{}
	return &this
}

// GetContainerId returns the ContainerId field value
func (o *OrganizationResponse) GetContainerId() (ret OrganizationResponseGetContainerIdRetType) {
	ret, _ = o.GetContainerIdOk()
	return ret
}

// GetContainerIdOk returns a tuple with the ContainerId field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetContainerIdOk() (ret OrganizationResponseGetContainerIdRetType, ok bool) {
	return getOrganizationResponseGetContainerIdAttributeTypeOk(o.ContainerId)
}

// SetContainerId sets field value
func (o *OrganizationResponse) SetContainerId(v OrganizationResponseGetContainerIdRetType) {
	setOrganizationResponseGetContainerIdAttributeType(&o.ContainerId, v)
}

// GetCreationTime returns the CreationTime field value
func (o *OrganizationResponse) GetCreationTime() (ret OrganizationResponseGetCreationTimeRetType) {
	ret, _ = o.GetCreationTimeOk()
	return ret
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetCreationTimeOk() (ret OrganizationResponseGetCreationTimeRetType, ok bool) {
	return getOrganizationResponseGetCreationTimeAttributeTypeOk(o.CreationTime)
}

// SetCreationTime sets field value
func (o *OrganizationResponse) SetCreationTime(v OrganizationResponseGetCreationTimeRetType) {
	setOrganizationResponseGetCreationTimeAttributeType(&o.CreationTime, v)
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *OrganizationResponse) GetLabels() (res OrganizationResponseGetLabelsRetType) {
	res, _ = o.GetLabelsOk()
	return
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetLabelsOk() (ret OrganizationResponseGetLabelsRetType, ok bool) {
	return getOrganizationResponseGetLabelsAttributeTypeOk(o.Labels)
}

// HasLabels returns a boolean if a field has been set.
func (o *OrganizationResponse) HasLabels() bool {
	_, ok := o.GetLabelsOk()
	return ok
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *OrganizationResponse) SetLabels(v OrganizationResponseGetLabelsRetType) {
	setOrganizationResponseGetLabelsAttributeType(&o.Labels, v)
}

// GetLifecycleState returns the LifecycleState field value
func (o *OrganizationResponse) GetLifecycleState() (ret OrganizationResponseGetLifecycleStateRetType) {
	ret, _ = o.GetLifecycleStateOk()
	return ret
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetLifecycleStateOk() (ret OrganizationResponseGetLifecycleStateRetType, ok bool) {
	return getOrganizationResponseGetLifecycleStateAttributeTypeOk(o.LifecycleState)
}

// SetLifecycleState sets field value
func (o *OrganizationResponse) SetLifecycleState(v OrganizationResponseGetLifecycleStateRetType) {
	setOrganizationResponseGetLifecycleStateAttributeType(&o.LifecycleState, v)
}

// GetName returns the Name field value
func (o *OrganizationResponse) GetName() (ret OrganizationResponseGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetNameOk() (ret OrganizationResponseGetNameRetType, ok bool) {
	return getOrganizationResponseGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *OrganizationResponse) SetName(v OrganizationResponseGetNameRetType) {
	setOrganizationResponseGetNameAttributeType(&o.Name, v)
}

// GetOrganizationId returns the OrganizationId field value
func (o *OrganizationResponse) GetOrganizationId() (ret OrganizationResponseGetOrganizationIdRetType) {
	ret, _ = o.GetOrganizationIdOk()
	return ret
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetOrganizationIdOk() (ret OrganizationResponseGetOrganizationIdRetType, ok bool) {
	return getOrganizationResponseGetOrganizationIdAttributeTypeOk(o.OrganizationId)
}

// SetOrganizationId sets field value
func (o *OrganizationResponse) SetOrganizationId(v OrganizationResponseGetOrganizationIdRetType) {
	setOrganizationResponseGetOrganizationIdAttributeType(&o.OrganizationId, v)
}

// GetUpdateTime returns the UpdateTime field value
func (o *OrganizationResponse) GetUpdateTime() (ret OrganizationResponseGetUpdateTimeRetType) {
	ret, _ = o.GetUpdateTimeOk()
	return ret
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetUpdateTimeOk() (ret OrganizationResponseGetUpdateTimeRetType, ok bool) {
	return getOrganizationResponseGetUpdateTimeAttributeTypeOk(o.UpdateTime)
}

// SetUpdateTime sets field value
func (o *OrganizationResponse) SetUpdateTime(v OrganizationResponseGetUpdateTimeRetType) {
	setOrganizationResponseGetUpdateTimeAttributeType(&o.UpdateTime, v)
}

func (o OrganizationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getOrganizationResponseGetContainerIdAttributeTypeOk(o.ContainerId); ok {
		toSerialize["ContainerId"] = val
	}
	if val, ok := getOrganizationResponseGetCreationTimeAttributeTypeOk(o.CreationTime); ok {
		toSerialize["CreationTime"] = val
	}
	if val, ok := getOrganizationResponseGetLabelsAttributeTypeOk(o.Labels); ok {
		toSerialize["Labels"] = val
	}
	if val, ok := getOrganizationResponseGetLifecycleStateAttributeTypeOk(o.LifecycleState); ok {
		toSerialize["LifecycleState"] = val
	}
	if val, ok := getOrganizationResponseGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getOrganizationResponseGetOrganizationIdAttributeTypeOk(o.OrganizationId); ok {
		toSerialize["OrganizationId"] = val
	}
	if val, ok := getOrganizationResponseGetUpdateTimeAttributeTypeOk(o.UpdateTime); ok {
		toSerialize["UpdateTime"] = val
	}
	return toSerialize, nil
}

type NullableOrganizationResponse struct {
	value *OrganizationResponse
	isSet bool
}

func (v NullableOrganizationResponse) Get() *OrganizationResponse {
	return v.value
}

func (v *NullableOrganizationResponse) Set(val *OrganizationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationResponse(val *OrganizationResponse) *NullableOrganizationResponse {
	return &NullableOrganizationResponse{value: val, isSet: true}
}

func (v NullableOrganizationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
