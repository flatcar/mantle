/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the QuotaListBackups type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaListBackups{}

/*
	types and functions for limit
*/

// isLong
type QuotaListBackupsGetLimitAttributeType = *int64
type QuotaListBackupsGetLimitArgType = int64
type QuotaListBackupsGetLimitRetType = int64

func getQuotaListBackupsGetLimitAttributeTypeOk(arg QuotaListBackupsGetLimitAttributeType) (ret QuotaListBackupsGetLimitRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setQuotaListBackupsGetLimitAttributeType(arg *QuotaListBackupsGetLimitAttributeType, val QuotaListBackupsGetLimitRetType) {
	*arg = &val
}

/*
	types and functions for usage
*/

// isLong
type QuotaListBackupsGetUsageAttributeType = *int64
type QuotaListBackupsGetUsageArgType = int64
type QuotaListBackupsGetUsageRetType = int64

func getQuotaListBackupsGetUsageAttributeTypeOk(arg QuotaListBackupsGetUsageAttributeType) (ret QuotaListBackupsGetUsageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setQuotaListBackupsGetUsageAttributeType(arg *QuotaListBackupsGetUsageAttributeType, val QuotaListBackupsGetUsageRetType) {
	*arg = &val
}

// QuotaListBackups Number of backups.
type QuotaListBackups struct {
	// REQUIRED
	Limit QuotaListBackupsGetLimitAttributeType `json:"limit" required:"true"`
	// REQUIRED
	Usage QuotaListBackupsGetUsageAttributeType `json:"usage" required:"true"`
}

type _QuotaListBackups QuotaListBackups

// NewQuotaListBackups instantiates a new QuotaListBackups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaListBackups(limit QuotaListBackupsGetLimitArgType, usage QuotaListBackupsGetUsageArgType) *QuotaListBackups {
	this := QuotaListBackups{}
	setQuotaListBackupsGetLimitAttributeType(&this.Limit, limit)
	setQuotaListBackupsGetUsageAttributeType(&this.Usage, usage)
	return &this
}

// NewQuotaListBackupsWithDefaults instantiates a new QuotaListBackups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaListBackupsWithDefaults() *QuotaListBackups {
	this := QuotaListBackups{}
	return &this
}

// GetLimit returns the Limit field value
func (o *QuotaListBackups) GetLimit() (ret QuotaListBackupsGetLimitRetType) {
	ret, _ = o.GetLimitOk()
	return ret
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *QuotaListBackups) GetLimitOk() (ret QuotaListBackupsGetLimitRetType, ok bool) {
	return getQuotaListBackupsGetLimitAttributeTypeOk(o.Limit)
}

// SetLimit sets field value
func (o *QuotaListBackups) SetLimit(v QuotaListBackupsGetLimitRetType) {
	setQuotaListBackupsGetLimitAttributeType(&o.Limit, v)
}

// GetUsage returns the Usage field value
func (o *QuotaListBackups) GetUsage() (ret QuotaListBackupsGetUsageRetType) {
	ret, _ = o.GetUsageOk()
	return ret
}

// GetUsageOk returns a tuple with the Usage field value
// and a boolean to check if the value has been set.
func (o *QuotaListBackups) GetUsageOk() (ret QuotaListBackupsGetUsageRetType, ok bool) {
	return getQuotaListBackupsGetUsageAttributeTypeOk(o.Usage)
}

// SetUsage sets field value
func (o *QuotaListBackups) SetUsage(v QuotaListBackupsGetUsageRetType) {
	setQuotaListBackupsGetUsageAttributeType(&o.Usage, v)
}

func (o QuotaListBackups) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getQuotaListBackupsGetLimitAttributeTypeOk(o.Limit); ok {
		toSerialize["Limit"] = val
	}
	if val, ok := getQuotaListBackupsGetUsageAttributeTypeOk(o.Usage); ok {
		toSerialize["Usage"] = val
	}
	return toSerialize, nil
}

type NullableQuotaListBackups struct {
	value *QuotaListBackups
	isSet bool
}

func (v NullableQuotaListBackups) Get() *QuotaListBackups {
	return v.value
}

func (v *NullableQuotaListBackups) Set(val *QuotaListBackups) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaListBackups) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaListBackups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaListBackups(val *QuotaListBackups) *NullableQuotaListBackups {
	return &NullableQuotaListBackups{value: val, isSet: true}
}

func (v NullableQuotaListBackups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaListBackups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
