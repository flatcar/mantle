/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the CreateAreaIPv4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAreaIPv4{}

/*
	types and functions for defaultNameservers
*/

// isArray
type CreateAreaIPv4GetDefaultNameserversAttributeType = *[]string
type CreateAreaIPv4GetDefaultNameserversArgType = []string
type CreateAreaIPv4GetDefaultNameserversRetType = []string

func getCreateAreaIPv4GetDefaultNameserversAttributeTypeOk(arg CreateAreaIPv4GetDefaultNameserversAttributeType) (ret CreateAreaIPv4GetDefaultNameserversRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateAreaIPv4GetDefaultNameserversAttributeType(arg *CreateAreaIPv4GetDefaultNameserversAttributeType, val CreateAreaIPv4GetDefaultNameserversRetType) {
	*arg = &val
}

/*
	types and functions for networkRanges
*/

// isArray
type CreateAreaIPv4GetNetworkRangesAttributeType = *[]NetworkRange
type CreateAreaIPv4GetNetworkRangesArgType = []NetworkRange
type CreateAreaIPv4GetNetworkRangesRetType = []NetworkRange

func getCreateAreaIPv4GetNetworkRangesAttributeTypeOk(arg CreateAreaIPv4GetNetworkRangesAttributeType) (ret CreateAreaIPv4GetNetworkRangesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateAreaIPv4GetNetworkRangesAttributeType(arg *CreateAreaIPv4GetNetworkRangesAttributeType, val CreateAreaIPv4GetNetworkRangesRetType) {
	*arg = &val
}

/*
	types and functions for routes
*/

// isArray
type CreateAreaIPv4GetRoutesAttributeType = *[]Route
type CreateAreaIPv4GetRoutesArgType = []Route
type CreateAreaIPv4GetRoutesRetType = []Route

func getCreateAreaIPv4GetRoutesAttributeTypeOk(arg CreateAreaIPv4GetRoutesAttributeType) (ret CreateAreaIPv4GetRoutesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateAreaIPv4GetRoutesAttributeType(arg *CreateAreaIPv4GetRoutesAttributeType, val CreateAreaIPv4GetRoutesRetType) {
	*arg = &val
}

/*
	types and functions for transferNetwork
*/

// isNotNullableString
type CreateAreaIPv4GetTransferNetworkAttributeType = *string

func getCreateAreaIPv4GetTransferNetworkAttributeTypeOk(arg CreateAreaIPv4GetTransferNetworkAttributeType) (ret CreateAreaIPv4GetTransferNetworkRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateAreaIPv4GetTransferNetworkAttributeType(arg *CreateAreaIPv4GetTransferNetworkAttributeType, val CreateAreaIPv4GetTransferNetworkRetType) {
	*arg = &val
}

type CreateAreaIPv4GetTransferNetworkArgType = string
type CreateAreaIPv4GetTransferNetworkRetType = string

/*
	types and functions for defaultPrefixLen
*/

// isInteger
type CreateAreaIPv4GetDefaultPrefixLenAttributeType = *int64
type CreateAreaIPv4GetDefaultPrefixLenArgType = int64
type CreateAreaIPv4GetDefaultPrefixLenRetType = int64

func getCreateAreaIPv4GetDefaultPrefixLenAttributeTypeOk(arg CreateAreaIPv4GetDefaultPrefixLenAttributeType) (ret CreateAreaIPv4GetDefaultPrefixLenRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateAreaIPv4GetDefaultPrefixLenAttributeType(arg *CreateAreaIPv4GetDefaultPrefixLenAttributeType, val CreateAreaIPv4GetDefaultPrefixLenRetType) {
	*arg = &val
}

/*
	types and functions for maxPrefixLen
*/

// isInteger
type CreateAreaIPv4GetMaxPrefixLenAttributeType = *int64
type CreateAreaIPv4GetMaxPrefixLenArgType = int64
type CreateAreaIPv4GetMaxPrefixLenRetType = int64

func getCreateAreaIPv4GetMaxPrefixLenAttributeTypeOk(arg CreateAreaIPv4GetMaxPrefixLenAttributeType) (ret CreateAreaIPv4GetMaxPrefixLenRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateAreaIPv4GetMaxPrefixLenAttributeType(arg *CreateAreaIPv4GetMaxPrefixLenAttributeType, val CreateAreaIPv4GetMaxPrefixLenRetType) {
	*arg = &val
}

/*
	types and functions for minPrefixLen
*/

// isInteger
type CreateAreaIPv4GetMinPrefixLenAttributeType = *int64
type CreateAreaIPv4GetMinPrefixLenArgType = int64
type CreateAreaIPv4GetMinPrefixLenRetType = int64

func getCreateAreaIPv4GetMinPrefixLenAttributeTypeOk(arg CreateAreaIPv4GetMinPrefixLenAttributeType) (ret CreateAreaIPv4GetMinPrefixLenRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateAreaIPv4GetMinPrefixLenAttributeType(arg *CreateAreaIPv4GetMinPrefixLenAttributeType, val CreateAreaIPv4GetMinPrefixLenRetType) {
	*arg = &val
}

// CreateAreaIPv4 The config object for a IPv4 network area.
type CreateAreaIPv4 struct {
	DefaultNameservers CreateAreaIPv4GetDefaultNameserversAttributeType `json:"defaultNameservers,omitempty"`
	// A list of network ranges.
	// REQUIRED
	NetworkRanges CreateAreaIPv4GetNetworkRangesAttributeType `json:"networkRanges" required:"true"`
	// A list of routes.
	Routes CreateAreaIPv4GetRoutesAttributeType `json:"routes,omitempty"`
	// Classless Inter-Domain Routing (CIDR).
	// REQUIRED
	TransferNetwork CreateAreaIPv4GetTransferNetworkAttributeType `json:"transferNetwork" required:"true"`
	// The default prefix length for networks in the network area.
	DefaultPrefixLen CreateAreaIPv4GetDefaultPrefixLenAttributeType `json:"defaultPrefixLen,omitempty"`
	// The maximal prefix length for networks in the network area.
	MaxPrefixLen CreateAreaIPv4GetMaxPrefixLenAttributeType `json:"maxPrefixLen,omitempty"`
	// The minimal prefix length for networks in the network area.
	MinPrefixLen CreateAreaIPv4GetMinPrefixLenAttributeType `json:"minPrefixLen,omitempty"`
}

type _CreateAreaIPv4 CreateAreaIPv4

// NewCreateAreaIPv4 instantiates a new CreateAreaIPv4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAreaIPv4(networkRanges CreateAreaIPv4GetNetworkRangesArgType, transferNetwork CreateAreaIPv4GetTransferNetworkArgType) *CreateAreaIPv4 {
	this := CreateAreaIPv4{}
	setCreateAreaIPv4GetNetworkRangesAttributeType(&this.NetworkRanges, networkRanges)
	setCreateAreaIPv4GetTransferNetworkAttributeType(&this.TransferNetwork, transferNetwork)
	return &this
}

// NewCreateAreaIPv4WithDefaults instantiates a new CreateAreaIPv4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAreaIPv4WithDefaults() *CreateAreaIPv4 {
	this := CreateAreaIPv4{}
	var defaultPrefixLen int64 = 25
	this.DefaultPrefixLen = &defaultPrefixLen
	var maxPrefixLen int64 = 29
	this.MaxPrefixLen = &maxPrefixLen
	var minPrefixLen int64 = 24
	this.MinPrefixLen = &minPrefixLen
	return &this
}

// GetDefaultNameservers returns the DefaultNameservers field value if set, zero value otherwise.
func (o *CreateAreaIPv4) GetDefaultNameservers() (res CreateAreaIPv4GetDefaultNameserversRetType) {
	res, _ = o.GetDefaultNameserversOk()
	return
}

// GetDefaultNameserversOk returns a tuple with the DefaultNameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAreaIPv4) GetDefaultNameserversOk() (ret CreateAreaIPv4GetDefaultNameserversRetType, ok bool) {
	return getCreateAreaIPv4GetDefaultNameserversAttributeTypeOk(o.DefaultNameservers)
}

// HasDefaultNameservers returns a boolean if a field has been set.
func (o *CreateAreaIPv4) HasDefaultNameservers() bool {
	_, ok := o.GetDefaultNameserversOk()
	return ok
}

// SetDefaultNameservers gets a reference to the given []string and assigns it to the DefaultNameservers field.
func (o *CreateAreaIPv4) SetDefaultNameservers(v CreateAreaIPv4GetDefaultNameserversRetType) {
	setCreateAreaIPv4GetDefaultNameserversAttributeType(&o.DefaultNameservers, v)
}

// GetNetworkRanges returns the NetworkRanges field value
func (o *CreateAreaIPv4) GetNetworkRanges() (ret CreateAreaIPv4GetNetworkRangesRetType) {
	ret, _ = o.GetNetworkRangesOk()
	return ret
}

// GetNetworkRangesOk returns a tuple with the NetworkRanges field value
// and a boolean to check if the value has been set.
func (o *CreateAreaIPv4) GetNetworkRangesOk() (ret CreateAreaIPv4GetNetworkRangesRetType, ok bool) {
	return getCreateAreaIPv4GetNetworkRangesAttributeTypeOk(o.NetworkRanges)
}

// SetNetworkRanges sets field value
func (o *CreateAreaIPv4) SetNetworkRanges(v CreateAreaIPv4GetNetworkRangesRetType) {
	setCreateAreaIPv4GetNetworkRangesAttributeType(&o.NetworkRanges, v)
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *CreateAreaIPv4) GetRoutes() (res CreateAreaIPv4GetRoutesRetType) {
	res, _ = o.GetRoutesOk()
	return
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAreaIPv4) GetRoutesOk() (ret CreateAreaIPv4GetRoutesRetType, ok bool) {
	return getCreateAreaIPv4GetRoutesAttributeTypeOk(o.Routes)
}

// HasRoutes returns a boolean if a field has been set.
func (o *CreateAreaIPv4) HasRoutes() bool {
	_, ok := o.GetRoutesOk()
	return ok
}

// SetRoutes gets a reference to the given []Route and assigns it to the Routes field.
func (o *CreateAreaIPv4) SetRoutes(v CreateAreaIPv4GetRoutesRetType) {
	setCreateAreaIPv4GetRoutesAttributeType(&o.Routes, v)
}

// GetTransferNetwork returns the TransferNetwork field value
func (o *CreateAreaIPv4) GetTransferNetwork() (ret CreateAreaIPv4GetTransferNetworkRetType) {
	ret, _ = o.GetTransferNetworkOk()
	return ret
}

// GetTransferNetworkOk returns a tuple with the TransferNetwork field value
// and a boolean to check if the value has been set.
func (o *CreateAreaIPv4) GetTransferNetworkOk() (ret CreateAreaIPv4GetTransferNetworkRetType, ok bool) {
	return getCreateAreaIPv4GetTransferNetworkAttributeTypeOk(o.TransferNetwork)
}

// SetTransferNetwork sets field value
func (o *CreateAreaIPv4) SetTransferNetwork(v CreateAreaIPv4GetTransferNetworkRetType) {
	setCreateAreaIPv4GetTransferNetworkAttributeType(&o.TransferNetwork, v)
}

// GetDefaultPrefixLen returns the DefaultPrefixLen field value if set, zero value otherwise.
func (o *CreateAreaIPv4) GetDefaultPrefixLen() (res CreateAreaIPv4GetDefaultPrefixLenRetType) {
	res, _ = o.GetDefaultPrefixLenOk()
	return
}

// GetDefaultPrefixLenOk returns a tuple with the DefaultPrefixLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAreaIPv4) GetDefaultPrefixLenOk() (ret CreateAreaIPv4GetDefaultPrefixLenRetType, ok bool) {
	return getCreateAreaIPv4GetDefaultPrefixLenAttributeTypeOk(o.DefaultPrefixLen)
}

// HasDefaultPrefixLen returns a boolean if a field has been set.
func (o *CreateAreaIPv4) HasDefaultPrefixLen() bool {
	_, ok := o.GetDefaultPrefixLenOk()
	return ok
}

// SetDefaultPrefixLen gets a reference to the given int64 and assigns it to the DefaultPrefixLen field.
func (o *CreateAreaIPv4) SetDefaultPrefixLen(v CreateAreaIPv4GetDefaultPrefixLenRetType) {
	setCreateAreaIPv4GetDefaultPrefixLenAttributeType(&o.DefaultPrefixLen, v)
}

// GetMaxPrefixLen returns the MaxPrefixLen field value if set, zero value otherwise.
func (o *CreateAreaIPv4) GetMaxPrefixLen() (res CreateAreaIPv4GetMaxPrefixLenRetType) {
	res, _ = o.GetMaxPrefixLenOk()
	return
}

// GetMaxPrefixLenOk returns a tuple with the MaxPrefixLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAreaIPv4) GetMaxPrefixLenOk() (ret CreateAreaIPv4GetMaxPrefixLenRetType, ok bool) {
	return getCreateAreaIPv4GetMaxPrefixLenAttributeTypeOk(o.MaxPrefixLen)
}

// HasMaxPrefixLen returns a boolean if a field has been set.
func (o *CreateAreaIPv4) HasMaxPrefixLen() bool {
	_, ok := o.GetMaxPrefixLenOk()
	return ok
}

// SetMaxPrefixLen gets a reference to the given int64 and assigns it to the MaxPrefixLen field.
func (o *CreateAreaIPv4) SetMaxPrefixLen(v CreateAreaIPv4GetMaxPrefixLenRetType) {
	setCreateAreaIPv4GetMaxPrefixLenAttributeType(&o.MaxPrefixLen, v)
}

// GetMinPrefixLen returns the MinPrefixLen field value if set, zero value otherwise.
func (o *CreateAreaIPv4) GetMinPrefixLen() (res CreateAreaIPv4GetMinPrefixLenRetType) {
	res, _ = o.GetMinPrefixLenOk()
	return
}

// GetMinPrefixLenOk returns a tuple with the MinPrefixLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAreaIPv4) GetMinPrefixLenOk() (ret CreateAreaIPv4GetMinPrefixLenRetType, ok bool) {
	return getCreateAreaIPv4GetMinPrefixLenAttributeTypeOk(o.MinPrefixLen)
}

// HasMinPrefixLen returns a boolean if a field has been set.
func (o *CreateAreaIPv4) HasMinPrefixLen() bool {
	_, ok := o.GetMinPrefixLenOk()
	return ok
}

// SetMinPrefixLen gets a reference to the given int64 and assigns it to the MinPrefixLen field.
func (o *CreateAreaIPv4) SetMinPrefixLen(v CreateAreaIPv4GetMinPrefixLenRetType) {
	setCreateAreaIPv4GetMinPrefixLenAttributeType(&o.MinPrefixLen, v)
}

func (o CreateAreaIPv4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateAreaIPv4GetDefaultNameserversAttributeTypeOk(o.DefaultNameservers); ok {
		toSerialize["DefaultNameservers"] = val
	}
	if val, ok := getCreateAreaIPv4GetNetworkRangesAttributeTypeOk(o.NetworkRanges); ok {
		toSerialize["NetworkRanges"] = val
	}
	if val, ok := getCreateAreaIPv4GetRoutesAttributeTypeOk(o.Routes); ok {
		toSerialize["Routes"] = val
	}
	if val, ok := getCreateAreaIPv4GetTransferNetworkAttributeTypeOk(o.TransferNetwork); ok {
		toSerialize["TransferNetwork"] = val
	}
	if val, ok := getCreateAreaIPv4GetDefaultPrefixLenAttributeTypeOk(o.DefaultPrefixLen); ok {
		toSerialize["DefaultPrefixLen"] = val
	}
	if val, ok := getCreateAreaIPv4GetMaxPrefixLenAttributeTypeOk(o.MaxPrefixLen); ok {
		toSerialize["MaxPrefixLen"] = val
	}
	if val, ok := getCreateAreaIPv4GetMinPrefixLenAttributeTypeOk(o.MinPrefixLen); ok {
		toSerialize["MinPrefixLen"] = val
	}
	return toSerialize, nil
}

type NullableCreateAreaIPv4 struct {
	value *CreateAreaIPv4
	isSet bool
}

func (v NullableCreateAreaIPv4) Get() *CreateAreaIPv4 {
	return v.value
}

func (v *NullableCreateAreaIPv4) Set(val *CreateAreaIPv4) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAreaIPv4) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAreaIPv4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAreaIPv4(val *CreateAreaIPv4) *NullableCreateAreaIPv4 {
	return &NullableCreateAreaIPv4{value: val, isSet: true}
}

func (v NullableCreateAreaIPv4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAreaIPv4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
