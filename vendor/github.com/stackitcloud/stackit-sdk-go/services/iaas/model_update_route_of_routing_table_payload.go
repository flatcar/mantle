/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the UpdateRouteOfRoutingTablePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRouteOfRoutingTablePayload{}

/*
	types and functions for labels
*/

// isFreeform
type UpdateRouteOfRoutingTablePayloadGetLabelsAttributeType = *map[string]interface{}
type UpdateRouteOfRoutingTablePayloadGetLabelsArgType = map[string]interface{}
type UpdateRouteOfRoutingTablePayloadGetLabelsRetType = map[string]interface{}

func getUpdateRouteOfRoutingTablePayloadGetLabelsAttributeTypeOk(arg UpdateRouteOfRoutingTablePayloadGetLabelsAttributeType) (ret UpdateRouteOfRoutingTablePayloadGetLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateRouteOfRoutingTablePayloadGetLabelsAttributeType(arg *UpdateRouteOfRoutingTablePayloadGetLabelsAttributeType, val UpdateRouteOfRoutingTablePayloadGetLabelsRetType) {
	*arg = &val
}

// UpdateRouteOfRoutingTablePayload Object that represents the request body for a route update.
type UpdateRouteOfRoutingTablePayload struct {
	// Object that represents the labels of an object. Regex for keys: `^(?=.{1,63}$)([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$`. Regex for values: `^(?=.{0,63}$)(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])*$`. Providing a `null` value for a key will remove that key.
	Labels UpdateRouteOfRoutingTablePayloadGetLabelsAttributeType `json:"labels,omitempty"`
}

// NewUpdateRouteOfRoutingTablePayload instantiates a new UpdateRouteOfRoutingTablePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRouteOfRoutingTablePayload() *UpdateRouteOfRoutingTablePayload {
	this := UpdateRouteOfRoutingTablePayload{}
	return &this
}

// NewUpdateRouteOfRoutingTablePayloadWithDefaults instantiates a new UpdateRouteOfRoutingTablePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRouteOfRoutingTablePayloadWithDefaults() *UpdateRouteOfRoutingTablePayload {
	this := UpdateRouteOfRoutingTablePayload{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateRouteOfRoutingTablePayload) GetLabels() (res UpdateRouteOfRoutingTablePayloadGetLabelsRetType) {
	res, _ = o.GetLabelsOk()
	return
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRouteOfRoutingTablePayload) GetLabelsOk() (ret UpdateRouteOfRoutingTablePayloadGetLabelsRetType, ok bool) {
	return getUpdateRouteOfRoutingTablePayloadGetLabelsAttributeTypeOk(o.Labels)
}

// HasLabels returns a boolean if a field has been set.
func (o *UpdateRouteOfRoutingTablePayload) HasLabels() bool {
	_, ok := o.GetLabelsOk()
	return ok
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *UpdateRouteOfRoutingTablePayload) SetLabels(v UpdateRouteOfRoutingTablePayloadGetLabelsRetType) {
	setUpdateRouteOfRoutingTablePayloadGetLabelsAttributeType(&o.Labels, v)
}

func (o UpdateRouteOfRoutingTablePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateRouteOfRoutingTablePayloadGetLabelsAttributeTypeOk(o.Labels); ok {
		toSerialize["Labels"] = val
	}
	return toSerialize, nil
}

type NullableUpdateRouteOfRoutingTablePayload struct {
	value *UpdateRouteOfRoutingTablePayload
	isSet bool
}

func (v NullableUpdateRouteOfRoutingTablePayload) Get() *UpdateRouteOfRoutingTablePayload {
	return v.value
}

func (v *NullableUpdateRouteOfRoutingTablePayload) Set(val *UpdateRouteOfRoutingTablePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRouteOfRoutingTablePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRouteOfRoutingTablePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRouteOfRoutingTablePayload(val *UpdateRouteOfRoutingTablePayload) *NullableUpdateRouteOfRoutingTablePayload {
	return &NullableUpdateRouteOfRoutingTablePayload{value: val, isSet: true}
}

func (v NullableUpdateRouteOfRoutingTablePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRouteOfRoutingTablePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
