/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the QuotaListSnapshots type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaListSnapshots{}

/*
	types and functions for limit
*/

// isLong
type QuotaListSnapshotsGetLimitAttributeType = *int64
type QuotaListSnapshotsGetLimitArgType = int64
type QuotaListSnapshotsGetLimitRetType = int64

func getQuotaListSnapshotsGetLimitAttributeTypeOk(arg QuotaListSnapshotsGetLimitAttributeType) (ret QuotaListSnapshotsGetLimitRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setQuotaListSnapshotsGetLimitAttributeType(arg *QuotaListSnapshotsGetLimitAttributeType, val QuotaListSnapshotsGetLimitRetType) {
	*arg = &val
}

/*
	types and functions for usage
*/

// isLong
type QuotaListSnapshotsGetUsageAttributeType = *int64
type QuotaListSnapshotsGetUsageArgType = int64
type QuotaListSnapshotsGetUsageRetType = int64

func getQuotaListSnapshotsGetUsageAttributeTypeOk(arg QuotaListSnapshotsGetUsageAttributeType) (ret QuotaListSnapshotsGetUsageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setQuotaListSnapshotsGetUsageAttributeType(arg *QuotaListSnapshotsGetUsageAttributeType, val QuotaListSnapshotsGetUsageRetType) {
	*arg = &val
}

// QuotaListSnapshots Number of snapshots.
type QuotaListSnapshots struct {
	// REQUIRED
	Limit QuotaListSnapshotsGetLimitAttributeType `json:"limit" required:"true"`
	// REQUIRED
	Usage QuotaListSnapshotsGetUsageAttributeType `json:"usage" required:"true"`
}

type _QuotaListSnapshots QuotaListSnapshots

// NewQuotaListSnapshots instantiates a new QuotaListSnapshots object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaListSnapshots(limit QuotaListSnapshotsGetLimitArgType, usage QuotaListSnapshotsGetUsageArgType) *QuotaListSnapshots {
	this := QuotaListSnapshots{}
	setQuotaListSnapshotsGetLimitAttributeType(&this.Limit, limit)
	setQuotaListSnapshotsGetUsageAttributeType(&this.Usage, usage)
	return &this
}

// NewQuotaListSnapshotsWithDefaults instantiates a new QuotaListSnapshots object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaListSnapshotsWithDefaults() *QuotaListSnapshots {
	this := QuotaListSnapshots{}
	return &this
}

// GetLimit returns the Limit field value
func (o *QuotaListSnapshots) GetLimit() (ret QuotaListSnapshotsGetLimitRetType) {
	ret, _ = o.GetLimitOk()
	return ret
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *QuotaListSnapshots) GetLimitOk() (ret QuotaListSnapshotsGetLimitRetType, ok bool) {
	return getQuotaListSnapshotsGetLimitAttributeTypeOk(o.Limit)
}

// SetLimit sets field value
func (o *QuotaListSnapshots) SetLimit(v QuotaListSnapshotsGetLimitRetType) {
	setQuotaListSnapshotsGetLimitAttributeType(&o.Limit, v)
}

// GetUsage returns the Usage field value
func (o *QuotaListSnapshots) GetUsage() (ret QuotaListSnapshotsGetUsageRetType) {
	ret, _ = o.GetUsageOk()
	return ret
}

// GetUsageOk returns a tuple with the Usage field value
// and a boolean to check if the value has been set.
func (o *QuotaListSnapshots) GetUsageOk() (ret QuotaListSnapshotsGetUsageRetType, ok bool) {
	return getQuotaListSnapshotsGetUsageAttributeTypeOk(o.Usage)
}

// SetUsage sets field value
func (o *QuotaListSnapshots) SetUsage(v QuotaListSnapshotsGetUsageRetType) {
	setQuotaListSnapshotsGetUsageAttributeType(&o.Usage, v)
}

func (o QuotaListSnapshots) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getQuotaListSnapshotsGetLimitAttributeTypeOk(o.Limit); ok {
		toSerialize["Limit"] = val
	}
	if val, ok := getQuotaListSnapshotsGetUsageAttributeTypeOk(o.Usage); ok {
		toSerialize["Usage"] = val
	}
	return toSerialize, nil
}

type NullableQuotaListSnapshots struct {
	value *QuotaListSnapshots
	isSet bool
}

func (v NullableQuotaListSnapshots) Get() *QuotaListSnapshots {
	return v.value
}

func (v *NullableQuotaListSnapshots) Set(val *QuotaListSnapshots) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaListSnapshots) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaListSnapshots) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaListSnapshots(val *QuotaListSnapshots) *NullableQuotaListSnapshots {
	return &NullableQuotaListSnapshots{value: val, isSet: true}
}

func (v NullableQuotaListSnapshots) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaListSnapshots) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
