/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the NexthopBlackhole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NexthopBlackhole{}

/*
	types and functions for type
*/

// isNotNullableString
type NexthopBlackholeGetTypeAttributeType = *string

func getNexthopBlackholeGetTypeAttributeTypeOk(arg NexthopBlackholeGetTypeAttributeType) (ret NexthopBlackholeGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setNexthopBlackholeGetTypeAttributeType(arg *NexthopBlackholeGetTypeAttributeType, val NexthopBlackholeGetTypeRetType) {
	*arg = &val
}

type NexthopBlackholeGetTypeArgType = string
type NexthopBlackholeGetTypeRetType = string

// NexthopBlackhole Object that represents a blackhole route.
type NexthopBlackhole struct {
	// REQUIRED
	Type NexthopBlackholeGetTypeAttributeType `json:"type" required:"true"`
}

type _NexthopBlackhole NexthopBlackhole

// NewNexthopBlackhole instantiates a new NexthopBlackhole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNexthopBlackhole(types NexthopBlackholeGetTypeArgType) *NexthopBlackhole {
	this := NexthopBlackhole{}
	setNexthopBlackholeGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewNexthopBlackholeWithDefaults instantiates a new NexthopBlackhole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNexthopBlackholeWithDefaults() *NexthopBlackhole {
	this := NexthopBlackhole{}
	return &this
}

// GetType returns the Type field value
func (o *NexthopBlackhole) GetType() (ret NexthopBlackholeGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NexthopBlackhole) GetTypeOk() (ret NexthopBlackholeGetTypeRetType, ok bool) {
	return getNexthopBlackholeGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *NexthopBlackhole) SetType(v NexthopBlackholeGetTypeRetType) {
	setNexthopBlackholeGetTypeAttributeType(&o.Type, v)
}

func (o NexthopBlackhole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getNexthopBlackholeGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableNexthopBlackhole struct {
	value *NexthopBlackhole
	isSet bool
}

func (v NullableNexthopBlackhole) Get() *NexthopBlackhole {
	return v.value
}

func (v *NullableNexthopBlackhole) Set(val *NexthopBlackhole) {
	v.value = val
	v.isSet = true
}

func (v NullableNexthopBlackhole) IsSet() bool {
	return v.isSet
}

func (v *NullableNexthopBlackhole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNexthopBlackhole(val *NexthopBlackhole) *NullableNexthopBlackhole {
	return &NullableNexthopBlackhole{value: val, isSet: true}
}

func (v NullableNexthopBlackhole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNexthopBlackhole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
