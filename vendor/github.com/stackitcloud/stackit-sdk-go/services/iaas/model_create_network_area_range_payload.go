/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the CreateNetworkAreaRangePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkAreaRangePayload{}

/*
	types and functions for ipv4
*/

// isArray
type CreateNetworkAreaRangePayloadGetIpv4AttributeType = *[]NetworkRange
type CreateNetworkAreaRangePayloadGetIpv4ArgType = []NetworkRange
type CreateNetworkAreaRangePayloadGetIpv4RetType = []NetworkRange

func getCreateNetworkAreaRangePayloadGetIpv4AttributeTypeOk(arg CreateNetworkAreaRangePayloadGetIpv4AttributeType) (ret CreateNetworkAreaRangePayloadGetIpv4RetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateNetworkAreaRangePayloadGetIpv4AttributeType(arg *CreateNetworkAreaRangePayloadGetIpv4AttributeType, val CreateNetworkAreaRangePayloadGetIpv4RetType) {
	*arg = &val
}

// CreateNetworkAreaRangePayload struct for CreateNetworkAreaRangePayload
type CreateNetworkAreaRangePayload struct {
	// A list of network ranges.
	Ipv4 CreateNetworkAreaRangePayloadGetIpv4AttributeType `json:"ipv4,omitempty"`
}

// NewCreateNetworkAreaRangePayload instantiates a new CreateNetworkAreaRangePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkAreaRangePayload() *CreateNetworkAreaRangePayload {
	this := CreateNetworkAreaRangePayload{}
	return &this
}

// NewCreateNetworkAreaRangePayloadWithDefaults instantiates a new CreateNetworkAreaRangePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkAreaRangePayloadWithDefaults() *CreateNetworkAreaRangePayload {
	this := CreateNetworkAreaRangePayload{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *CreateNetworkAreaRangePayload) GetIpv4() (res CreateNetworkAreaRangePayloadGetIpv4RetType) {
	res, _ = o.GetIpv4Ok()
	return
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkAreaRangePayload) GetIpv4Ok() (ret CreateNetworkAreaRangePayloadGetIpv4RetType, ok bool) {
	return getCreateNetworkAreaRangePayloadGetIpv4AttributeTypeOk(o.Ipv4)
}

// HasIpv4 returns a boolean if a field has been set.
func (o *CreateNetworkAreaRangePayload) HasIpv4() bool {
	_, ok := o.GetIpv4Ok()
	return ok
}

// SetIpv4 gets a reference to the given []NetworkRange and assigns it to the Ipv4 field.
func (o *CreateNetworkAreaRangePayload) SetIpv4(v CreateNetworkAreaRangePayloadGetIpv4RetType) {
	setCreateNetworkAreaRangePayloadGetIpv4AttributeType(&o.Ipv4, v)
}

func (o CreateNetworkAreaRangePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateNetworkAreaRangePayloadGetIpv4AttributeTypeOk(o.Ipv4); ok {
		toSerialize["Ipv4"] = val
	}
	return toSerialize, nil
}

type NullableCreateNetworkAreaRangePayload struct {
	value *CreateNetworkAreaRangePayload
	isSet bool
}

func (v NullableCreateNetworkAreaRangePayload) Get() *CreateNetworkAreaRangePayload {
	return v.value
}

func (v *NullableCreateNetworkAreaRangePayload) Set(val *CreateNetworkAreaRangePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkAreaRangePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkAreaRangePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkAreaRangePayload(val *CreateNetworkAreaRangePayload) *NullableCreateNetworkAreaRangePayload {
	return &NullableCreateNetworkAreaRangePayload{value: val, isSet: true}
}

func (v NullableCreateNetworkAreaRangePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkAreaRangePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
