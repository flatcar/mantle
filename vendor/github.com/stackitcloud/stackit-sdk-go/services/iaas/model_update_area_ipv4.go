/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the UpdateAreaIPv4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAreaIPv4{}

/*
	types and functions for defaultNameservers
*/

// isArray
type UpdateAreaIPv4GetDefaultNameserversAttributeType = *[]string
type UpdateAreaIPv4GetDefaultNameserversArgType = []string
type UpdateAreaIPv4GetDefaultNameserversRetType = []string

func getUpdateAreaIPv4GetDefaultNameserversAttributeTypeOk(arg UpdateAreaIPv4GetDefaultNameserversAttributeType) (ret UpdateAreaIPv4GetDefaultNameserversRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAreaIPv4GetDefaultNameserversAttributeType(arg *UpdateAreaIPv4GetDefaultNameserversAttributeType, val UpdateAreaIPv4GetDefaultNameserversRetType) {
	*arg = &val
}

/*
	types and functions for defaultPrefixLen
*/

// isInteger
type UpdateAreaIPv4GetDefaultPrefixLenAttributeType = *int64
type UpdateAreaIPv4GetDefaultPrefixLenArgType = int64
type UpdateAreaIPv4GetDefaultPrefixLenRetType = int64

func getUpdateAreaIPv4GetDefaultPrefixLenAttributeTypeOk(arg UpdateAreaIPv4GetDefaultPrefixLenAttributeType) (ret UpdateAreaIPv4GetDefaultPrefixLenRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAreaIPv4GetDefaultPrefixLenAttributeType(arg *UpdateAreaIPv4GetDefaultPrefixLenAttributeType, val UpdateAreaIPv4GetDefaultPrefixLenRetType) {
	*arg = &val
}

/*
	types and functions for maxPrefixLen
*/

// isInteger
type UpdateAreaIPv4GetMaxPrefixLenAttributeType = *int64
type UpdateAreaIPv4GetMaxPrefixLenArgType = int64
type UpdateAreaIPv4GetMaxPrefixLenRetType = int64

func getUpdateAreaIPv4GetMaxPrefixLenAttributeTypeOk(arg UpdateAreaIPv4GetMaxPrefixLenAttributeType) (ret UpdateAreaIPv4GetMaxPrefixLenRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAreaIPv4GetMaxPrefixLenAttributeType(arg *UpdateAreaIPv4GetMaxPrefixLenAttributeType, val UpdateAreaIPv4GetMaxPrefixLenRetType) {
	*arg = &val
}

/*
	types and functions for minPrefixLen
*/

// isInteger
type UpdateAreaIPv4GetMinPrefixLenAttributeType = *int64
type UpdateAreaIPv4GetMinPrefixLenArgType = int64
type UpdateAreaIPv4GetMinPrefixLenRetType = int64

func getUpdateAreaIPv4GetMinPrefixLenAttributeTypeOk(arg UpdateAreaIPv4GetMinPrefixLenAttributeType) (ret UpdateAreaIPv4GetMinPrefixLenRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAreaIPv4GetMinPrefixLenAttributeType(arg *UpdateAreaIPv4GetMinPrefixLenAttributeType, val UpdateAreaIPv4GetMinPrefixLenRetType) {
	*arg = &val
}

// UpdateAreaIPv4 The update object for a IPv4 network area.
type UpdateAreaIPv4 struct {
	DefaultNameservers UpdateAreaIPv4GetDefaultNameserversAttributeType `json:"defaultNameservers,omitempty"`
	// The default prefix length for networks in the network area.
	DefaultPrefixLen UpdateAreaIPv4GetDefaultPrefixLenAttributeType `json:"defaultPrefixLen,omitempty"`
	// The maximal prefix length for networks in the network area.
	MaxPrefixLen UpdateAreaIPv4GetMaxPrefixLenAttributeType `json:"maxPrefixLen,omitempty"`
	// The minimal prefix length for networks in the network area.
	MinPrefixLen UpdateAreaIPv4GetMinPrefixLenAttributeType `json:"minPrefixLen,omitempty"`
}

// NewUpdateAreaIPv4 instantiates a new UpdateAreaIPv4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAreaIPv4() *UpdateAreaIPv4 {
	this := UpdateAreaIPv4{}
	return &this
}

// NewUpdateAreaIPv4WithDefaults instantiates a new UpdateAreaIPv4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAreaIPv4WithDefaults() *UpdateAreaIPv4 {
	this := UpdateAreaIPv4{}
	return &this
}

// GetDefaultNameservers returns the DefaultNameservers field value if set, zero value otherwise.
func (o *UpdateAreaIPv4) GetDefaultNameservers() (res UpdateAreaIPv4GetDefaultNameserversRetType) {
	res, _ = o.GetDefaultNameserversOk()
	return
}

// GetDefaultNameserversOk returns a tuple with the DefaultNameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAreaIPv4) GetDefaultNameserversOk() (ret UpdateAreaIPv4GetDefaultNameserversRetType, ok bool) {
	return getUpdateAreaIPv4GetDefaultNameserversAttributeTypeOk(o.DefaultNameservers)
}

// HasDefaultNameservers returns a boolean if a field has been set.
func (o *UpdateAreaIPv4) HasDefaultNameservers() bool {
	_, ok := o.GetDefaultNameserversOk()
	return ok
}

// SetDefaultNameservers gets a reference to the given []string and assigns it to the DefaultNameservers field.
func (o *UpdateAreaIPv4) SetDefaultNameservers(v UpdateAreaIPv4GetDefaultNameserversRetType) {
	setUpdateAreaIPv4GetDefaultNameserversAttributeType(&o.DefaultNameservers, v)
}

// GetDefaultPrefixLen returns the DefaultPrefixLen field value if set, zero value otherwise.
func (o *UpdateAreaIPv4) GetDefaultPrefixLen() (res UpdateAreaIPv4GetDefaultPrefixLenRetType) {
	res, _ = o.GetDefaultPrefixLenOk()
	return
}

// GetDefaultPrefixLenOk returns a tuple with the DefaultPrefixLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAreaIPv4) GetDefaultPrefixLenOk() (ret UpdateAreaIPv4GetDefaultPrefixLenRetType, ok bool) {
	return getUpdateAreaIPv4GetDefaultPrefixLenAttributeTypeOk(o.DefaultPrefixLen)
}

// HasDefaultPrefixLen returns a boolean if a field has been set.
func (o *UpdateAreaIPv4) HasDefaultPrefixLen() bool {
	_, ok := o.GetDefaultPrefixLenOk()
	return ok
}

// SetDefaultPrefixLen gets a reference to the given int64 and assigns it to the DefaultPrefixLen field.
func (o *UpdateAreaIPv4) SetDefaultPrefixLen(v UpdateAreaIPv4GetDefaultPrefixLenRetType) {
	setUpdateAreaIPv4GetDefaultPrefixLenAttributeType(&o.DefaultPrefixLen, v)
}

// GetMaxPrefixLen returns the MaxPrefixLen field value if set, zero value otherwise.
func (o *UpdateAreaIPv4) GetMaxPrefixLen() (res UpdateAreaIPv4GetMaxPrefixLenRetType) {
	res, _ = o.GetMaxPrefixLenOk()
	return
}

// GetMaxPrefixLenOk returns a tuple with the MaxPrefixLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAreaIPv4) GetMaxPrefixLenOk() (ret UpdateAreaIPv4GetMaxPrefixLenRetType, ok bool) {
	return getUpdateAreaIPv4GetMaxPrefixLenAttributeTypeOk(o.MaxPrefixLen)
}

// HasMaxPrefixLen returns a boolean if a field has been set.
func (o *UpdateAreaIPv4) HasMaxPrefixLen() bool {
	_, ok := o.GetMaxPrefixLenOk()
	return ok
}

// SetMaxPrefixLen gets a reference to the given int64 and assigns it to the MaxPrefixLen field.
func (o *UpdateAreaIPv4) SetMaxPrefixLen(v UpdateAreaIPv4GetMaxPrefixLenRetType) {
	setUpdateAreaIPv4GetMaxPrefixLenAttributeType(&o.MaxPrefixLen, v)
}

// GetMinPrefixLen returns the MinPrefixLen field value if set, zero value otherwise.
func (o *UpdateAreaIPv4) GetMinPrefixLen() (res UpdateAreaIPv4GetMinPrefixLenRetType) {
	res, _ = o.GetMinPrefixLenOk()
	return
}

// GetMinPrefixLenOk returns a tuple with the MinPrefixLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAreaIPv4) GetMinPrefixLenOk() (ret UpdateAreaIPv4GetMinPrefixLenRetType, ok bool) {
	return getUpdateAreaIPv4GetMinPrefixLenAttributeTypeOk(o.MinPrefixLen)
}

// HasMinPrefixLen returns a boolean if a field has been set.
func (o *UpdateAreaIPv4) HasMinPrefixLen() bool {
	_, ok := o.GetMinPrefixLenOk()
	return ok
}

// SetMinPrefixLen gets a reference to the given int64 and assigns it to the MinPrefixLen field.
func (o *UpdateAreaIPv4) SetMinPrefixLen(v UpdateAreaIPv4GetMinPrefixLenRetType) {
	setUpdateAreaIPv4GetMinPrefixLenAttributeType(&o.MinPrefixLen, v)
}

func (o UpdateAreaIPv4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateAreaIPv4GetDefaultNameserversAttributeTypeOk(o.DefaultNameservers); ok {
		toSerialize["DefaultNameservers"] = val
	}
	if val, ok := getUpdateAreaIPv4GetDefaultPrefixLenAttributeTypeOk(o.DefaultPrefixLen); ok {
		toSerialize["DefaultPrefixLen"] = val
	}
	if val, ok := getUpdateAreaIPv4GetMaxPrefixLenAttributeTypeOk(o.MaxPrefixLen); ok {
		toSerialize["MaxPrefixLen"] = val
	}
	if val, ok := getUpdateAreaIPv4GetMinPrefixLenAttributeTypeOk(o.MinPrefixLen); ok {
		toSerialize["MinPrefixLen"] = val
	}
	return toSerialize, nil
}

type NullableUpdateAreaIPv4 struct {
	value *UpdateAreaIPv4
	isSet bool
}

func (v NullableUpdateAreaIPv4) Get() *UpdateAreaIPv4 {
	return v.value
}

func (v *NullableUpdateAreaIPv4) Set(val *UpdateAreaIPv4) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAreaIPv4) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAreaIPv4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAreaIPv4(val *UpdateAreaIPv4) *NullableUpdateAreaIPv4 {
	return &NullableUpdateAreaIPv4{value: val, isSet: true}
}

func (v NullableUpdateAreaIPv4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAreaIPv4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
