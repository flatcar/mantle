/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the CreateNetworkIPv6WithPrefix type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkIPv6WithPrefix{}

/*
	types and functions for gateway
*/

// isNullableString
type CreateNetworkIPv6WithPrefixGetGatewayAttributeType = *NullableString

func getCreateNetworkIPv6WithPrefixGetGatewayAttributeTypeOk(arg CreateNetworkIPv6WithPrefixGetGatewayAttributeType) (ret CreateNetworkIPv6WithPrefixGetGatewayRetType, ok bool) {
	if arg == nil {
		return nil, false
	}
	return arg.Get(), true
}

func setCreateNetworkIPv6WithPrefixGetGatewayAttributeType(arg *CreateNetworkIPv6WithPrefixGetGatewayAttributeType, val CreateNetworkIPv6WithPrefixGetGatewayRetType) {
	if IsNil(*arg) {
		*arg = NewNullableString(val)
	} else {
		(*arg).Set(val)
	}
}

type CreateNetworkIPv6WithPrefixGetGatewayArgType = *string
type CreateNetworkIPv6WithPrefixGetGatewayRetType = *string

/*
	types and functions for nameservers
*/

// isArray
type CreateNetworkIPv6WithPrefixGetNameserversAttributeType = *[]string
type CreateNetworkIPv6WithPrefixGetNameserversArgType = []string
type CreateNetworkIPv6WithPrefixGetNameserversRetType = []string

func getCreateNetworkIPv6WithPrefixGetNameserversAttributeTypeOk(arg CreateNetworkIPv6WithPrefixGetNameserversAttributeType) (ret CreateNetworkIPv6WithPrefixGetNameserversRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateNetworkIPv6WithPrefixGetNameserversAttributeType(arg *CreateNetworkIPv6WithPrefixGetNameserversAttributeType, val CreateNetworkIPv6WithPrefixGetNameserversRetType) {
	*arg = &val
}

/*
	types and functions for prefix
*/

// isNotNullableString
type CreateNetworkIPv6WithPrefixGetPrefixAttributeType = *string

func getCreateNetworkIPv6WithPrefixGetPrefixAttributeTypeOk(arg CreateNetworkIPv6WithPrefixGetPrefixAttributeType) (ret CreateNetworkIPv6WithPrefixGetPrefixRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateNetworkIPv6WithPrefixGetPrefixAttributeType(arg *CreateNetworkIPv6WithPrefixGetPrefixAttributeType, val CreateNetworkIPv6WithPrefixGetPrefixRetType) {
	*arg = &val
}

type CreateNetworkIPv6WithPrefixGetPrefixArgType = string
type CreateNetworkIPv6WithPrefixGetPrefixRetType = string

// CreateNetworkIPv6WithPrefix The create request for an IPv6 network with a specified prefix.
type CreateNetworkIPv6WithPrefix struct {
	// The IPv6 gateway of a network. If not specified the first IP of the network will be assigned as the gateway. If 'null' is sent, then the network doesn't have a gateway.
	Gateway CreateNetworkIPv6WithPrefixGetGatewayAttributeType `json:"gateway,omitempty"`
	// A list containing DNS Servers/Nameservers for IPv6.
	Nameservers CreateNetworkIPv6WithPrefixGetNameserversAttributeType `json:"nameservers,omitempty"`
	// Classless Inter-Domain Routing (CIDR) for IPv6.
	// REQUIRED
	Prefix CreateNetworkIPv6WithPrefixGetPrefixAttributeType `json:"prefix" required:"true"`
}

type _CreateNetworkIPv6WithPrefix CreateNetworkIPv6WithPrefix

// NewCreateNetworkIPv6WithPrefix instantiates a new CreateNetworkIPv6WithPrefix object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkIPv6WithPrefix(prefix CreateNetworkIPv6WithPrefixGetPrefixArgType) *CreateNetworkIPv6WithPrefix {
	this := CreateNetworkIPv6WithPrefix{}
	setCreateNetworkIPv6WithPrefixGetPrefixAttributeType(&this.Prefix, prefix)
	return &this
}

// NewCreateNetworkIPv6WithPrefixWithDefaults instantiates a new CreateNetworkIPv6WithPrefix object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkIPv6WithPrefixWithDefaults() *CreateNetworkIPv6WithPrefix {
	this := CreateNetworkIPv6WithPrefix{}
	return &this
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateNetworkIPv6WithPrefix) GetGateway() (res CreateNetworkIPv6WithPrefixGetGatewayRetType) {
	res, _ = o.GetGatewayOk()
	return
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateNetworkIPv6WithPrefix) GetGatewayOk() (ret CreateNetworkIPv6WithPrefixGetGatewayRetType, ok bool) {
	return getCreateNetworkIPv6WithPrefixGetGatewayAttributeTypeOk(o.Gateway)
}

// HasGateway returns a boolean if a field has been set.
func (o *CreateNetworkIPv6WithPrefix) HasGateway() bool {
	_, ok := o.GetGatewayOk()
	return ok
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *CreateNetworkIPv6WithPrefix) SetGateway(v CreateNetworkIPv6WithPrefixGetGatewayRetType) {
	setCreateNetworkIPv6WithPrefixGetGatewayAttributeType(&o.Gateway, v)
}

// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *CreateNetworkIPv6WithPrefix) SetGatewayNil() {
	o.Gateway = nil
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *CreateNetworkIPv6WithPrefix) UnsetGateway() {
	o.Gateway = nil
}

// GetNameservers returns the Nameservers field value if set, zero value otherwise.
func (o *CreateNetworkIPv6WithPrefix) GetNameservers() (res CreateNetworkIPv6WithPrefixGetNameserversRetType) {
	res, _ = o.GetNameserversOk()
	return
}

// GetNameserversOk returns a tuple with the Nameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkIPv6WithPrefix) GetNameserversOk() (ret CreateNetworkIPv6WithPrefixGetNameserversRetType, ok bool) {
	return getCreateNetworkIPv6WithPrefixGetNameserversAttributeTypeOk(o.Nameservers)
}

// HasNameservers returns a boolean if a field has been set.
func (o *CreateNetworkIPv6WithPrefix) HasNameservers() bool {
	_, ok := o.GetNameserversOk()
	return ok
}

// SetNameservers gets a reference to the given []string and assigns it to the Nameservers field.
func (o *CreateNetworkIPv6WithPrefix) SetNameservers(v CreateNetworkIPv6WithPrefixGetNameserversRetType) {
	setCreateNetworkIPv6WithPrefixGetNameserversAttributeType(&o.Nameservers, v)
}

// GetPrefix returns the Prefix field value
func (o *CreateNetworkIPv6WithPrefix) GetPrefix() (ret CreateNetworkIPv6WithPrefixGetPrefixRetType) {
	ret, _ = o.GetPrefixOk()
	return ret
}

// GetPrefixOk returns a tuple with the Prefix field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkIPv6WithPrefix) GetPrefixOk() (ret CreateNetworkIPv6WithPrefixGetPrefixRetType, ok bool) {
	return getCreateNetworkIPv6WithPrefixGetPrefixAttributeTypeOk(o.Prefix)
}

// SetPrefix sets field value
func (o *CreateNetworkIPv6WithPrefix) SetPrefix(v CreateNetworkIPv6WithPrefixGetPrefixRetType) {
	setCreateNetworkIPv6WithPrefixGetPrefixAttributeType(&o.Prefix, v)
}

func (o CreateNetworkIPv6WithPrefix) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateNetworkIPv6WithPrefixGetGatewayAttributeTypeOk(o.Gateway); ok {
		toSerialize["Gateway"] = val
	}
	if val, ok := getCreateNetworkIPv6WithPrefixGetNameserversAttributeTypeOk(o.Nameservers); ok {
		toSerialize["Nameservers"] = val
	}
	if val, ok := getCreateNetworkIPv6WithPrefixGetPrefixAttributeTypeOk(o.Prefix); ok {
		toSerialize["Prefix"] = val
	}
	return toSerialize, nil
}

type NullableCreateNetworkIPv6WithPrefix struct {
	value *CreateNetworkIPv6WithPrefix
	isSet bool
}

func (v NullableCreateNetworkIPv6WithPrefix) Get() *CreateNetworkIPv6WithPrefix {
	return v.value
}

func (v *NullableCreateNetworkIPv6WithPrefix) Set(val *CreateNetworkIPv6WithPrefix) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkIPv6WithPrefix) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkIPv6WithPrefix) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkIPv6WithPrefix(val *CreateNetworkIPv6WithPrefix) *NullableCreateNetworkIPv6WithPrefix {
	return &NullableCreateNetworkIPv6WithPrefix{value: val, isSet: true}
}

func (v NullableCreateNetworkIPv6WithPrefix) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkIPv6WithPrefix) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
