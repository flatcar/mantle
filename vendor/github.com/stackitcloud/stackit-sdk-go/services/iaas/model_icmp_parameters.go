/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ICMPParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ICMPParameters{}

/*
	types and functions for code
*/

// isLong
type ICMPParametersGetCodeAttributeType = *int64
type ICMPParametersGetCodeArgType = int64
type ICMPParametersGetCodeRetType = int64

func getICMPParametersGetCodeAttributeTypeOk(arg ICMPParametersGetCodeAttributeType) (ret ICMPParametersGetCodeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setICMPParametersGetCodeAttributeType(arg *ICMPParametersGetCodeAttributeType, val ICMPParametersGetCodeRetType) {
	*arg = &val
}

/*
	types and functions for type
*/

// isLong
type ICMPParametersGetTypeAttributeType = *int64
type ICMPParametersGetTypeArgType = int64
type ICMPParametersGetTypeRetType = int64

func getICMPParametersGetTypeAttributeTypeOk(arg ICMPParametersGetTypeAttributeType) (ret ICMPParametersGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setICMPParametersGetTypeAttributeType(arg *ICMPParametersGetTypeAttributeType, val ICMPParametersGetTypeRetType) {
	*arg = &val
}

// ICMPParameters Object that represents ICMP parameters.
type ICMPParameters struct {
	// ICMP code. Can be set if the protocol is ICMP.
	// REQUIRED
	Code ICMPParametersGetCodeAttributeType `json:"code" required:"true"`
	// ICMP type. Can be set if the protocol is ICMP.
	// REQUIRED
	Type ICMPParametersGetTypeAttributeType `json:"type" required:"true"`
}

type _ICMPParameters ICMPParameters

// NewICMPParameters instantiates a new ICMPParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewICMPParameters(code ICMPParametersGetCodeArgType, types ICMPParametersGetTypeArgType) *ICMPParameters {
	this := ICMPParameters{}
	setICMPParametersGetCodeAttributeType(&this.Code, code)
	setICMPParametersGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewICMPParametersWithDefaults instantiates a new ICMPParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewICMPParametersWithDefaults() *ICMPParameters {
	this := ICMPParameters{}
	return &this
}

// GetCode returns the Code field value
func (o *ICMPParameters) GetCode() (ret ICMPParametersGetCodeRetType) {
	ret, _ = o.GetCodeOk()
	return ret
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ICMPParameters) GetCodeOk() (ret ICMPParametersGetCodeRetType, ok bool) {
	return getICMPParametersGetCodeAttributeTypeOk(o.Code)
}

// SetCode sets field value
func (o *ICMPParameters) SetCode(v ICMPParametersGetCodeRetType) {
	setICMPParametersGetCodeAttributeType(&o.Code, v)
}

// GetType returns the Type field value
func (o *ICMPParameters) GetType() (ret ICMPParametersGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ICMPParameters) GetTypeOk() (ret ICMPParametersGetTypeRetType, ok bool) {
	return getICMPParametersGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *ICMPParameters) SetType(v ICMPParametersGetTypeRetType) {
	setICMPParametersGetTypeAttributeType(&o.Type, v)
}

func (o ICMPParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getICMPParametersGetCodeAttributeTypeOk(o.Code); ok {
		toSerialize["Code"] = val
	}
	if val, ok := getICMPParametersGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableICMPParameters struct {
	value *ICMPParameters
	isSet bool
}

func (v NullableICMPParameters) Get() *ICMPParameters {
	return v.value
}

func (v *NullableICMPParameters) Set(val *ICMPParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableICMPParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableICMPParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableICMPParameters(val *ICMPParameters) *NullableICMPParameters {
	return &NullableICMPParameters{value: val, isSet: true}
}

func (v NullableICMPParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableICMPParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
