/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the Area type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Area{}

/*
	types and functions for defaultNameservers
*/

// isArray
type AreaGetDefaultNameserversAttributeType = *[]string
type AreaGetDefaultNameserversArgType = []string
type AreaGetDefaultNameserversRetType = []string

func getAreaGetDefaultNameserversAttributeTypeOk(arg AreaGetDefaultNameserversAttributeType) (ret AreaGetDefaultNameserversRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAreaGetDefaultNameserversAttributeType(arg *AreaGetDefaultNameserversAttributeType, val AreaGetDefaultNameserversRetType) {
	*arg = &val
}

/*
	types and functions for networkRanges
*/

// isArray
type AreaGetNetworkRangesAttributeType = *[]NetworkRange
type AreaGetNetworkRangesArgType = []NetworkRange
type AreaGetNetworkRangesRetType = []NetworkRange

func getAreaGetNetworkRangesAttributeTypeOk(arg AreaGetNetworkRangesAttributeType) (ret AreaGetNetworkRangesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAreaGetNetworkRangesAttributeType(arg *AreaGetNetworkRangesAttributeType, val AreaGetNetworkRangesRetType) {
	*arg = &val
}

/*
	types and functions for routes
*/

// isArray
type AreaGetRoutesAttributeType = *[]Route
type AreaGetRoutesArgType = []Route
type AreaGetRoutesRetType = []Route

func getAreaGetRoutesAttributeTypeOk(arg AreaGetRoutesAttributeType) (ret AreaGetRoutesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAreaGetRoutesAttributeType(arg *AreaGetRoutesAttributeType, val AreaGetRoutesRetType) {
	*arg = &val
}

/*
	types and functions for transferNetwork
*/

// isNotNullableString
type AreaGetTransferNetworkAttributeType = *string

func getAreaGetTransferNetworkAttributeTypeOk(arg AreaGetTransferNetworkAttributeType) (ret AreaGetTransferNetworkRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAreaGetTransferNetworkAttributeType(arg *AreaGetTransferNetworkAttributeType, val AreaGetTransferNetworkRetType) {
	*arg = &val
}

type AreaGetTransferNetworkArgType = string
type AreaGetTransferNetworkRetType = string

// Area The basic properties of a network area.
type Area struct {
	// A list containing DNS Servers/Nameservers for IPv4.
	DefaultNameservers AreaGetDefaultNameserversAttributeType `json:"defaultNameservers,omitempty"`
	// A list of network ranges.
	NetworkRanges AreaGetNetworkRangesAttributeType `json:"networkRanges,omitempty"`
	// A list of routes.
	Routes AreaGetRoutesAttributeType `json:"routes,omitempty"`
	// Classless Inter-Domain Routing (CIDR).
	TransferNetwork AreaGetTransferNetworkAttributeType `json:"transferNetwork,omitempty"`
}

// NewArea instantiates a new Area object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArea() *Area {
	this := Area{}
	return &this
}

// NewAreaWithDefaults instantiates a new Area object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAreaWithDefaults() *Area {
	this := Area{}
	return &this
}

// GetDefaultNameservers returns the DefaultNameservers field value if set, zero value otherwise.
func (o *Area) GetDefaultNameservers() (res AreaGetDefaultNameserversRetType) {
	res, _ = o.GetDefaultNameserversOk()
	return
}

// GetDefaultNameserversOk returns a tuple with the DefaultNameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Area) GetDefaultNameserversOk() (ret AreaGetDefaultNameserversRetType, ok bool) {
	return getAreaGetDefaultNameserversAttributeTypeOk(o.DefaultNameservers)
}

// HasDefaultNameservers returns a boolean if a field has been set.
func (o *Area) HasDefaultNameservers() bool {
	_, ok := o.GetDefaultNameserversOk()
	return ok
}

// SetDefaultNameservers gets a reference to the given []string and assigns it to the DefaultNameservers field.
func (o *Area) SetDefaultNameservers(v AreaGetDefaultNameserversRetType) {
	setAreaGetDefaultNameserversAttributeType(&o.DefaultNameservers, v)
}

// GetNetworkRanges returns the NetworkRanges field value if set, zero value otherwise.
func (o *Area) GetNetworkRanges() (res AreaGetNetworkRangesRetType) {
	res, _ = o.GetNetworkRangesOk()
	return
}

// GetNetworkRangesOk returns a tuple with the NetworkRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Area) GetNetworkRangesOk() (ret AreaGetNetworkRangesRetType, ok bool) {
	return getAreaGetNetworkRangesAttributeTypeOk(o.NetworkRanges)
}

// HasNetworkRanges returns a boolean if a field has been set.
func (o *Area) HasNetworkRanges() bool {
	_, ok := o.GetNetworkRangesOk()
	return ok
}

// SetNetworkRanges gets a reference to the given []NetworkRange and assigns it to the NetworkRanges field.
func (o *Area) SetNetworkRanges(v AreaGetNetworkRangesRetType) {
	setAreaGetNetworkRangesAttributeType(&o.NetworkRanges, v)
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *Area) GetRoutes() (res AreaGetRoutesRetType) {
	res, _ = o.GetRoutesOk()
	return
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Area) GetRoutesOk() (ret AreaGetRoutesRetType, ok bool) {
	return getAreaGetRoutesAttributeTypeOk(o.Routes)
}

// HasRoutes returns a boolean if a field has been set.
func (o *Area) HasRoutes() bool {
	_, ok := o.GetRoutesOk()
	return ok
}

// SetRoutes gets a reference to the given []Route and assigns it to the Routes field.
func (o *Area) SetRoutes(v AreaGetRoutesRetType) {
	setAreaGetRoutesAttributeType(&o.Routes, v)
}

// GetTransferNetwork returns the TransferNetwork field value if set, zero value otherwise.
func (o *Area) GetTransferNetwork() (res AreaGetTransferNetworkRetType) {
	res, _ = o.GetTransferNetworkOk()
	return
}

// GetTransferNetworkOk returns a tuple with the TransferNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Area) GetTransferNetworkOk() (ret AreaGetTransferNetworkRetType, ok bool) {
	return getAreaGetTransferNetworkAttributeTypeOk(o.TransferNetwork)
}

// HasTransferNetwork returns a boolean if a field has been set.
func (o *Area) HasTransferNetwork() bool {
	_, ok := o.GetTransferNetworkOk()
	return ok
}

// SetTransferNetwork gets a reference to the given string and assigns it to the TransferNetwork field.
func (o *Area) SetTransferNetwork(v AreaGetTransferNetworkRetType) {
	setAreaGetTransferNetworkAttributeType(&o.TransferNetwork, v)
}

func (o Area) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getAreaGetDefaultNameserversAttributeTypeOk(o.DefaultNameservers); ok {
		toSerialize["DefaultNameservers"] = val
	}
	if val, ok := getAreaGetNetworkRangesAttributeTypeOk(o.NetworkRanges); ok {
		toSerialize["NetworkRanges"] = val
	}
	if val, ok := getAreaGetRoutesAttributeTypeOk(o.Routes); ok {
		toSerialize["Routes"] = val
	}
	if val, ok := getAreaGetTransferNetworkAttributeTypeOk(o.TransferNetwork); ok {
		toSerialize["TransferNetwork"] = val
	}
	return toSerialize, nil
}

type NullableArea struct {
	value *Area
	isSet bool
}

func (v NullableArea) Get() *Area {
	return v.value
}

func (v *NullableArea) Set(val *Area) {
	v.value = val
	v.isSet = true
}

func (v NullableArea) IsSet() bool {
	return v.isSet
}

func (v *NullableArea) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArea(val *Area) *NullableArea {
	return &NullableArea{value: val, isSet: true}
}

func (v NullableArea) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArea) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
