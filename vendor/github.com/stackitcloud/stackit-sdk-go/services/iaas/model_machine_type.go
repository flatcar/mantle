/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the MachineType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineType{}

/*
	types and functions for description
*/

// isNotNullableString
type MachineTypeGetDescriptionAttributeType = *string

func getMachineTypeGetDescriptionAttributeTypeOk(arg MachineTypeGetDescriptionAttributeType) (ret MachineTypeGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetDescriptionAttributeType(arg *MachineTypeGetDescriptionAttributeType, val MachineTypeGetDescriptionRetType) {
	*arg = &val
}

type MachineTypeGetDescriptionArgType = string
type MachineTypeGetDescriptionRetType = string

/*
	types and functions for disk
*/

// isLong
type MachineTypeGetDiskAttributeType = *int64
type MachineTypeGetDiskArgType = int64
type MachineTypeGetDiskRetType = int64

func getMachineTypeGetDiskAttributeTypeOk(arg MachineTypeGetDiskAttributeType) (ret MachineTypeGetDiskRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetDiskAttributeType(arg *MachineTypeGetDiskAttributeType, val MachineTypeGetDiskRetType) {
	*arg = &val
}

/*
	types and functions for extraSpecs
*/

// isFreeform
type MachineTypeGetExtraSpecsAttributeType = *map[string]interface{}
type MachineTypeGetExtraSpecsArgType = map[string]interface{}
type MachineTypeGetExtraSpecsRetType = map[string]interface{}

func getMachineTypeGetExtraSpecsAttributeTypeOk(arg MachineTypeGetExtraSpecsAttributeType) (ret MachineTypeGetExtraSpecsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetExtraSpecsAttributeType(arg *MachineTypeGetExtraSpecsAttributeType, val MachineTypeGetExtraSpecsRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type MachineTypeGetNameAttributeType = *string

func getMachineTypeGetNameAttributeTypeOk(arg MachineTypeGetNameAttributeType) (ret MachineTypeGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetNameAttributeType(arg *MachineTypeGetNameAttributeType, val MachineTypeGetNameRetType) {
	*arg = &val
}

type MachineTypeGetNameArgType = string
type MachineTypeGetNameRetType = string

/*
	types and functions for ram
*/

// isLong
type MachineTypeGetRamAttributeType = *int64
type MachineTypeGetRamArgType = int64
type MachineTypeGetRamRetType = int64

func getMachineTypeGetRamAttributeTypeOk(arg MachineTypeGetRamAttributeType) (ret MachineTypeGetRamRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetRamAttributeType(arg *MachineTypeGetRamAttributeType, val MachineTypeGetRamRetType) {
	*arg = &val
}

/*
	types and functions for vcpus
*/

// isLong
type MachineTypeGetVcpusAttributeType = *int64
type MachineTypeGetVcpusArgType = int64
type MachineTypeGetVcpusRetType = int64

func getMachineTypeGetVcpusAttributeTypeOk(arg MachineTypeGetVcpusAttributeType) (ret MachineTypeGetVcpusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetVcpusAttributeType(arg *MachineTypeGetVcpusAttributeType, val MachineTypeGetVcpusRetType) {
	*arg = &val
}

// MachineType Machine Type. Filterable Fields: `disk`, `extraSpecs`, `name`, `ram`, `vcpus`.
type MachineType struct {
	// Description Object. Allows string up to 255 Characters.
	Description MachineTypeGetDescriptionAttributeType `json:"description,omitempty"`
	// Size in Gigabyte.
	// REQUIRED
	Disk MachineTypeGetDiskAttributeType `json:"disk" required:"true"`
	// Properties to control certain aspects or scheduling behavior for an object.
	ExtraSpecs MachineTypeGetExtraSpecsAttributeType `json:"extraSpecs,omitempty"`
	// The name for a General Object. Matches Names and also UUIDs.
	// REQUIRED
	Name MachineTypeGetNameAttributeType `json:"name" required:"true"`
	// Size in Megabyte.
	// REQUIRED
	Ram MachineTypeGetRamAttributeType `json:"ram" required:"true"`
	// The number of virtual CPUs of a server.
	// REQUIRED
	Vcpus MachineTypeGetVcpusAttributeType `json:"vcpus" required:"true"`
}

type _MachineType MachineType

// NewMachineType instantiates a new MachineType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineType(disk MachineTypeGetDiskArgType, name MachineTypeGetNameArgType, ram MachineTypeGetRamArgType, vcpus MachineTypeGetVcpusArgType) *MachineType {
	this := MachineType{}
	setMachineTypeGetDiskAttributeType(&this.Disk, disk)
	setMachineTypeGetNameAttributeType(&this.Name, name)
	setMachineTypeGetRamAttributeType(&this.Ram, ram)
	setMachineTypeGetVcpusAttributeType(&this.Vcpus, vcpus)
	return &this
}

// NewMachineTypeWithDefaults instantiates a new MachineType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineTypeWithDefaults() *MachineType {
	this := MachineType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MachineType) GetDescription() (res MachineTypeGetDescriptionRetType) {
	res, _ = o.GetDescriptionOk()
	return
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineType) GetDescriptionOk() (ret MachineTypeGetDescriptionRetType, ok bool) {
	return getMachineTypeGetDescriptionAttributeTypeOk(o.Description)
}

// HasDescription returns a boolean if a field has been set.
func (o *MachineType) HasDescription() bool {
	_, ok := o.GetDescriptionOk()
	return ok
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MachineType) SetDescription(v MachineTypeGetDescriptionRetType) {
	setMachineTypeGetDescriptionAttributeType(&o.Description, v)
}

// GetDisk returns the Disk field value
func (o *MachineType) GetDisk() (ret MachineTypeGetDiskRetType) {
	ret, _ = o.GetDiskOk()
	return ret
}

// GetDiskOk returns a tuple with the Disk field value
// and a boolean to check if the value has been set.
func (o *MachineType) GetDiskOk() (ret MachineTypeGetDiskRetType, ok bool) {
	return getMachineTypeGetDiskAttributeTypeOk(o.Disk)
}

// SetDisk sets field value
func (o *MachineType) SetDisk(v MachineTypeGetDiskRetType) {
	setMachineTypeGetDiskAttributeType(&o.Disk, v)
}

// GetExtraSpecs returns the ExtraSpecs field value if set, zero value otherwise.
func (o *MachineType) GetExtraSpecs() (res MachineTypeGetExtraSpecsRetType) {
	res, _ = o.GetExtraSpecsOk()
	return
}

// GetExtraSpecsOk returns a tuple with the ExtraSpecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineType) GetExtraSpecsOk() (ret MachineTypeGetExtraSpecsRetType, ok bool) {
	return getMachineTypeGetExtraSpecsAttributeTypeOk(o.ExtraSpecs)
}

// HasExtraSpecs returns a boolean if a field has been set.
func (o *MachineType) HasExtraSpecs() bool {
	_, ok := o.GetExtraSpecsOk()
	return ok
}

// SetExtraSpecs gets a reference to the given map[string]interface{} and assigns it to the ExtraSpecs field.
func (o *MachineType) SetExtraSpecs(v MachineTypeGetExtraSpecsRetType) {
	setMachineTypeGetExtraSpecsAttributeType(&o.ExtraSpecs, v)
}

// GetName returns the Name field value
func (o *MachineType) GetName() (ret MachineTypeGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MachineType) GetNameOk() (ret MachineTypeGetNameRetType, ok bool) {
	return getMachineTypeGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *MachineType) SetName(v MachineTypeGetNameRetType) {
	setMachineTypeGetNameAttributeType(&o.Name, v)
}

// GetRam returns the Ram field value
func (o *MachineType) GetRam() (ret MachineTypeGetRamRetType) {
	ret, _ = o.GetRamOk()
	return ret
}

// GetRamOk returns a tuple with the Ram field value
// and a boolean to check if the value has been set.
func (o *MachineType) GetRamOk() (ret MachineTypeGetRamRetType, ok bool) {
	return getMachineTypeGetRamAttributeTypeOk(o.Ram)
}

// SetRam sets field value
func (o *MachineType) SetRam(v MachineTypeGetRamRetType) {
	setMachineTypeGetRamAttributeType(&o.Ram, v)
}

// GetVcpus returns the Vcpus field value
func (o *MachineType) GetVcpus() (ret MachineTypeGetVcpusRetType) {
	ret, _ = o.GetVcpusOk()
	return ret
}

// GetVcpusOk returns a tuple with the Vcpus field value
// and a boolean to check if the value has been set.
func (o *MachineType) GetVcpusOk() (ret MachineTypeGetVcpusRetType, ok bool) {
	return getMachineTypeGetVcpusAttributeTypeOk(o.Vcpus)
}

// SetVcpus sets field value
func (o *MachineType) SetVcpus(v MachineTypeGetVcpusRetType) {
	setMachineTypeGetVcpusAttributeType(&o.Vcpus, v)
}

func (o MachineType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getMachineTypeGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getMachineTypeGetDiskAttributeTypeOk(o.Disk); ok {
		toSerialize["Disk"] = val
	}
	if val, ok := getMachineTypeGetExtraSpecsAttributeTypeOk(o.ExtraSpecs); ok {
		toSerialize["ExtraSpecs"] = val
	}
	if val, ok := getMachineTypeGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getMachineTypeGetRamAttributeTypeOk(o.Ram); ok {
		toSerialize["Ram"] = val
	}
	if val, ok := getMachineTypeGetVcpusAttributeTypeOk(o.Vcpus); ok {
		toSerialize["Vcpus"] = val
	}
	return toSerialize, nil
}

type NullableMachineType struct {
	value *MachineType
	isSet bool
}

func (v NullableMachineType) Get() *MachineType {
	return v.value
}

func (v *NullableMachineType) Set(val *MachineType) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineType) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineType(val *MachineType) *NullableMachineType {
	return &NullableMachineType{value: val, isSet: true}
}

func (v NullableMachineType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
