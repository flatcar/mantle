/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ImageListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageListResponse{}

/*
	types and functions for items
*/

// isArray
type ImageListResponseGetItemsAttributeType = *[]Image
type ImageListResponseGetItemsArgType = []Image
type ImageListResponseGetItemsRetType = []Image

func getImageListResponseGetItemsAttributeTypeOk(arg ImageListResponseGetItemsAttributeType) (ret ImageListResponseGetItemsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageListResponseGetItemsAttributeType(arg *ImageListResponseGetItemsAttributeType, val ImageListResponseGetItemsRetType) {
	*arg = &val
}

// ImageListResponse Image list response.
type ImageListResponse struct {
	// A list containing image objects.
	// REQUIRED
	Items ImageListResponseGetItemsAttributeType `json:"items" required:"true"`
}

type _ImageListResponse ImageListResponse

// NewImageListResponse instantiates a new ImageListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageListResponse(items ImageListResponseGetItemsArgType) *ImageListResponse {
	this := ImageListResponse{}
	setImageListResponseGetItemsAttributeType(&this.Items, items)
	return &this
}

// NewImageListResponseWithDefaults instantiates a new ImageListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageListResponseWithDefaults() *ImageListResponse {
	this := ImageListResponse{}
	return &this
}

// GetItems returns the Items field value
func (o *ImageListResponse) GetItems() (ret ImageListResponseGetItemsRetType) {
	ret, _ = o.GetItemsOk()
	return ret
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *ImageListResponse) GetItemsOk() (ret ImageListResponseGetItemsRetType, ok bool) {
	return getImageListResponseGetItemsAttributeTypeOk(o.Items)
}

// SetItems sets field value
func (o *ImageListResponse) SetItems(v ImageListResponseGetItemsRetType) {
	setImageListResponseGetItemsAttributeType(&o.Items, v)
}

func (o ImageListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getImageListResponseGetItemsAttributeTypeOk(o.Items); ok {
		toSerialize["Items"] = val
	}
	return toSerialize, nil
}

type NullableImageListResponse struct {
	value *ImageListResponse
	isSet bool
}

func (v NullableImageListResponse) Get() *ImageListResponse {
	return v.value
}

func (v *NullableImageListResponse) Set(val *ImageListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImageListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImageListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageListResponse(val *ImageListResponse) *NullableImageListResponse {
	return &NullableImageListResponse{value: val, isSet: true}
}

func (v NullableImageListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
