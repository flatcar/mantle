/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the AddVolumeToServerPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVolumeToServerPayload{}

/*
	types and functions for deleteOnTermination
*/

// isBoolean
type AddVolumeToServerPayloadgetDeleteOnTerminationAttributeType = *bool
type AddVolumeToServerPayloadgetDeleteOnTerminationArgType = bool
type AddVolumeToServerPayloadgetDeleteOnTerminationRetType = bool

func getAddVolumeToServerPayloadgetDeleteOnTerminationAttributeTypeOk(arg AddVolumeToServerPayloadgetDeleteOnTerminationAttributeType) (ret AddVolumeToServerPayloadgetDeleteOnTerminationRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAddVolumeToServerPayloadgetDeleteOnTerminationAttributeType(arg *AddVolumeToServerPayloadgetDeleteOnTerminationAttributeType, val AddVolumeToServerPayloadgetDeleteOnTerminationRetType) {
	*arg = &val
}

/*
	types and functions for serverId
*/

// isNotNullableString
type AddVolumeToServerPayloadGetServerIdAttributeType = *string

func getAddVolumeToServerPayloadGetServerIdAttributeTypeOk(arg AddVolumeToServerPayloadGetServerIdAttributeType) (ret AddVolumeToServerPayloadGetServerIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAddVolumeToServerPayloadGetServerIdAttributeType(arg *AddVolumeToServerPayloadGetServerIdAttributeType, val AddVolumeToServerPayloadGetServerIdRetType) {
	*arg = &val
}

type AddVolumeToServerPayloadGetServerIdArgType = string
type AddVolumeToServerPayloadGetServerIdRetType = string

/*
	types and functions for volumeId
*/

// isNotNullableString
type AddVolumeToServerPayloadGetVolumeIdAttributeType = *string

func getAddVolumeToServerPayloadGetVolumeIdAttributeTypeOk(arg AddVolumeToServerPayloadGetVolumeIdAttributeType) (ret AddVolumeToServerPayloadGetVolumeIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAddVolumeToServerPayloadGetVolumeIdAttributeType(arg *AddVolumeToServerPayloadGetVolumeIdAttributeType, val AddVolumeToServerPayloadGetVolumeIdRetType) {
	*arg = &val
}

type AddVolumeToServerPayloadGetVolumeIdArgType = string
type AddVolumeToServerPayloadGetVolumeIdRetType = string

// AddVolumeToServerPayload Object that represents a Volume attachment to a server.
type AddVolumeToServerPayload struct {
	// Delete the volume during the termination of the server. Defaults to false.
	DeleteOnTermination AddVolumeToServerPayloadgetDeleteOnTerminationAttributeType `json:"deleteOnTermination,omitempty"`
	// Universally Unique Identifier (UUID).
	ServerId AddVolumeToServerPayloadGetServerIdAttributeType `json:"serverId,omitempty"`
	// Universally Unique Identifier (UUID).
	VolumeId AddVolumeToServerPayloadGetVolumeIdAttributeType `json:"volumeId,omitempty"`
}

// NewAddVolumeToServerPayload instantiates a new AddVolumeToServerPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVolumeToServerPayload() *AddVolumeToServerPayload {
	this := AddVolumeToServerPayload{}
	return &this
}

// NewAddVolumeToServerPayloadWithDefaults instantiates a new AddVolumeToServerPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVolumeToServerPayloadWithDefaults() *AddVolumeToServerPayload {
	this := AddVolumeToServerPayload{}
	return &this
}

// GetDeleteOnTermination returns the DeleteOnTermination field value if set, zero value otherwise.
func (o *AddVolumeToServerPayload) GetDeleteOnTermination() (res AddVolumeToServerPayloadgetDeleteOnTerminationRetType) {
	res, _ = o.GetDeleteOnTerminationOk()
	return
}

// GetDeleteOnTerminationOk returns a tuple with the DeleteOnTermination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVolumeToServerPayload) GetDeleteOnTerminationOk() (ret AddVolumeToServerPayloadgetDeleteOnTerminationRetType, ok bool) {
	return getAddVolumeToServerPayloadgetDeleteOnTerminationAttributeTypeOk(o.DeleteOnTermination)
}

// HasDeleteOnTermination returns a boolean if a field has been set.
func (o *AddVolumeToServerPayload) HasDeleteOnTermination() bool {
	_, ok := o.GetDeleteOnTerminationOk()
	return ok
}

// SetDeleteOnTermination gets a reference to the given bool and assigns it to the DeleteOnTermination field.
func (o *AddVolumeToServerPayload) SetDeleteOnTermination(v AddVolumeToServerPayloadgetDeleteOnTerminationRetType) {
	setAddVolumeToServerPayloadgetDeleteOnTerminationAttributeType(&o.DeleteOnTermination, v)
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *AddVolumeToServerPayload) GetServerId() (res AddVolumeToServerPayloadGetServerIdRetType) {
	res, _ = o.GetServerIdOk()
	return
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVolumeToServerPayload) GetServerIdOk() (ret AddVolumeToServerPayloadGetServerIdRetType, ok bool) {
	return getAddVolumeToServerPayloadGetServerIdAttributeTypeOk(o.ServerId)
}

// HasServerId returns a boolean if a field has been set.
func (o *AddVolumeToServerPayload) HasServerId() bool {
	_, ok := o.GetServerIdOk()
	return ok
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *AddVolumeToServerPayload) SetServerId(v AddVolumeToServerPayloadGetServerIdRetType) {
	setAddVolumeToServerPayloadGetServerIdAttributeType(&o.ServerId, v)
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *AddVolumeToServerPayload) GetVolumeId() (res AddVolumeToServerPayloadGetVolumeIdRetType) {
	res, _ = o.GetVolumeIdOk()
	return
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVolumeToServerPayload) GetVolumeIdOk() (ret AddVolumeToServerPayloadGetVolumeIdRetType, ok bool) {
	return getAddVolumeToServerPayloadGetVolumeIdAttributeTypeOk(o.VolumeId)
}

// HasVolumeId returns a boolean if a field has been set.
func (o *AddVolumeToServerPayload) HasVolumeId() bool {
	_, ok := o.GetVolumeIdOk()
	return ok
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *AddVolumeToServerPayload) SetVolumeId(v AddVolumeToServerPayloadGetVolumeIdRetType) {
	setAddVolumeToServerPayloadGetVolumeIdAttributeType(&o.VolumeId, v)
}

func (o AddVolumeToServerPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getAddVolumeToServerPayloadgetDeleteOnTerminationAttributeTypeOk(o.DeleteOnTermination); ok {
		toSerialize["DeleteOnTermination"] = val
	}
	if val, ok := getAddVolumeToServerPayloadGetServerIdAttributeTypeOk(o.ServerId); ok {
		toSerialize["ServerId"] = val
	}
	if val, ok := getAddVolumeToServerPayloadGetVolumeIdAttributeTypeOk(o.VolumeId); ok {
		toSerialize["VolumeId"] = val
	}
	return toSerialize, nil
}

type NullableAddVolumeToServerPayload struct {
	value *AddVolumeToServerPayload
	isSet bool
}

func (v NullableAddVolumeToServerPayload) Get() *AddVolumeToServerPayload {
	return v.value
}

func (v *NullableAddVolumeToServerPayload) Set(val *AddVolumeToServerPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVolumeToServerPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVolumeToServerPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVolumeToServerPayload(val *AddVolumeToServerPayload) *NullableAddVolumeToServerPayload {
	return &NullableAddVolumeToServerPayload{value: val, isSet: true}
}

func (v NullableAddVolumeToServerPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVolumeToServerPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
