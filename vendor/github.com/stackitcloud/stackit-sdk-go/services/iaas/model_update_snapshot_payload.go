/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the UpdateSnapshotPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSnapshotPayload{}

/*
	types and functions for labels
*/

// isFreeform
type UpdateSnapshotPayloadGetLabelsAttributeType = *map[string]interface{}
type UpdateSnapshotPayloadGetLabelsArgType = map[string]interface{}
type UpdateSnapshotPayloadGetLabelsRetType = map[string]interface{}

func getUpdateSnapshotPayloadGetLabelsAttributeTypeOk(arg UpdateSnapshotPayloadGetLabelsAttributeType) (ret UpdateSnapshotPayloadGetLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateSnapshotPayloadGetLabelsAttributeType(arg *UpdateSnapshotPayloadGetLabelsAttributeType, val UpdateSnapshotPayloadGetLabelsRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type UpdateSnapshotPayloadGetNameAttributeType = *string

func getUpdateSnapshotPayloadGetNameAttributeTypeOk(arg UpdateSnapshotPayloadGetNameAttributeType) (ret UpdateSnapshotPayloadGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateSnapshotPayloadGetNameAttributeType(arg *UpdateSnapshotPayloadGetNameAttributeType, val UpdateSnapshotPayloadGetNameRetType) {
	*arg = &val
}

type UpdateSnapshotPayloadGetNameArgType = string
type UpdateSnapshotPayloadGetNameRetType = string

// UpdateSnapshotPayload Object that represents an update request body of a snapshot.
type UpdateSnapshotPayload struct {
	// Object that represents the labels of an object. Regex for keys: `^(?=.{1,63}$)([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$`. Regex for values: `^(?=.{0,63}$)(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])*$`. Providing a `null` value for a key will remove that key.
	Labels UpdateSnapshotPayloadGetLabelsAttributeType `json:"labels,omitempty"`
	// The name for a General Object. Matches Names and also UUIDs.
	Name UpdateSnapshotPayloadGetNameAttributeType `json:"name,omitempty"`
}

// NewUpdateSnapshotPayload instantiates a new UpdateSnapshotPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSnapshotPayload() *UpdateSnapshotPayload {
	this := UpdateSnapshotPayload{}
	return &this
}

// NewUpdateSnapshotPayloadWithDefaults instantiates a new UpdateSnapshotPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSnapshotPayloadWithDefaults() *UpdateSnapshotPayload {
	this := UpdateSnapshotPayload{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateSnapshotPayload) GetLabels() (res UpdateSnapshotPayloadGetLabelsRetType) {
	res, _ = o.GetLabelsOk()
	return
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSnapshotPayload) GetLabelsOk() (ret UpdateSnapshotPayloadGetLabelsRetType, ok bool) {
	return getUpdateSnapshotPayloadGetLabelsAttributeTypeOk(o.Labels)
}

// HasLabels returns a boolean if a field has been set.
func (o *UpdateSnapshotPayload) HasLabels() bool {
	_, ok := o.GetLabelsOk()
	return ok
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *UpdateSnapshotPayload) SetLabels(v UpdateSnapshotPayloadGetLabelsRetType) {
	setUpdateSnapshotPayloadGetLabelsAttributeType(&o.Labels, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateSnapshotPayload) GetName() (res UpdateSnapshotPayloadGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSnapshotPayload) GetNameOk() (ret UpdateSnapshotPayloadGetNameRetType, ok bool) {
	return getUpdateSnapshotPayloadGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *UpdateSnapshotPayload) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateSnapshotPayload) SetName(v UpdateSnapshotPayloadGetNameRetType) {
	setUpdateSnapshotPayloadGetNameAttributeType(&o.Name, v)
}

func (o UpdateSnapshotPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateSnapshotPayloadGetLabelsAttributeTypeOk(o.Labels); ok {
		toSerialize["Labels"] = val
	}
	if val, ok := getUpdateSnapshotPayloadGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullableUpdateSnapshotPayload struct {
	value *UpdateSnapshotPayload
	isSet bool
}

func (v NullableUpdateSnapshotPayload) Get() *UpdateSnapshotPayload {
	return v.value
}

func (v *NullableUpdateSnapshotPayload) Set(val *UpdateSnapshotPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSnapshotPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSnapshotPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSnapshotPayload(val *UpdateSnapshotPayload) *NullableUpdateSnapshotPayload {
	return &NullableUpdateSnapshotPayload{value: val, isSet: true}
}

func (v NullableUpdateSnapshotPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSnapshotPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
