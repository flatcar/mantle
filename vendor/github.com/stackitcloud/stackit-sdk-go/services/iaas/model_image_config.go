/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ImageConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageConfig{}

/*
	types and functions for architecture
*/

// isNotNullableString
type ImageConfigGetArchitectureAttributeType = *string

func getImageConfigGetArchitectureAttributeTypeOk(arg ImageConfigGetArchitectureAttributeType) (ret ImageConfigGetArchitectureRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageConfigGetArchitectureAttributeType(arg *ImageConfigGetArchitectureAttributeType, val ImageConfigGetArchitectureRetType) {
	*arg = &val
}

type ImageConfigGetArchitectureArgType = string
type ImageConfigGetArchitectureRetType = string

/*
	types and functions for bootMenu
*/

// isBoolean
type ImageConfiggetBootMenuAttributeType = *bool
type ImageConfiggetBootMenuArgType = bool
type ImageConfiggetBootMenuRetType = bool

func getImageConfiggetBootMenuAttributeTypeOk(arg ImageConfiggetBootMenuAttributeType) (ret ImageConfiggetBootMenuRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageConfiggetBootMenuAttributeType(arg *ImageConfiggetBootMenuAttributeType, val ImageConfiggetBootMenuRetType) {
	*arg = &val
}

/*
	types and functions for cdromBus
*/

// isNullableString
type ImageConfigGetCdromBusAttributeType = *NullableString

func getImageConfigGetCdromBusAttributeTypeOk(arg ImageConfigGetCdromBusAttributeType) (ret ImageConfigGetCdromBusRetType, ok bool) {
	if arg == nil {
		return nil, false
	}
	return arg.Get(), true
}

func setImageConfigGetCdromBusAttributeType(arg *ImageConfigGetCdromBusAttributeType, val ImageConfigGetCdromBusRetType) {
	if IsNil(*arg) {
		*arg = NewNullableString(val)
	} else {
		(*arg).Set(val)
	}
}

type ImageConfigGetCdromBusArgType = *string
type ImageConfigGetCdromBusRetType = *string

/*
	types and functions for diskBus
*/

// isNullableString
type ImageConfigGetDiskBusAttributeType = *NullableString

func getImageConfigGetDiskBusAttributeTypeOk(arg ImageConfigGetDiskBusAttributeType) (ret ImageConfigGetDiskBusRetType, ok bool) {
	if arg == nil {
		return nil, false
	}
	return arg.Get(), true
}

func setImageConfigGetDiskBusAttributeType(arg *ImageConfigGetDiskBusAttributeType, val ImageConfigGetDiskBusRetType) {
	if IsNil(*arg) {
		*arg = NewNullableString(val)
	} else {
		(*arg).Set(val)
	}
}

type ImageConfigGetDiskBusArgType = *string
type ImageConfigGetDiskBusRetType = *string

/*
	types and functions for nicModel
*/

// isNullableString
type ImageConfigGetNicModelAttributeType = *NullableString

func getImageConfigGetNicModelAttributeTypeOk(arg ImageConfigGetNicModelAttributeType) (ret ImageConfigGetNicModelRetType, ok bool) {
	if arg == nil {
		return nil, false
	}
	return arg.Get(), true
}

func setImageConfigGetNicModelAttributeType(arg *ImageConfigGetNicModelAttributeType, val ImageConfigGetNicModelRetType) {
	if IsNil(*arg) {
		*arg = NewNullableString(val)
	} else {
		(*arg).Set(val)
	}
}

type ImageConfigGetNicModelArgType = *string
type ImageConfigGetNicModelRetType = *string

/*
	types and functions for operatingSystem
*/

// isNotNullableString
type ImageConfigGetOperatingSystemAttributeType = *string

func getImageConfigGetOperatingSystemAttributeTypeOk(arg ImageConfigGetOperatingSystemAttributeType) (ret ImageConfigGetOperatingSystemRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageConfigGetOperatingSystemAttributeType(arg *ImageConfigGetOperatingSystemAttributeType, val ImageConfigGetOperatingSystemRetType) {
	*arg = &val
}

type ImageConfigGetOperatingSystemArgType = string
type ImageConfigGetOperatingSystemRetType = string

/*
	types and functions for operatingSystemDistro
*/

// isNullableString
type ImageConfigGetOperatingSystemDistroAttributeType = *NullableString

func getImageConfigGetOperatingSystemDistroAttributeTypeOk(arg ImageConfigGetOperatingSystemDistroAttributeType) (ret ImageConfigGetOperatingSystemDistroRetType, ok bool) {
	if arg == nil {
		return nil, false
	}
	return arg.Get(), true
}

func setImageConfigGetOperatingSystemDistroAttributeType(arg *ImageConfigGetOperatingSystemDistroAttributeType, val ImageConfigGetOperatingSystemDistroRetType) {
	if IsNil(*arg) {
		*arg = NewNullableString(val)
	} else {
		(*arg).Set(val)
	}
}

type ImageConfigGetOperatingSystemDistroArgType = *string
type ImageConfigGetOperatingSystemDistroRetType = *string

/*
	types and functions for operatingSystemVersion
*/

// isNullableString
type ImageConfigGetOperatingSystemVersionAttributeType = *NullableString

func getImageConfigGetOperatingSystemVersionAttributeTypeOk(arg ImageConfigGetOperatingSystemVersionAttributeType) (ret ImageConfigGetOperatingSystemVersionRetType, ok bool) {
	if arg == nil {
		return nil, false
	}
	return arg.Get(), true
}

func setImageConfigGetOperatingSystemVersionAttributeType(arg *ImageConfigGetOperatingSystemVersionAttributeType, val ImageConfigGetOperatingSystemVersionRetType) {
	if IsNil(*arg) {
		*arg = NewNullableString(val)
	} else {
		(*arg).Set(val)
	}
}

type ImageConfigGetOperatingSystemVersionArgType = *string
type ImageConfigGetOperatingSystemVersionRetType = *string

/*
	types and functions for rescueBus
*/

// isNullableString
type ImageConfigGetRescueBusAttributeType = *NullableString

func getImageConfigGetRescueBusAttributeTypeOk(arg ImageConfigGetRescueBusAttributeType) (ret ImageConfigGetRescueBusRetType, ok bool) {
	if arg == nil {
		return nil, false
	}
	return arg.Get(), true
}

func setImageConfigGetRescueBusAttributeType(arg *ImageConfigGetRescueBusAttributeType, val ImageConfigGetRescueBusRetType) {
	if IsNil(*arg) {
		*arg = NewNullableString(val)
	} else {
		(*arg).Set(val)
	}
}

type ImageConfigGetRescueBusArgType = *string
type ImageConfigGetRescueBusRetType = *string

/*
	types and functions for rescueDevice
*/

// isNullableString
type ImageConfigGetRescueDeviceAttributeType = *NullableString

func getImageConfigGetRescueDeviceAttributeTypeOk(arg ImageConfigGetRescueDeviceAttributeType) (ret ImageConfigGetRescueDeviceRetType, ok bool) {
	if arg == nil {
		return nil, false
	}
	return arg.Get(), true
}

func setImageConfigGetRescueDeviceAttributeType(arg *ImageConfigGetRescueDeviceAttributeType, val ImageConfigGetRescueDeviceRetType) {
	if IsNil(*arg) {
		*arg = NewNullableString(val)
	} else {
		(*arg).Set(val)
	}
}

type ImageConfigGetRescueDeviceArgType = *string
type ImageConfigGetRescueDeviceRetType = *string

/*
	types and functions for secureBoot
*/

// isBoolean
type ImageConfiggetSecureBootAttributeType = *bool
type ImageConfiggetSecureBootArgType = bool
type ImageConfiggetSecureBootRetType = bool

func getImageConfiggetSecureBootAttributeTypeOk(arg ImageConfiggetSecureBootAttributeType) (ret ImageConfiggetSecureBootRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageConfiggetSecureBootAttributeType(arg *ImageConfiggetSecureBootAttributeType, val ImageConfiggetSecureBootRetType) {
	*arg = &val
}

/*
	types and functions for uefi
*/

// isBoolean
type ImageConfiggetUefiAttributeType = *bool
type ImageConfiggetUefiArgType = bool
type ImageConfiggetUefiRetType = bool

func getImageConfiggetUefiAttributeTypeOk(arg ImageConfiggetUefiAttributeType) (ret ImageConfiggetUefiRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageConfiggetUefiAttributeType(arg *ImageConfiggetUefiAttributeType, val ImageConfiggetUefiRetType) {
	*arg = &val
}

/*
	types and functions for videoModel
*/

// isNullableString
type ImageConfigGetVideoModelAttributeType = *NullableString

func getImageConfigGetVideoModelAttributeTypeOk(arg ImageConfigGetVideoModelAttributeType) (ret ImageConfigGetVideoModelRetType, ok bool) {
	if arg == nil {
		return nil, false
	}
	return arg.Get(), true
}

func setImageConfigGetVideoModelAttributeType(arg *ImageConfigGetVideoModelAttributeType, val ImageConfigGetVideoModelRetType) {
	if IsNil(*arg) {
		*arg = NewNullableString(val)
	} else {
		(*arg).Set(val)
	}
}

type ImageConfigGetVideoModelArgType = *string
type ImageConfigGetVideoModelRetType = *string

/*
	types and functions for virtioScsi
*/

// isBoolean
type ImageConfiggetVirtioScsiAttributeType = *bool
type ImageConfiggetVirtioScsiArgType = bool
type ImageConfiggetVirtioScsiRetType = bool

func getImageConfiggetVirtioScsiAttributeTypeOk(arg ImageConfiggetVirtioScsiAttributeType) (ret ImageConfiggetVirtioScsiRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageConfiggetVirtioScsiAttributeType(arg *ImageConfiggetVirtioScsiAttributeType, val ImageConfiggetVirtioScsiRetType) {
	*arg = &val
}

// ImageConfig Properties to set hardware and scheduling settings for an Image.
type ImageConfig struct {
	// Represents CPU architecture. The default for new images is x86. Possible values: `arm64`, `x86`.
	Architecture ImageConfigGetArchitectureAttributeType `json:"architecture,omitempty"`
	// Enables the BIOS bootmenu. The default for new images is disabled.
	BootMenu ImageConfiggetBootMenuAttributeType `json:"bootMenu,omitempty"`
	// Sets CDROM bus controller type. Possible values: `scsi`, `virtio`, `ide`, `usb`.
	CdromBus ImageConfigGetCdromBusAttributeType `json:"cdromBus,omitempty"`
	// Sets Disk bus controller type. Possible values: `scsi`, `virtio`, `ide`, `usb`.
	DiskBus ImageConfigGetDiskBusAttributeType `json:"diskBus,omitempty"`
	// Sets virtual nic model. Possible values: `e1000`, `e1000e`, `ne2k_pci`, `pcnet`, `rtl8139`, `virtio`, `vmxnet3`.
	NicModel ImageConfigGetNicModelAttributeType `json:"nicModel,omitempty"`
	// Enables OS specific optimizations. Possible values: `windows`, `linux`.
	OperatingSystem ImageConfigGetOperatingSystemAttributeType `json:"operatingSystem,omitempty"`
	// Operating System Distribution.
	OperatingSystemDistro ImageConfigGetOperatingSystemDistroAttributeType `json:"operatingSystemDistro,omitempty"`
	// Version of the OS.
	OperatingSystemVersion ImageConfigGetOperatingSystemVersionAttributeType `json:"operatingSystemVersion,omitempty"`
	// Sets the device bus when the image is used as a rescue image. Possible values: `sata`, `scsi`, `virtio`, `usb`.
	RescueBus ImageConfigGetRescueBusAttributeType `json:"rescueBus,omitempty"`
	// Sets the device when the image is used as a rescue image. Possible values: `cdrom`, `disk`.
	RescueDevice ImageConfigGetRescueDeviceAttributeType `json:"rescueDevice,omitempty"`
	// Enables Secure Boot. The default for new images is disabled.
	SecureBoot ImageConfiggetSecureBootAttributeType `json:"secureBoot,omitempty"`
	// Configure UEFI boot. The default for new images is enabled.
	Uefi ImageConfiggetUefiAttributeType `json:"uefi,omitempty"`
	// Sets Graphic device model. Possible values: `vga`, `cirrus`, `vmvga`, `qxl`, `virtio`, `none`.
	VideoModel ImageConfigGetVideoModelAttributeType `json:"videoModel,omitempty"`
	// Enables the use of VirtIO SCSI to provide block device access. By default servers use VirtIO Block.
	VirtioScsi ImageConfiggetVirtioScsiAttributeType `json:"virtioScsi,omitempty"`
}

// NewImageConfig instantiates a new ImageConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageConfig() *ImageConfig {
	this := ImageConfig{}
	return &this
}

// NewImageConfigWithDefaults instantiates a new ImageConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageConfigWithDefaults() *ImageConfig {
	this := ImageConfig{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *ImageConfig) GetArchitecture() (res ImageConfigGetArchitectureRetType) {
	res, _ = o.GetArchitectureOk()
	return
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetArchitectureOk() (ret ImageConfigGetArchitectureRetType, ok bool) {
	return getImageConfigGetArchitectureAttributeTypeOk(o.Architecture)
}

// HasArchitecture returns a boolean if a field has been set.
func (o *ImageConfig) HasArchitecture() bool {
	_, ok := o.GetArchitectureOk()
	return ok
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *ImageConfig) SetArchitecture(v ImageConfigGetArchitectureRetType) {
	setImageConfigGetArchitectureAttributeType(&o.Architecture, v)
}

// GetBootMenu returns the BootMenu field value if set, zero value otherwise.
func (o *ImageConfig) GetBootMenu() (res ImageConfiggetBootMenuRetType) {
	res, _ = o.GetBootMenuOk()
	return
}

// GetBootMenuOk returns a tuple with the BootMenu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetBootMenuOk() (ret ImageConfiggetBootMenuRetType, ok bool) {
	return getImageConfiggetBootMenuAttributeTypeOk(o.BootMenu)
}

// HasBootMenu returns a boolean if a field has been set.
func (o *ImageConfig) HasBootMenu() bool {
	_, ok := o.GetBootMenuOk()
	return ok
}

// SetBootMenu gets a reference to the given bool and assigns it to the BootMenu field.
func (o *ImageConfig) SetBootMenu(v ImageConfiggetBootMenuRetType) {
	setImageConfiggetBootMenuAttributeType(&o.BootMenu, v)
}

// GetCdromBus returns the CdromBus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetCdromBus() (res ImageConfigGetCdromBusRetType) {
	res, _ = o.GetCdromBusOk()
	return
}

// GetCdromBusOk returns a tuple with the CdromBus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetCdromBusOk() (ret ImageConfigGetCdromBusRetType, ok bool) {
	return getImageConfigGetCdromBusAttributeTypeOk(o.CdromBus)
}

// HasCdromBus returns a boolean if a field has been set.
func (o *ImageConfig) HasCdromBus() bool {
	_, ok := o.GetCdromBusOk()
	return ok
}

// SetCdromBus gets a reference to the given string and assigns it to the CdromBus field.
func (o *ImageConfig) SetCdromBus(v ImageConfigGetCdromBusRetType) {
	setImageConfigGetCdromBusAttributeType(&o.CdromBus, v)
}

// SetCdromBusNil sets the value for CdromBus to be an explicit nil
func (o *ImageConfig) SetCdromBusNil() {
	o.CdromBus = nil
}

// UnsetCdromBus ensures that no value is present for CdromBus, not even an explicit nil
func (o *ImageConfig) UnsetCdromBus() {
	o.CdromBus = nil
}

// GetDiskBus returns the DiskBus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetDiskBus() (res ImageConfigGetDiskBusRetType) {
	res, _ = o.GetDiskBusOk()
	return
}

// GetDiskBusOk returns a tuple with the DiskBus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetDiskBusOk() (ret ImageConfigGetDiskBusRetType, ok bool) {
	return getImageConfigGetDiskBusAttributeTypeOk(o.DiskBus)
}

// HasDiskBus returns a boolean if a field has been set.
func (o *ImageConfig) HasDiskBus() bool {
	_, ok := o.GetDiskBusOk()
	return ok
}

// SetDiskBus gets a reference to the given string and assigns it to the DiskBus field.
func (o *ImageConfig) SetDiskBus(v ImageConfigGetDiskBusRetType) {
	setImageConfigGetDiskBusAttributeType(&o.DiskBus, v)
}

// SetDiskBusNil sets the value for DiskBus to be an explicit nil
func (o *ImageConfig) SetDiskBusNil() {
	o.DiskBus = nil
}

// UnsetDiskBus ensures that no value is present for DiskBus, not even an explicit nil
func (o *ImageConfig) UnsetDiskBus() {
	o.DiskBus = nil
}

// GetNicModel returns the NicModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetNicModel() (res ImageConfigGetNicModelRetType) {
	res, _ = o.GetNicModelOk()
	return
}

// GetNicModelOk returns a tuple with the NicModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetNicModelOk() (ret ImageConfigGetNicModelRetType, ok bool) {
	return getImageConfigGetNicModelAttributeTypeOk(o.NicModel)
}

// HasNicModel returns a boolean if a field has been set.
func (o *ImageConfig) HasNicModel() bool {
	_, ok := o.GetNicModelOk()
	return ok
}

// SetNicModel gets a reference to the given string and assigns it to the NicModel field.
func (o *ImageConfig) SetNicModel(v ImageConfigGetNicModelRetType) {
	setImageConfigGetNicModelAttributeType(&o.NicModel, v)
}

// SetNicModelNil sets the value for NicModel to be an explicit nil
func (o *ImageConfig) SetNicModelNil() {
	o.NicModel = nil
}

// UnsetNicModel ensures that no value is present for NicModel, not even an explicit nil
func (o *ImageConfig) UnsetNicModel() {
	o.NicModel = nil
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *ImageConfig) GetOperatingSystem() (res ImageConfigGetOperatingSystemRetType) {
	res, _ = o.GetOperatingSystemOk()
	return
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetOperatingSystemOk() (ret ImageConfigGetOperatingSystemRetType, ok bool) {
	return getImageConfigGetOperatingSystemAttributeTypeOk(o.OperatingSystem)
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *ImageConfig) HasOperatingSystem() bool {
	_, ok := o.GetOperatingSystemOk()
	return ok
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *ImageConfig) SetOperatingSystem(v ImageConfigGetOperatingSystemRetType) {
	setImageConfigGetOperatingSystemAttributeType(&o.OperatingSystem, v)
}

// GetOperatingSystemDistro returns the OperatingSystemDistro field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetOperatingSystemDistro() (res ImageConfigGetOperatingSystemDistroRetType) {
	res, _ = o.GetOperatingSystemDistroOk()
	return
}

// GetOperatingSystemDistroOk returns a tuple with the OperatingSystemDistro field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetOperatingSystemDistroOk() (ret ImageConfigGetOperatingSystemDistroRetType, ok bool) {
	return getImageConfigGetOperatingSystemDistroAttributeTypeOk(o.OperatingSystemDistro)
}

// HasOperatingSystemDistro returns a boolean if a field has been set.
func (o *ImageConfig) HasOperatingSystemDistro() bool {
	_, ok := o.GetOperatingSystemDistroOk()
	return ok
}

// SetOperatingSystemDistro gets a reference to the given string and assigns it to the OperatingSystemDistro field.
func (o *ImageConfig) SetOperatingSystemDistro(v ImageConfigGetOperatingSystemDistroRetType) {
	setImageConfigGetOperatingSystemDistroAttributeType(&o.OperatingSystemDistro, v)
}

// SetOperatingSystemDistroNil sets the value for OperatingSystemDistro to be an explicit nil
func (o *ImageConfig) SetOperatingSystemDistroNil() {
	o.OperatingSystemDistro = nil
}

// UnsetOperatingSystemDistro ensures that no value is present for OperatingSystemDistro, not even an explicit nil
func (o *ImageConfig) UnsetOperatingSystemDistro() {
	o.OperatingSystemDistro = nil
}

// GetOperatingSystemVersion returns the OperatingSystemVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetOperatingSystemVersion() (res ImageConfigGetOperatingSystemVersionRetType) {
	res, _ = o.GetOperatingSystemVersionOk()
	return
}

// GetOperatingSystemVersionOk returns a tuple with the OperatingSystemVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetOperatingSystemVersionOk() (ret ImageConfigGetOperatingSystemVersionRetType, ok bool) {
	return getImageConfigGetOperatingSystemVersionAttributeTypeOk(o.OperatingSystemVersion)
}

// HasOperatingSystemVersion returns a boolean if a field has been set.
func (o *ImageConfig) HasOperatingSystemVersion() bool {
	_, ok := o.GetOperatingSystemVersionOk()
	return ok
}

// SetOperatingSystemVersion gets a reference to the given string and assigns it to the OperatingSystemVersion field.
func (o *ImageConfig) SetOperatingSystemVersion(v ImageConfigGetOperatingSystemVersionRetType) {
	setImageConfigGetOperatingSystemVersionAttributeType(&o.OperatingSystemVersion, v)
}

// SetOperatingSystemVersionNil sets the value for OperatingSystemVersion to be an explicit nil
func (o *ImageConfig) SetOperatingSystemVersionNil() {
	o.OperatingSystemVersion = nil
}

// UnsetOperatingSystemVersion ensures that no value is present for OperatingSystemVersion, not even an explicit nil
func (o *ImageConfig) UnsetOperatingSystemVersion() {
	o.OperatingSystemVersion = nil
}

// GetRescueBus returns the RescueBus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetRescueBus() (res ImageConfigGetRescueBusRetType) {
	res, _ = o.GetRescueBusOk()
	return
}

// GetRescueBusOk returns a tuple with the RescueBus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetRescueBusOk() (ret ImageConfigGetRescueBusRetType, ok bool) {
	return getImageConfigGetRescueBusAttributeTypeOk(o.RescueBus)
}

// HasRescueBus returns a boolean if a field has been set.
func (o *ImageConfig) HasRescueBus() bool {
	_, ok := o.GetRescueBusOk()
	return ok
}

// SetRescueBus gets a reference to the given string and assigns it to the RescueBus field.
func (o *ImageConfig) SetRescueBus(v ImageConfigGetRescueBusRetType) {
	setImageConfigGetRescueBusAttributeType(&o.RescueBus, v)
}

// SetRescueBusNil sets the value for RescueBus to be an explicit nil
func (o *ImageConfig) SetRescueBusNil() {
	o.RescueBus = nil
}

// UnsetRescueBus ensures that no value is present for RescueBus, not even an explicit nil
func (o *ImageConfig) UnsetRescueBus() {
	o.RescueBus = nil
}

// GetRescueDevice returns the RescueDevice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetRescueDevice() (res ImageConfigGetRescueDeviceRetType) {
	res, _ = o.GetRescueDeviceOk()
	return
}

// GetRescueDeviceOk returns a tuple with the RescueDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetRescueDeviceOk() (ret ImageConfigGetRescueDeviceRetType, ok bool) {
	return getImageConfigGetRescueDeviceAttributeTypeOk(o.RescueDevice)
}

// HasRescueDevice returns a boolean if a field has been set.
func (o *ImageConfig) HasRescueDevice() bool {
	_, ok := o.GetRescueDeviceOk()
	return ok
}

// SetRescueDevice gets a reference to the given string and assigns it to the RescueDevice field.
func (o *ImageConfig) SetRescueDevice(v ImageConfigGetRescueDeviceRetType) {
	setImageConfigGetRescueDeviceAttributeType(&o.RescueDevice, v)
}

// SetRescueDeviceNil sets the value for RescueDevice to be an explicit nil
func (o *ImageConfig) SetRescueDeviceNil() {
	o.RescueDevice = nil
}

// UnsetRescueDevice ensures that no value is present for RescueDevice, not even an explicit nil
func (o *ImageConfig) UnsetRescueDevice() {
	o.RescueDevice = nil
}

// GetSecureBoot returns the SecureBoot field value if set, zero value otherwise.
func (o *ImageConfig) GetSecureBoot() (res ImageConfiggetSecureBootRetType) {
	res, _ = o.GetSecureBootOk()
	return
}

// GetSecureBootOk returns a tuple with the SecureBoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetSecureBootOk() (ret ImageConfiggetSecureBootRetType, ok bool) {
	return getImageConfiggetSecureBootAttributeTypeOk(o.SecureBoot)
}

// HasSecureBoot returns a boolean if a field has been set.
func (o *ImageConfig) HasSecureBoot() bool {
	_, ok := o.GetSecureBootOk()
	return ok
}

// SetSecureBoot gets a reference to the given bool and assigns it to the SecureBoot field.
func (o *ImageConfig) SetSecureBoot(v ImageConfiggetSecureBootRetType) {
	setImageConfiggetSecureBootAttributeType(&o.SecureBoot, v)
}

// GetUefi returns the Uefi field value if set, zero value otherwise.
func (o *ImageConfig) GetUefi() (res ImageConfiggetUefiRetType) {
	res, _ = o.GetUefiOk()
	return
}

// GetUefiOk returns a tuple with the Uefi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetUefiOk() (ret ImageConfiggetUefiRetType, ok bool) {
	return getImageConfiggetUefiAttributeTypeOk(o.Uefi)
}

// HasUefi returns a boolean if a field has been set.
func (o *ImageConfig) HasUefi() bool {
	_, ok := o.GetUefiOk()
	return ok
}

// SetUefi gets a reference to the given bool and assigns it to the Uefi field.
func (o *ImageConfig) SetUefi(v ImageConfiggetUefiRetType) {
	setImageConfiggetUefiAttributeType(&o.Uefi, v)
}

// GetVideoModel returns the VideoModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetVideoModel() (res ImageConfigGetVideoModelRetType) {
	res, _ = o.GetVideoModelOk()
	return
}

// GetVideoModelOk returns a tuple with the VideoModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetVideoModelOk() (ret ImageConfigGetVideoModelRetType, ok bool) {
	return getImageConfigGetVideoModelAttributeTypeOk(o.VideoModel)
}

// HasVideoModel returns a boolean if a field has been set.
func (o *ImageConfig) HasVideoModel() bool {
	_, ok := o.GetVideoModelOk()
	return ok
}

// SetVideoModel gets a reference to the given string and assigns it to the VideoModel field.
func (o *ImageConfig) SetVideoModel(v ImageConfigGetVideoModelRetType) {
	setImageConfigGetVideoModelAttributeType(&o.VideoModel, v)
}

// SetVideoModelNil sets the value for VideoModel to be an explicit nil
func (o *ImageConfig) SetVideoModelNil() {
	o.VideoModel = nil
}

// UnsetVideoModel ensures that no value is present for VideoModel, not even an explicit nil
func (o *ImageConfig) UnsetVideoModel() {
	o.VideoModel = nil
}

// GetVirtioScsi returns the VirtioScsi field value if set, zero value otherwise.
func (o *ImageConfig) GetVirtioScsi() (res ImageConfiggetVirtioScsiRetType) {
	res, _ = o.GetVirtioScsiOk()
	return
}

// GetVirtioScsiOk returns a tuple with the VirtioScsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetVirtioScsiOk() (ret ImageConfiggetVirtioScsiRetType, ok bool) {
	return getImageConfiggetVirtioScsiAttributeTypeOk(o.VirtioScsi)
}

// HasVirtioScsi returns a boolean if a field has been set.
func (o *ImageConfig) HasVirtioScsi() bool {
	_, ok := o.GetVirtioScsiOk()
	return ok
}

// SetVirtioScsi gets a reference to the given bool and assigns it to the VirtioScsi field.
func (o *ImageConfig) SetVirtioScsi(v ImageConfiggetVirtioScsiRetType) {
	setImageConfiggetVirtioScsiAttributeType(&o.VirtioScsi, v)
}

func (o ImageConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getImageConfigGetArchitectureAttributeTypeOk(o.Architecture); ok {
		toSerialize["Architecture"] = val
	}
	if val, ok := getImageConfiggetBootMenuAttributeTypeOk(o.BootMenu); ok {
		toSerialize["BootMenu"] = val
	}
	if val, ok := getImageConfigGetCdromBusAttributeTypeOk(o.CdromBus); ok {
		toSerialize["CdromBus"] = val
	}
	if val, ok := getImageConfigGetDiskBusAttributeTypeOk(o.DiskBus); ok {
		toSerialize["DiskBus"] = val
	}
	if val, ok := getImageConfigGetNicModelAttributeTypeOk(o.NicModel); ok {
		toSerialize["NicModel"] = val
	}
	if val, ok := getImageConfigGetOperatingSystemAttributeTypeOk(o.OperatingSystem); ok {
		toSerialize["OperatingSystem"] = val
	}
	if val, ok := getImageConfigGetOperatingSystemDistroAttributeTypeOk(o.OperatingSystemDistro); ok {
		toSerialize["OperatingSystemDistro"] = val
	}
	if val, ok := getImageConfigGetOperatingSystemVersionAttributeTypeOk(o.OperatingSystemVersion); ok {
		toSerialize["OperatingSystemVersion"] = val
	}
	if val, ok := getImageConfigGetRescueBusAttributeTypeOk(o.RescueBus); ok {
		toSerialize["RescueBus"] = val
	}
	if val, ok := getImageConfigGetRescueDeviceAttributeTypeOk(o.RescueDevice); ok {
		toSerialize["RescueDevice"] = val
	}
	if val, ok := getImageConfiggetSecureBootAttributeTypeOk(o.SecureBoot); ok {
		toSerialize["SecureBoot"] = val
	}
	if val, ok := getImageConfiggetUefiAttributeTypeOk(o.Uefi); ok {
		toSerialize["Uefi"] = val
	}
	if val, ok := getImageConfigGetVideoModelAttributeTypeOk(o.VideoModel); ok {
		toSerialize["VideoModel"] = val
	}
	if val, ok := getImageConfiggetVirtioScsiAttributeTypeOk(o.VirtioScsi); ok {
		toSerialize["VirtioScsi"] = val
	}
	return toSerialize, nil
}

type NullableImageConfig struct {
	value *ImageConfig
	isSet bool
}

func (v NullableImageConfig) Get() *ImageConfig {
	return v.value
}

func (v *NullableImageConfig) Set(val *ImageConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableImageConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableImageConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageConfig(val *ImageConfig) *NullableImageConfig {
	return &NullableImageConfig{value: val, isSet: true}
}

func (v NullableImageConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
