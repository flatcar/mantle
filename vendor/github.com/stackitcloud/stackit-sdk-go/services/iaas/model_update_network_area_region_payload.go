/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the UpdateNetworkAreaRegionPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkAreaRegionPayload{}

/*
	types and functions for ipv4
*/

// isModel
type UpdateNetworkAreaRegionPayloadGetIpv4AttributeType = *UpdateRegionalAreaIPv4
type UpdateNetworkAreaRegionPayloadGetIpv4ArgType = UpdateRegionalAreaIPv4
type UpdateNetworkAreaRegionPayloadGetIpv4RetType = UpdateRegionalAreaIPv4

func getUpdateNetworkAreaRegionPayloadGetIpv4AttributeTypeOk(arg UpdateNetworkAreaRegionPayloadGetIpv4AttributeType) (ret UpdateNetworkAreaRegionPayloadGetIpv4RetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateNetworkAreaRegionPayloadGetIpv4AttributeType(arg *UpdateNetworkAreaRegionPayloadGetIpv4AttributeType, val UpdateNetworkAreaRegionPayloadGetIpv4RetType) {
	*arg = &val
}

// UpdateNetworkAreaRegionPayload Object that represents the request body for a regional network area update.
type UpdateNetworkAreaRegionPayload struct {
	Ipv4 UpdateNetworkAreaRegionPayloadGetIpv4AttributeType `json:"ipv4,omitempty"`
}

// NewUpdateNetworkAreaRegionPayload instantiates a new UpdateNetworkAreaRegionPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkAreaRegionPayload() *UpdateNetworkAreaRegionPayload {
	this := UpdateNetworkAreaRegionPayload{}
	return &this
}

// NewUpdateNetworkAreaRegionPayloadWithDefaults instantiates a new UpdateNetworkAreaRegionPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkAreaRegionPayloadWithDefaults() *UpdateNetworkAreaRegionPayload {
	this := UpdateNetworkAreaRegionPayload{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *UpdateNetworkAreaRegionPayload) GetIpv4() (res UpdateNetworkAreaRegionPayloadGetIpv4RetType) {
	res, _ = o.GetIpv4Ok()
	return
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkAreaRegionPayload) GetIpv4Ok() (ret UpdateNetworkAreaRegionPayloadGetIpv4RetType, ok bool) {
	return getUpdateNetworkAreaRegionPayloadGetIpv4AttributeTypeOk(o.Ipv4)
}

// HasIpv4 returns a boolean if a field has been set.
func (o *UpdateNetworkAreaRegionPayload) HasIpv4() bool {
	_, ok := o.GetIpv4Ok()
	return ok
}

// SetIpv4 gets a reference to the given UpdateRegionalAreaIPv4 and assigns it to the Ipv4 field.
func (o *UpdateNetworkAreaRegionPayload) SetIpv4(v UpdateNetworkAreaRegionPayloadGetIpv4RetType) {
	setUpdateNetworkAreaRegionPayloadGetIpv4AttributeType(&o.Ipv4, v)
}

func (o UpdateNetworkAreaRegionPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateNetworkAreaRegionPayloadGetIpv4AttributeTypeOk(o.Ipv4); ok {
		toSerialize["Ipv4"] = val
	}
	return toSerialize, nil
}

type NullableUpdateNetworkAreaRegionPayload struct {
	value *UpdateNetworkAreaRegionPayload
	isSet bool
}

func (v NullableUpdateNetworkAreaRegionPayload) Get() *UpdateNetworkAreaRegionPayload {
	return v.value
}

func (v *NullableUpdateNetworkAreaRegionPayload) Set(val *UpdateNetworkAreaRegionPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkAreaRegionPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkAreaRegionPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkAreaRegionPayload(val *UpdateNetworkAreaRegionPayload) *NullableUpdateNetworkAreaRegionPayload {
	return &NullableUpdateNetworkAreaRegionPayload{value: val, isSet: true}
}

func (v NullableUpdateNetworkAreaRegionPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkAreaRegionPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
