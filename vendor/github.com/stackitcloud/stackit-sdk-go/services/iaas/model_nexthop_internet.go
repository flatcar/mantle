/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the NexthopInternet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NexthopInternet{}

/*
	types and functions for type
*/

// isNotNullableString
type NexthopInternetGetTypeAttributeType = *string

func getNexthopInternetGetTypeAttributeTypeOk(arg NexthopInternetGetTypeAttributeType) (ret NexthopInternetGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setNexthopInternetGetTypeAttributeType(arg *NexthopInternetGetTypeAttributeType, val NexthopInternetGetTypeRetType) {
	*arg = &val
}

type NexthopInternetGetTypeArgType = string
type NexthopInternetGetTypeRetType = string

// NexthopInternet Object that represents a route to the internet.
type NexthopInternet struct {
	// REQUIRED
	Type NexthopInternetGetTypeAttributeType `json:"type" required:"true"`
}

type _NexthopInternet NexthopInternet

// NewNexthopInternet instantiates a new NexthopInternet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNexthopInternet(types NexthopInternetGetTypeArgType) *NexthopInternet {
	this := NexthopInternet{}
	setNexthopInternetGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewNexthopInternetWithDefaults instantiates a new NexthopInternet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNexthopInternetWithDefaults() *NexthopInternet {
	this := NexthopInternet{}
	return &this
}

// GetType returns the Type field value
func (o *NexthopInternet) GetType() (ret NexthopInternetGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NexthopInternet) GetTypeOk() (ret NexthopInternetGetTypeRetType, ok bool) {
	return getNexthopInternetGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *NexthopInternet) SetType(v NexthopInternetGetTypeRetType) {
	setNexthopInternetGetTypeAttributeType(&o.Type, v)
}

func (o NexthopInternet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getNexthopInternetGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableNexthopInternet struct {
	value *NexthopInternet
	isSet bool
}

func (v NullableNexthopInternet) Get() *NexthopInternet {
	return v.value
}

func (v *NullableNexthopInternet) Set(val *NexthopInternet) {
	v.value = val
	v.isSet = true
}

func (v NullableNexthopInternet) IsSet() bool {
	return v.isSet
}

func (v *NullableNexthopInternet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNexthopInternet(val *NexthopInternet) *NullableNexthopInternet {
	return &NullableNexthopInternet{value: val, isSet: true}
}

func (v NullableNexthopInternet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNexthopInternet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
