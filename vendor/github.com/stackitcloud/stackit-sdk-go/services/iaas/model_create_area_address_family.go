/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the CreateAreaAddressFamily type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAreaAddressFamily{}

/*
	types and functions for ipv4
*/

// isModel
type CreateAreaAddressFamilyGetIpv4AttributeType = *CreateAreaIPv4
type CreateAreaAddressFamilyGetIpv4ArgType = CreateAreaIPv4
type CreateAreaAddressFamilyGetIpv4RetType = CreateAreaIPv4

func getCreateAreaAddressFamilyGetIpv4AttributeTypeOk(arg CreateAreaAddressFamilyGetIpv4AttributeType) (ret CreateAreaAddressFamilyGetIpv4RetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateAreaAddressFamilyGetIpv4AttributeType(arg *CreateAreaAddressFamilyGetIpv4AttributeType, val CreateAreaAddressFamilyGetIpv4RetType) {
	*arg = &val
}

// CreateAreaAddressFamily The addressFamily object for a area create request.
type CreateAreaAddressFamily struct {
	Ipv4 CreateAreaAddressFamilyGetIpv4AttributeType `json:"ipv4,omitempty"`
}

// NewCreateAreaAddressFamily instantiates a new CreateAreaAddressFamily object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAreaAddressFamily() *CreateAreaAddressFamily {
	this := CreateAreaAddressFamily{}
	return &this
}

// NewCreateAreaAddressFamilyWithDefaults instantiates a new CreateAreaAddressFamily object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAreaAddressFamilyWithDefaults() *CreateAreaAddressFamily {
	this := CreateAreaAddressFamily{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *CreateAreaAddressFamily) GetIpv4() (res CreateAreaAddressFamilyGetIpv4RetType) {
	res, _ = o.GetIpv4Ok()
	return
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAreaAddressFamily) GetIpv4Ok() (ret CreateAreaAddressFamilyGetIpv4RetType, ok bool) {
	return getCreateAreaAddressFamilyGetIpv4AttributeTypeOk(o.Ipv4)
}

// HasIpv4 returns a boolean if a field has been set.
func (o *CreateAreaAddressFamily) HasIpv4() bool {
	_, ok := o.GetIpv4Ok()
	return ok
}

// SetIpv4 gets a reference to the given CreateAreaIPv4 and assigns it to the Ipv4 field.
func (o *CreateAreaAddressFamily) SetIpv4(v CreateAreaAddressFamilyGetIpv4RetType) {
	setCreateAreaAddressFamilyGetIpv4AttributeType(&o.Ipv4, v)
}

func (o CreateAreaAddressFamily) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateAreaAddressFamilyGetIpv4AttributeTypeOk(o.Ipv4); ok {
		toSerialize["Ipv4"] = val
	}
	return toSerialize, nil
}

type NullableCreateAreaAddressFamily struct {
	value *CreateAreaAddressFamily
	isSet bool
}

func (v NullableCreateAreaAddressFamily) Get() *CreateAreaAddressFamily {
	return v.value
}

func (v *NullableCreateAreaAddressFamily) Set(val *CreateAreaAddressFamily) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAreaAddressFamily) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAreaAddressFamily) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAreaAddressFamily(val *CreateAreaAddressFamily) *NullableCreateAreaAddressFamily {
	return &NullableCreateAreaAddressFamily{value: val, isSet: true}
}

func (v NullableCreateAreaAddressFamily) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAreaAddressFamily) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
