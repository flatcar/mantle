/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ImageChecksum type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageChecksum{}

/*
	types and functions for algorithm
*/

// isNotNullableString
type ImageChecksumGetAlgorithmAttributeType = *string

func getImageChecksumGetAlgorithmAttributeTypeOk(arg ImageChecksumGetAlgorithmAttributeType) (ret ImageChecksumGetAlgorithmRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageChecksumGetAlgorithmAttributeType(arg *ImageChecksumGetAlgorithmAttributeType, val ImageChecksumGetAlgorithmRetType) {
	*arg = &val
}

type ImageChecksumGetAlgorithmArgType = string
type ImageChecksumGetAlgorithmRetType = string

/*
	types and functions for digest
*/

// isNotNullableString
type ImageChecksumGetDigestAttributeType = *string

func getImageChecksumGetDigestAttributeTypeOk(arg ImageChecksumGetDigestAttributeType) (ret ImageChecksumGetDigestRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageChecksumGetDigestAttributeType(arg *ImageChecksumGetDigestAttributeType, val ImageChecksumGetDigestRetType) {
	*arg = &val
}

type ImageChecksumGetDigestArgType = string
type ImageChecksumGetDigestRetType = string

// ImageChecksum Representation of an image checksum.
type ImageChecksum struct {
	// Algorithm for the checksum of the image data. Possible values: `md5`, `sha512`.
	// REQUIRED
	Algorithm ImageChecksumGetAlgorithmAttributeType `json:"algorithm" required:"true"`
	// Hexdigest of the checksum of the image data.
	// REQUIRED
	Digest ImageChecksumGetDigestAttributeType `json:"digest" required:"true"`
}

type _ImageChecksum ImageChecksum

// NewImageChecksum instantiates a new ImageChecksum object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageChecksum(algorithm ImageChecksumGetAlgorithmArgType, digest ImageChecksumGetDigestArgType) *ImageChecksum {
	this := ImageChecksum{}
	setImageChecksumGetAlgorithmAttributeType(&this.Algorithm, algorithm)
	setImageChecksumGetDigestAttributeType(&this.Digest, digest)
	return &this
}

// NewImageChecksumWithDefaults instantiates a new ImageChecksum object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageChecksumWithDefaults() *ImageChecksum {
	this := ImageChecksum{}
	return &this
}

// GetAlgorithm returns the Algorithm field value
func (o *ImageChecksum) GetAlgorithm() (ret ImageChecksumGetAlgorithmRetType) {
	ret, _ = o.GetAlgorithmOk()
	return ret
}

// GetAlgorithmOk returns a tuple with the Algorithm field value
// and a boolean to check if the value has been set.
func (o *ImageChecksum) GetAlgorithmOk() (ret ImageChecksumGetAlgorithmRetType, ok bool) {
	return getImageChecksumGetAlgorithmAttributeTypeOk(o.Algorithm)
}

// SetAlgorithm sets field value
func (o *ImageChecksum) SetAlgorithm(v ImageChecksumGetAlgorithmRetType) {
	setImageChecksumGetAlgorithmAttributeType(&o.Algorithm, v)
}

// GetDigest returns the Digest field value
func (o *ImageChecksum) GetDigest() (ret ImageChecksumGetDigestRetType) {
	ret, _ = o.GetDigestOk()
	return ret
}

// GetDigestOk returns a tuple with the Digest field value
// and a boolean to check if the value has been set.
func (o *ImageChecksum) GetDigestOk() (ret ImageChecksumGetDigestRetType, ok bool) {
	return getImageChecksumGetDigestAttributeTypeOk(o.Digest)
}

// SetDigest sets field value
func (o *ImageChecksum) SetDigest(v ImageChecksumGetDigestRetType) {
	setImageChecksumGetDigestAttributeType(&o.Digest, v)
}

func (o ImageChecksum) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getImageChecksumGetAlgorithmAttributeTypeOk(o.Algorithm); ok {
		toSerialize["Algorithm"] = val
	}
	if val, ok := getImageChecksumGetDigestAttributeTypeOk(o.Digest); ok {
		toSerialize["Digest"] = val
	}
	return toSerialize, nil
}

type NullableImageChecksum struct {
	value *ImageChecksum
	isSet bool
}

func (v NullableImageChecksum) Get() *ImageChecksum {
	return v.value
}

func (v *NullableImageChecksum) Set(val *ImageChecksum) {
	v.value = val
	v.isSet = true
}

func (v NullableImageChecksum) IsSet() bool {
	return v.isSet
}

func (v *NullableImageChecksum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageChecksum(val *ImageChecksum) *NullableImageChecksum {
	return &NullableImageChecksum{value: val, isSet: true}
}

func (v NullableImageChecksum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageChecksum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
