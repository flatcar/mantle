/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the DestinationCIDRv4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DestinationCIDRv4{}

/*
	types and functions for type
*/

// isNotNullableString
type DestinationCIDRv4GetTypeAttributeType = *string

func getDestinationCIDRv4GetTypeAttributeTypeOk(arg DestinationCIDRv4GetTypeAttributeType) (ret DestinationCIDRv4GetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDestinationCIDRv4GetTypeAttributeType(arg *DestinationCIDRv4GetTypeAttributeType, val DestinationCIDRv4GetTypeRetType) {
	*arg = &val
}

type DestinationCIDRv4GetTypeArgType = string
type DestinationCIDRv4GetTypeRetType = string

/*
	types and functions for value
*/

// isNotNullableString
type DestinationCIDRv4GetValueAttributeType = *string

func getDestinationCIDRv4GetValueAttributeTypeOk(arg DestinationCIDRv4GetValueAttributeType) (ret DestinationCIDRv4GetValueRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDestinationCIDRv4GetValueAttributeType(arg *DestinationCIDRv4GetValueAttributeType, val DestinationCIDRv4GetValueRetType) {
	*arg = &val
}

type DestinationCIDRv4GetValueArgType = string
type DestinationCIDRv4GetValueRetType = string

// DestinationCIDRv4 IPv4 Classless Inter-Domain Routing (CIDR) Object.
type DestinationCIDRv4 struct {
	// REQUIRED
	Type DestinationCIDRv4GetTypeAttributeType `json:"type" required:"true"`
	// An CIDRv4 string.
	// REQUIRED
	Value DestinationCIDRv4GetValueAttributeType `json:"value" required:"true"`
}

type _DestinationCIDRv4 DestinationCIDRv4

// NewDestinationCIDRv4 instantiates a new DestinationCIDRv4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestinationCIDRv4(types DestinationCIDRv4GetTypeArgType, value DestinationCIDRv4GetValueArgType) *DestinationCIDRv4 {
	this := DestinationCIDRv4{}
	setDestinationCIDRv4GetTypeAttributeType(&this.Type, types)
	setDestinationCIDRv4GetValueAttributeType(&this.Value, value)
	return &this
}

// NewDestinationCIDRv4WithDefaults instantiates a new DestinationCIDRv4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationCIDRv4WithDefaults() *DestinationCIDRv4 {
	this := DestinationCIDRv4{}
	return &this
}

// GetType returns the Type field value
func (o *DestinationCIDRv4) GetType() (ret DestinationCIDRv4GetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DestinationCIDRv4) GetTypeOk() (ret DestinationCIDRv4GetTypeRetType, ok bool) {
	return getDestinationCIDRv4GetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *DestinationCIDRv4) SetType(v DestinationCIDRv4GetTypeRetType) {
	setDestinationCIDRv4GetTypeAttributeType(&o.Type, v)
}

// GetValue returns the Value field value
func (o *DestinationCIDRv4) GetValue() (ret DestinationCIDRv4GetValueRetType) {
	ret, _ = o.GetValueOk()
	return ret
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *DestinationCIDRv4) GetValueOk() (ret DestinationCIDRv4GetValueRetType, ok bool) {
	return getDestinationCIDRv4GetValueAttributeTypeOk(o.Value)
}

// SetValue sets field value
func (o *DestinationCIDRv4) SetValue(v DestinationCIDRv4GetValueRetType) {
	setDestinationCIDRv4GetValueAttributeType(&o.Value, v)
}

func (o DestinationCIDRv4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getDestinationCIDRv4GetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	if val, ok := getDestinationCIDRv4GetValueAttributeTypeOk(o.Value); ok {
		toSerialize["Value"] = val
	}
	return toSerialize, nil
}

type NullableDestinationCIDRv4 struct {
	value *DestinationCIDRv4
	isSet bool
}

func (v NullableDestinationCIDRv4) Get() *DestinationCIDRv4 {
	return v.value
}

func (v *NullableDestinationCIDRv4) Set(val *DestinationCIDRv4) {
	v.value = val
	v.isSet = true
}

func (v NullableDestinationCIDRv4) IsSet() bool {
	return v.isSet
}

func (v *NullableDestinationCIDRv4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestinationCIDRv4(val *DestinationCIDRv4) *NullableDestinationCIDRv4 {
	return &NullableDestinationCIDRv4{value: val, isSet: true}
}

func (v NullableDestinationCIDRv4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestinationCIDRv4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
