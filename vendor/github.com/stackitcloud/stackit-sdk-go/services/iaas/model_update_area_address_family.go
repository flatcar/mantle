/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the UpdateAreaAddressFamily type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAreaAddressFamily{}

/*
	types and functions for ipv4
*/

// isModel
type UpdateAreaAddressFamilyGetIpv4AttributeType = *UpdateAreaIPv4
type UpdateAreaAddressFamilyGetIpv4ArgType = UpdateAreaIPv4
type UpdateAreaAddressFamilyGetIpv4RetType = UpdateAreaIPv4

func getUpdateAreaAddressFamilyGetIpv4AttributeTypeOk(arg UpdateAreaAddressFamilyGetIpv4AttributeType) (ret UpdateAreaAddressFamilyGetIpv4RetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAreaAddressFamilyGetIpv4AttributeType(arg *UpdateAreaAddressFamilyGetIpv4AttributeType, val UpdateAreaAddressFamilyGetIpv4RetType) {
	*arg = &val
}

// UpdateAreaAddressFamily The addressFamily object for a area update request.
type UpdateAreaAddressFamily struct {
	Ipv4 UpdateAreaAddressFamilyGetIpv4AttributeType `json:"ipv4,omitempty"`
}

// NewUpdateAreaAddressFamily instantiates a new UpdateAreaAddressFamily object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAreaAddressFamily() *UpdateAreaAddressFamily {
	this := UpdateAreaAddressFamily{}
	return &this
}

// NewUpdateAreaAddressFamilyWithDefaults instantiates a new UpdateAreaAddressFamily object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAreaAddressFamilyWithDefaults() *UpdateAreaAddressFamily {
	this := UpdateAreaAddressFamily{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *UpdateAreaAddressFamily) GetIpv4() (res UpdateAreaAddressFamilyGetIpv4RetType) {
	res, _ = o.GetIpv4Ok()
	return
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAreaAddressFamily) GetIpv4Ok() (ret UpdateAreaAddressFamilyGetIpv4RetType, ok bool) {
	return getUpdateAreaAddressFamilyGetIpv4AttributeTypeOk(o.Ipv4)
}

// HasIpv4 returns a boolean if a field has been set.
func (o *UpdateAreaAddressFamily) HasIpv4() bool {
	_, ok := o.GetIpv4Ok()
	return ok
}

// SetIpv4 gets a reference to the given UpdateAreaIPv4 and assigns it to the Ipv4 field.
func (o *UpdateAreaAddressFamily) SetIpv4(v UpdateAreaAddressFamilyGetIpv4RetType) {
	setUpdateAreaAddressFamilyGetIpv4AttributeType(&o.Ipv4, v)
}

func (o UpdateAreaAddressFamily) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateAreaAddressFamilyGetIpv4AttributeTypeOk(o.Ipv4); ok {
		toSerialize["Ipv4"] = val
	}
	return toSerialize, nil
}

type NullableUpdateAreaAddressFamily struct {
	value *UpdateAreaAddressFamily
	isSet bool
}

func (v NullableUpdateAreaAddressFamily) Get() *UpdateAreaAddressFamily {
	return v.value
}

func (v *NullableUpdateAreaAddressFamily) Set(val *UpdateAreaAddressFamily) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAreaAddressFamily) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAreaAddressFamily) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAreaAddressFamily(val *UpdateAreaAddressFamily) *NullableUpdateAreaAddressFamily {
	return &NullableUpdateAreaAddressFamily{value: val, isSet: true}
}

func (v NullableUpdateAreaAddressFamily) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAreaAddressFamily) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
