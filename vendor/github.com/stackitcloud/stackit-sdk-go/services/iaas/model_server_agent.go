/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ServerAgent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerAgent{}

/*
	types and functions for provisioned
*/

// isBoolean
type ServerAgentgetProvisionedAttributeType = *bool
type ServerAgentgetProvisionedArgType = bool
type ServerAgentgetProvisionedRetType = bool

func getServerAgentgetProvisionedAttributeTypeOk(arg ServerAgentgetProvisionedAttributeType) (ret ServerAgentgetProvisionedRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServerAgentgetProvisionedAttributeType(arg *ServerAgentgetProvisionedAttributeType, val ServerAgentgetProvisionedRetType) {
	*arg = &val
}

// ServerAgent STACKIT server agent options for a server.
type ServerAgent struct {
	// Configure the STACKIT server agent provisioning during the first boot of the server. Only works when booting from an images that supports the STACKIT server agent. When `false` the agent IS NOT installed. When `true` the agent IS installed. When its not set the result depend on the used image and its default provisioning setting.
	Provisioned ServerAgentgetProvisionedAttributeType `json:"provisioned,omitempty"`
}

// NewServerAgent instantiates a new ServerAgent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerAgent() *ServerAgent {
	this := ServerAgent{}
	return &this
}

// NewServerAgentWithDefaults instantiates a new ServerAgent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerAgentWithDefaults() *ServerAgent {
	this := ServerAgent{}
	return &this
}

// GetProvisioned returns the Provisioned field value if set, zero value otherwise.
func (o *ServerAgent) GetProvisioned() (res ServerAgentgetProvisionedRetType) {
	res, _ = o.GetProvisionedOk()
	return
}

// GetProvisionedOk returns a tuple with the Provisioned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerAgent) GetProvisionedOk() (ret ServerAgentgetProvisionedRetType, ok bool) {
	return getServerAgentgetProvisionedAttributeTypeOk(o.Provisioned)
}

// HasProvisioned returns a boolean if a field has been set.
func (o *ServerAgent) HasProvisioned() bool {
	_, ok := o.GetProvisionedOk()
	return ok
}

// SetProvisioned gets a reference to the given bool and assigns it to the Provisioned field.
func (o *ServerAgent) SetProvisioned(v ServerAgentgetProvisionedRetType) {
	setServerAgentgetProvisionedAttributeType(&o.Provisioned, v)
}

func (o ServerAgent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getServerAgentgetProvisionedAttributeTypeOk(o.Provisioned); ok {
		toSerialize["Provisioned"] = val
	}
	return toSerialize, nil
}

type NullableServerAgent struct {
	value *ServerAgent
	isSet bool
}

func (v NullableServerAgent) Get() *ServerAgent {
	return v.value
}

func (v *NullableServerAgent) Set(val *ServerAgent) {
	v.value = val
	v.isSet = true
}

func (v NullableServerAgent) IsSet() bool {
	return v.isSet
}

func (v *NullableServerAgent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerAgent(val *ServerAgent) *NullableServerAgent {
	return &NullableServerAgent{value: val, isSet: true}
}

func (v NullableServerAgent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerAgent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
