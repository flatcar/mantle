/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the CreateBackupPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBackupPayload{}

/*
	types and functions for labels
*/

// isFreeform
type CreateBackupPayloadGetLabelsAttributeType = *map[string]interface{}
type CreateBackupPayloadGetLabelsArgType = map[string]interface{}
type CreateBackupPayloadGetLabelsRetType = map[string]interface{}

func getCreateBackupPayloadGetLabelsAttributeTypeOk(arg CreateBackupPayloadGetLabelsAttributeType) (ret CreateBackupPayloadGetLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateBackupPayloadGetLabelsAttributeType(arg *CreateBackupPayloadGetLabelsAttributeType, val CreateBackupPayloadGetLabelsRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type CreateBackupPayloadGetNameAttributeType = *string

func getCreateBackupPayloadGetNameAttributeTypeOk(arg CreateBackupPayloadGetNameAttributeType) (ret CreateBackupPayloadGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateBackupPayloadGetNameAttributeType(arg *CreateBackupPayloadGetNameAttributeType, val CreateBackupPayloadGetNameRetType) {
	*arg = &val
}

type CreateBackupPayloadGetNameArgType = string
type CreateBackupPayloadGetNameRetType = string

/*
	types and functions for source
*/

// isModel
type CreateBackupPayloadGetSourceAttributeType = *BackupSource
type CreateBackupPayloadGetSourceArgType = BackupSource
type CreateBackupPayloadGetSourceRetType = BackupSource

func getCreateBackupPayloadGetSourceAttributeTypeOk(arg CreateBackupPayloadGetSourceAttributeType) (ret CreateBackupPayloadGetSourceRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateBackupPayloadGetSourceAttributeType(arg *CreateBackupPayloadGetSourceAttributeType, val CreateBackupPayloadGetSourceRetType) {
	*arg = &val
}

// CreateBackupPayload Object that represents a backup create request body.
type CreateBackupPayload struct {
	// Object that represents the labels of an object. Regex for keys: `^(?=.{1,63}$)([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$`. Regex for values: `^(?=.{0,63}$)(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])*$`. Providing a `null` value for a key will remove that key.
	Labels CreateBackupPayloadGetLabelsAttributeType `json:"labels,omitempty"`
	// The name for a General Object. Matches Names and also UUIDs.
	Name CreateBackupPayloadGetNameAttributeType `json:"name,omitempty"`
	// REQUIRED
	Source CreateBackupPayloadGetSourceAttributeType `json:"source" required:"true"`
}

type _CreateBackupPayload CreateBackupPayload

// NewCreateBackupPayload instantiates a new CreateBackupPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBackupPayload(source CreateBackupPayloadGetSourceArgType) *CreateBackupPayload {
	this := CreateBackupPayload{}
	setCreateBackupPayloadGetSourceAttributeType(&this.Source, source)
	return &this
}

// NewCreateBackupPayloadWithDefaults instantiates a new CreateBackupPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBackupPayloadWithDefaults() *CreateBackupPayload {
	this := CreateBackupPayload{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CreateBackupPayload) GetLabels() (res CreateBackupPayloadGetLabelsRetType) {
	res, _ = o.GetLabelsOk()
	return
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBackupPayload) GetLabelsOk() (ret CreateBackupPayloadGetLabelsRetType, ok bool) {
	return getCreateBackupPayloadGetLabelsAttributeTypeOk(o.Labels)
}

// HasLabels returns a boolean if a field has been set.
func (o *CreateBackupPayload) HasLabels() bool {
	_, ok := o.GetLabelsOk()
	return ok
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *CreateBackupPayload) SetLabels(v CreateBackupPayloadGetLabelsRetType) {
	setCreateBackupPayloadGetLabelsAttributeType(&o.Labels, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateBackupPayload) GetName() (res CreateBackupPayloadGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBackupPayload) GetNameOk() (ret CreateBackupPayloadGetNameRetType, ok bool) {
	return getCreateBackupPayloadGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *CreateBackupPayload) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateBackupPayload) SetName(v CreateBackupPayloadGetNameRetType) {
	setCreateBackupPayloadGetNameAttributeType(&o.Name, v)
}

// GetSource returns the Source field value
func (o *CreateBackupPayload) GetSource() (ret CreateBackupPayloadGetSourceRetType) {
	ret, _ = o.GetSourceOk()
	return ret
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *CreateBackupPayload) GetSourceOk() (ret CreateBackupPayloadGetSourceRetType, ok bool) {
	return getCreateBackupPayloadGetSourceAttributeTypeOk(o.Source)
}

// SetSource sets field value
func (o *CreateBackupPayload) SetSource(v CreateBackupPayloadGetSourceRetType) {
	setCreateBackupPayloadGetSourceAttributeType(&o.Source, v)
}

func (o CreateBackupPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateBackupPayloadGetLabelsAttributeTypeOk(o.Labels); ok {
		toSerialize["Labels"] = val
	}
	if val, ok := getCreateBackupPayloadGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getCreateBackupPayloadGetSourceAttributeTypeOk(o.Source); ok {
		toSerialize["Source"] = val
	}
	return toSerialize, nil
}

type NullableCreateBackupPayload struct {
	value *CreateBackupPayload
	isSet bool
}

func (v NullableCreateBackupPayload) Get() *CreateBackupPayload {
	return v.value
}

func (v *NullableCreateBackupPayload) Set(val *CreateBackupPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBackupPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBackupPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBackupPayload(val *CreateBackupPayload) *NullableCreateBackupPayload {
	return &NullableCreateBackupPayload{value: val, isSet: true}
}

func (v NullableCreateBackupPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBackupPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
