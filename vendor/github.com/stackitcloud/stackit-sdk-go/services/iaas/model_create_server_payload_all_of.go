/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the CreateServerPayloadAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateServerPayloadAllOf{}

/*
	types and functions for networking
*/

// isModel
type CreateServerPayloadAllOfGetNetworkingAttributeType = *CreateServerPayloadAllOfNetworking
type CreateServerPayloadAllOfGetNetworkingArgType = CreateServerPayloadAllOfNetworking
type CreateServerPayloadAllOfGetNetworkingRetType = CreateServerPayloadAllOfNetworking

func getCreateServerPayloadAllOfGetNetworkingAttributeTypeOk(arg CreateServerPayloadAllOfGetNetworkingAttributeType) (ret CreateServerPayloadAllOfGetNetworkingRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateServerPayloadAllOfGetNetworkingAttributeType(arg *CreateServerPayloadAllOfGetNetworkingAttributeType, val CreateServerPayloadAllOfGetNetworkingRetType) {
	*arg = &val
}

// CreateServerPayloadAllOf struct for CreateServerPayloadAllOf
type CreateServerPayloadAllOf struct {
	// REQUIRED
	Networking CreateServerPayloadAllOfGetNetworkingAttributeType `json:"networking" required:"true"`
}

type _CreateServerPayloadAllOf CreateServerPayloadAllOf

// NewCreateServerPayloadAllOf instantiates a new CreateServerPayloadAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServerPayloadAllOf(networking CreateServerPayloadAllOfGetNetworkingArgType) *CreateServerPayloadAllOf {
	this := CreateServerPayloadAllOf{}
	setCreateServerPayloadAllOfGetNetworkingAttributeType(&this.Networking, networking)
	return &this
}

// NewCreateServerPayloadAllOfWithDefaults instantiates a new CreateServerPayloadAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServerPayloadAllOfWithDefaults() *CreateServerPayloadAllOf {
	this := CreateServerPayloadAllOf{}
	return &this
}

// GetNetworking returns the Networking field value
func (o *CreateServerPayloadAllOf) GetNetworking() (ret CreateServerPayloadAllOfGetNetworkingRetType) {
	ret, _ = o.GetNetworkingOk()
	return ret
}

// GetNetworkingOk returns a tuple with the Networking field value
// and a boolean to check if the value has been set.
func (o *CreateServerPayloadAllOf) GetNetworkingOk() (ret CreateServerPayloadAllOfGetNetworkingRetType, ok bool) {
	return getCreateServerPayloadAllOfGetNetworkingAttributeTypeOk(o.Networking)
}

// SetNetworking sets field value
func (o *CreateServerPayloadAllOf) SetNetworking(v CreateServerPayloadAllOfGetNetworkingRetType) {
	setCreateServerPayloadAllOfGetNetworkingAttributeType(&o.Networking, v)
}

func (o CreateServerPayloadAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateServerPayloadAllOfGetNetworkingAttributeTypeOk(o.Networking); ok {
		toSerialize["Networking"] = val
	}
	return toSerialize, nil
}

type NullableCreateServerPayloadAllOf struct {
	value *CreateServerPayloadAllOf
	isSet bool
}

func (v NullableCreateServerPayloadAllOf) Get() *CreateServerPayloadAllOf {
	return v.value
}

func (v *NullableCreateServerPayloadAllOf) Set(val *CreateServerPayloadAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServerPayloadAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServerPayloadAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServerPayloadAllOf(val *CreateServerPayloadAllOf) *NullableCreateServerPayloadAllOf {
	return &NullableCreateServerPayloadAllOf{value: val, isSet: true}
}

func (v NullableCreateServerPayloadAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServerPayloadAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
