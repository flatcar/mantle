/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the QuotaListPublicIps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaListPublicIps{}

/*
	types and functions for limit
*/

// isLong
type QuotaListPublicIpsGetLimitAttributeType = *int64
type QuotaListPublicIpsGetLimitArgType = int64
type QuotaListPublicIpsGetLimitRetType = int64

func getQuotaListPublicIpsGetLimitAttributeTypeOk(arg QuotaListPublicIpsGetLimitAttributeType) (ret QuotaListPublicIpsGetLimitRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setQuotaListPublicIpsGetLimitAttributeType(arg *QuotaListPublicIpsGetLimitAttributeType, val QuotaListPublicIpsGetLimitRetType) {
	*arg = &val
}

/*
	types and functions for usage
*/

// isLong
type QuotaListPublicIpsGetUsageAttributeType = *int64
type QuotaListPublicIpsGetUsageArgType = int64
type QuotaListPublicIpsGetUsageRetType = int64

func getQuotaListPublicIpsGetUsageAttributeTypeOk(arg QuotaListPublicIpsGetUsageAttributeType) (ret QuotaListPublicIpsGetUsageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setQuotaListPublicIpsGetUsageAttributeType(arg *QuotaListPublicIpsGetUsageAttributeType, val QuotaListPublicIpsGetUsageRetType) {
	*arg = &val
}

// QuotaListPublicIps Number of public IP addresses.
type QuotaListPublicIps struct {
	// REQUIRED
	Limit QuotaListPublicIpsGetLimitAttributeType `json:"limit" required:"true"`
	// REQUIRED
	Usage QuotaListPublicIpsGetUsageAttributeType `json:"usage" required:"true"`
}

type _QuotaListPublicIps QuotaListPublicIps

// NewQuotaListPublicIps instantiates a new QuotaListPublicIps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaListPublicIps(limit QuotaListPublicIpsGetLimitArgType, usage QuotaListPublicIpsGetUsageArgType) *QuotaListPublicIps {
	this := QuotaListPublicIps{}
	setQuotaListPublicIpsGetLimitAttributeType(&this.Limit, limit)
	setQuotaListPublicIpsGetUsageAttributeType(&this.Usage, usage)
	return &this
}

// NewQuotaListPublicIpsWithDefaults instantiates a new QuotaListPublicIps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaListPublicIpsWithDefaults() *QuotaListPublicIps {
	this := QuotaListPublicIps{}
	return &this
}

// GetLimit returns the Limit field value
func (o *QuotaListPublicIps) GetLimit() (ret QuotaListPublicIpsGetLimitRetType) {
	ret, _ = o.GetLimitOk()
	return ret
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *QuotaListPublicIps) GetLimitOk() (ret QuotaListPublicIpsGetLimitRetType, ok bool) {
	return getQuotaListPublicIpsGetLimitAttributeTypeOk(o.Limit)
}

// SetLimit sets field value
func (o *QuotaListPublicIps) SetLimit(v QuotaListPublicIpsGetLimitRetType) {
	setQuotaListPublicIpsGetLimitAttributeType(&o.Limit, v)
}

// GetUsage returns the Usage field value
func (o *QuotaListPublicIps) GetUsage() (ret QuotaListPublicIpsGetUsageRetType) {
	ret, _ = o.GetUsageOk()
	return ret
}

// GetUsageOk returns a tuple with the Usage field value
// and a boolean to check if the value has been set.
func (o *QuotaListPublicIps) GetUsageOk() (ret QuotaListPublicIpsGetUsageRetType, ok bool) {
	return getQuotaListPublicIpsGetUsageAttributeTypeOk(o.Usage)
}

// SetUsage sets field value
func (o *QuotaListPublicIps) SetUsage(v QuotaListPublicIpsGetUsageRetType) {
	setQuotaListPublicIpsGetUsageAttributeType(&o.Usage, v)
}

func (o QuotaListPublicIps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getQuotaListPublicIpsGetLimitAttributeTypeOk(o.Limit); ok {
		toSerialize["Limit"] = val
	}
	if val, ok := getQuotaListPublicIpsGetUsageAttributeTypeOk(o.Usage); ok {
		toSerialize["Usage"] = val
	}
	return toSerialize, nil
}

type NullableQuotaListPublicIps struct {
	value *QuotaListPublicIps
	isSet bool
}

func (v NullableQuotaListPublicIps) Get() *QuotaListPublicIps {
	return v.value
}

func (v *NullableQuotaListPublicIps) Set(val *QuotaListPublicIps) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaListPublicIps) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaListPublicIps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaListPublicIps(val *QuotaListPublicIps) *NullableQuotaListPublicIps {
	return &NullableQuotaListPublicIps{value: val, isSet: true}
}

func (v NullableQuotaListPublicIps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaListPublicIps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
