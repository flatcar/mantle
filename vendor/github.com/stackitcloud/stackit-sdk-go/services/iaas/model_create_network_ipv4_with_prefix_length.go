/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the CreateNetworkIPv4WithPrefixLength type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkIPv4WithPrefixLength{}

/*
	types and functions for nameservers
*/

// isArray
type CreateNetworkIPv4WithPrefixLengthGetNameserversAttributeType = *[]string
type CreateNetworkIPv4WithPrefixLengthGetNameserversArgType = []string
type CreateNetworkIPv4WithPrefixLengthGetNameserversRetType = []string

func getCreateNetworkIPv4WithPrefixLengthGetNameserversAttributeTypeOk(arg CreateNetworkIPv4WithPrefixLengthGetNameserversAttributeType) (ret CreateNetworkIPv4WithPrefixLengthGetNameserversRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateNetworkIPv4WithPrefixLengthGetNameserversAttributeType(arg *CreateNetworkIPv4WithPrefixLengthGetNameserversAttributeType, val CreateNetworkIPv4WithPrefixLengthGetNameserversRetType) {
	*arg = &val
}

/*
	types and functions for prefixLength
*/

// isLong
type CreateNetworkIPv4WithPrefixLengthGetPrefixLengthAttributeType = *int64
type CreateNetworkIPv4WithPrefixLengthGetPrefixLengthArgType = int64
type CreateNetworkIPv4WithPrefixLengthGetPrefixLengthRetType = int64

func getCreateNetworkIPv4WithPrefixLengthGetPrefixLengthAttributeTypeOk(arg CreateNetworkIPv4WithPrefixLengthGetPrefixLengthAttributeType) (ret CreateNetworkIPv4WithPrefixLengthGetPrefixLengthRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateNetworkIPv4WithPrefixLengthGetPrefixLengthAttributeType(arg *CreateNetworkIPv4WithPrefixLengthGetPrefixLengthAttributeType, val CreateNetworkIPv4WithPrefixLengthGetPrefixLengthRetType) {
	*arg = &val
}

// CreateNetworkIPv4WithPrefixLength The create request for an IPv4 network with a wanted prefix length.
type CreateNetworkIPv4WithPrefixLength struct {
	// A list containing DNS Servers/Nameservers for IPv4.
	Nameservers CreateNetworkIPv4WithPrefixLengthGetNameserversAttributeType `json:"nameservers,omitempty"`
	// REQUIRED
	PrefixLength CreateNetworkIPv4WithPrefixLengthGetPrefixLengthAttributeType `json:"prefixLength" required:"true"`
}

type _CreateNetworkIPv4WithPrefixLength CreateNetworkIPv4WithPrefixLength

// NewCreateNetworkIPv4WithPrefixLength instantiates a new CreateNetworkIPv4WithPrefixLength object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkIPv4WithPrefixLength(prefixLength CreateNetworkIPv4WithPrefixLengthGetPrefixLengthArgType) *CreateNetworkIPv4WithPrefixLength {
	this := CreateNetworkIPv4WithPrefixLength{}
	setCreateNetworkIPv4WithPrefixLengthGetPrefixLengthAttributeType(&this.PrefixLength, prefixLength)
	return &this
}

// NewCreateNetworkIPv4WithPrefixLengthWithDefaults instantiates a new CreateNetworkIPv4WithPrefixLength object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkIPv4WithPrefixLengthWithDefaults() *CreateNetworkIPv4WithPrefixLength {
	this := CreateNetworkIPv4WithPrefixLength{}
	return &this
}

// GetNameservers returns the Nameservers field value if set, zero value otherwise.
func (o *CreateNetworkIPv4WithPrefixLength) GetNameservers() (res CreateNetworkIPv4WithPrefixLengthGetNameserversRetType) {
	res, _ = o.GetNameserversOk()
	return
}

// GetNameserversOk returns a tuple with the Nameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkIPv4WithPrefixLength) GetNameserversOk() (ret CreateNetworkIPv4WithPrefixLengthGetNameserversRetType, ok bool) {
	return getCreateNetworkIPv4WithPrefixLengthGetNameserversAttributeTypeOk(o.Nameservers)
}

// HasNameservers returns a boolean if a field has been set.
func (o *CreateNetworkIPv4WithPrefixLength) HasNameservers() bool {
	_, ok := o.GetNameserversOk()
	return ok
}

// SetNameservers gets a reference to the given []string and assigns it to the Nameservers field.
func (o *CreateNetworkIPv4WithPrefixLength) SetNameservers(v CreateNetworkIPv4WithPrefixLengthGetNameserversRetType) {
	setCreateNetworkIPv4WithPrefixLengthGetNameserversAttributeType(&o.Nameservers, v)
}

// GetPrefixLength returns the PrefixLength field value
func (o *CreateNetworkIPv4WithPrefixLength) GetPrefixLength() (ret CreateNetworkIPv4WithPrefixLengthGetPrefixLengthRetType) {
	ret, _ = o.GetPrefixLengthOk()
	return ret
}

// GetPrefixLengthOk returns a tuple with the PrefixLength field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkIPv4WithPrefixLength) GetPrefixLengthOk() (ret CreateNetworkIPv4WithPrefixLengthGetPrefixLengthRetType, ok bool) {
	return getCreateNetworkIPv4WithPrefixLengthGetPrefixLengthAttributeTypeOk(o.PrefixLength)
}

// SetPrefixLength sets field value
func (o *CreateNetworkIPv4WithPrefixLength) SetPrefixLength(v CreateNetworkIPv4WithPrefixLengthGetPrefixLengthRetType) {
	setCreateNetworkIPv4WithPrefixLengthGetPrefixLengthAttributeType(&o.PrefixLength, v)
}

func (o CreateNetworkIPv4WithPrefixLength) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateNetworkIPv4WithPrefixLengthGetNameserversAttributeTypeOk(o.Nameservers); ok {
		toSerialize["Nameservers"] = val
	}
	if val, ok := getCreateNetworkIPv4WithPrefixLengthGetPrefixLengthAttributeTypeOk(o.PrefixLength); ok {
		toSerialize["PrefixLength"] = val
	}
	return toSerialize, nil
}

type NullableCreateNetworkIPv4WithPrefixLength struct {
	value *CreateNetworkIPv4WithPrefixLength
	isSet bool
}

func (v NullableCreateNetworkIPv4WithPrefixLength) Get() *CreateNetworkIPv4WithPrefixLength {
	return v.value
}

func (v *NullableCreateNetworkIPv4WithPrefixLength) Set(val *CreateNetworkIPv4WithPrefixLength) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkIPv4WithPrefixLength) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkIPv4WithPrefixLength) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkIPv4WithPrefixLength(val *CreateNetworkIPv4WithPrefixLength) *NullableCreateNetworkIPv4WithPrefixLength {
	return &NullableCreateNetworkIPv4WithPrefixLength{value: val, isSet: true}
}

func (v NullableCreateNetworkIPv4WithPrefixLength) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkIPv4WithPrefixLength) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
