/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ImageAgent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageAgent{}

/*
	types and functions for provisionByDefault
*/

// isBoolean
type ImageAgentgetProvisionByDefaultAttributeType = *bool
type ImageAgentgetProvisionByDefaultArgType = bool
type ImageAgentgetProvisionByDefaultRetType = bool

func getImageAgentgetProvisionByDefaultAttributeTypeOk(arg ImageAgentgetProvisionByDefaultAttributeType) (ret ImageAgentgetProvisionByDefaultRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageAgentgetProvisionByDefaultAttributeType(arg *ImageAgentgetProvisionByDefaultAttributeType, val ImageAgentgetProvisionByDefaultRetType) {
	*arg = &val
}

/*
	types and functions for supported
*/

// isBoolean
type ImageAgentgetSupportedAttributeType = *bool
type ImageAgentgetSupportedArgType = bool
type ImageAgentgetSupportedRetType = bool

func getImageAgentgetSupportedAttributeTypeOk(arg ImageAgentgetSupportedAttributeType) (ret ImageAgentgetSupportedRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImageAgentgetSupportedAttributeType(arg *ImageAgentgetSupportedAttributeType, val ImageAgentgetSupportedRetType) {
	*arg = &val
}

// ImageAgent Support status and default provioning setting for the STACKIT server agent.
type ImageAgent struct {
	// Default provioning of the STACKIT server agent for new servers. The default for new images is false. Can only be enabled when supported is also true.
	ProvisionByDefault ImageAgentgetProvisionByDefaultAttributeType `json:"provisionByDefault,omitempty"`
	// Indicates the STACKIT server agent for the image. The default for new images is false.
	Supported ImageAgentgetSupportedAttributeType `json:"supported,omitempty"`
}

// NewImageAgent instantiates a new ImageAgent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageAgent() *ImageAgent {
	this := ImageAgent{}
	return &this
}

// NewImageAgentWithDefaults instantiates a new ImageAgent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageAgentWithDefaults() *ImageAgent {
	this := ImageAgent{}
	return &this
}

// GetProvisionByDefault returns the ProvisionByDefault field value if set, zero value otherwise.
func (o *ImageAgent) GetProvisionByDefault() (res ImageAgentgetProvisionByDefaultRetType) {
	res, _ = o.GetProvisionByDefaultOk()
	return
}

// GetProvisionByDefaultOk returns a tuple with the ProvisionByDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageAgent) GetProvisionByDefaultOk() (ret ImageAgentgetProvisionByDefaultRetType, ok bool) {
	return getImageAgentgetProvisionByDefaultAttributeTypeOk(o.ProvisionByDefault)
}

// HasProvisionByDefault returns a boolean if a field has been set.
func (o *ImageAgent) HasProvisionByDefault() bool {
	_, ok := o.GetProvisionByDefaultOk()
	return ok
}

// SetProvisionByDefault gets a reference to the given bool and assigns it to the ProvisionByDefault field.
func (o *ImageAgent) SetProvisionByDefault(v ImageAgentgetProvisionByDefaultRetType) {
	setImageAgentgetProvisionByDefaultAttributeType(&o.ProvisionByDefault, v)
}

// GetSupported returns the Supported field value if set, zero value otherwise.
func (o *ImageAgent) GetSupported() (res ImageAgentgetSupportedRetType) {
	res, _ = o.GetSupportedOk()
	return
}

// GetSupportedOk returns a tuple with the Supported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageAgent) GetSupportedOk() (ret ImageAgentgetSupportedRetType, ok bool) {
	return getImageAgentgetSupportedAttributeTypeOk(o.Supported)
}

// HasSupported returns a boolean if a field has been set.
func (o *ImageAgent) HasSupported() bool {
	_, ok := o.GetSupportedOk()
	return ok
}

// SetSupported gets a reference to the given bool and assigns it to the Supported field.
func (o *ImageAgent) SetSupported(v ImageAgentgetSupportedRetType) {
	setImageAgentgetSupportedAttributeType(&o.Supported, v)
}

func (o ImageAgent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getImageAgentgetProvisionByDefaultAttributeTypeOk(o.ProvisionByDefault); ok {
		toSerialize["ProvisionByDefault"] = val
	}
	if val, ok := getImageAgentgetSupportedAttributeTypeOk(o.Supported); ok {
		toSerialize["Supported"] = val
	}
	return toSerialize, nil
}

type NullableImageAgent struct {
	value *ImageAgent
	isSet bool
}

func (v NullableImageAgent) Get() *ImageAgent {
	return v.value
}

func (v *NullableImageAgent) Set(val *ImageAgent) {
	v.value = val
	v.isSet = true
}

func (v NullableImageAgent) IsSet() bool {
	return v.isSet
}

func (v *NullableImageAgent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageAgent(val *ImageAgent) *NullableImageAgent {
	return &NullableImageAgent{value: val, isSet: true}
}

func (v NullableImageAgent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageAgent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
