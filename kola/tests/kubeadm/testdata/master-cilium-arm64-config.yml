---
variant: flatcar
version: 1.0.0
systemd:
  units:
  - name: prepare-helm.service
    enabled: true
    contents: |
      [Unit]
      Description=Unpack helm to /opt/bin
      ConditionPathExists=!/opt/bin/helm
      [Service]
      Type=oneshot
      RemainAfterExit=true
      Restart=on-failure
      ExecStartPre=/usr/bin/mkdir --parents "/opt/bin"
      ExecStartPre=/usr/bin/tar -v --extract --file "/opt/helm-1.2.3-linux-arm64.tar.gz" --directory "/opt/bin" --strip-components=1 --no-same-owner
      ExecStart=/usr/bin/rm "/opt/helm-1.2.3-linux-arm64.tar.gz"
      [Install]
      WantedBy=multi-user.target
storage:
  links:
    - target: /opt/extensions/kubernetes/kubernetes-v1.29.2-arm64.raw
      path: /etc/extensions/kubernetes.raw
      hard: false
  files:
    - path: /opt/helm-1.2.3-linux-arm64.tar.gz
      mode: 0755
      contents:
        source: https://get.helm.sh/helm-1.2.3-linux-arm64.tar.gz
    - path: /opt/extensions/kubernetes/kubernetes-v1.29.2-arm64.raw
      contents:
        source: https://extensions.flatcar.org/extensions/kubernetes-v1.29.2-arm64.raw
  
    - path: /opt/bin/cilium.tar.gz
      mode: 0755
      contents:
        source: https://github.com/cilium/cilium-cli/releases/download/v0.9.0/cilium-linux-arm64.tar.gz
  
    - path: /home/core/install.sh
      mode: 0755
      contents:
        source: "data:text/plain;base64,<no value>"
    - path: /home/core/nginx.yaml
      mode: 0644
      contents:
        inline: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx-deployment
            labels:
              app: nginx
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: nginx
            template:
              metadata:
                labels:
                  app: nginx
              spec:
                containers:
                - name: nginx
                  image: ghcr.io/flatcar/nginx
                  ports:
                  - containerPort: 80
    - path: /home/core/nfs-pod.yaml
      mode: 0644
      contents:
        inline: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: test-pod-1
          spec:
            containers:
              - name: test
                image: ghcr.io/flatcar/nginx
                volumeMounts:
                  - name: config
                    mountPath: /test
            volumes:
              - name: config
                persistentVolumeClaim:
                  claimName: test-dynamic-volume-claim
    - path: /home/core/nfs-pvc.yaml
      mode: 0644
      contents:
        inline: |
          kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
            name: test-dynamic-volume-claim
          spec:
            storageClassName: "nfs"
            accessModes:
              - ReadWriteMany
            resources:
              requests:
                storage: 100Mi
